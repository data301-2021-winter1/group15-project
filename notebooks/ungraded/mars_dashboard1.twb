<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook original-version='18.1' source-build='2021.3.3 (20213.21.1018.0949)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <CollapsiblePane />
    <Heatmap />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='mars_data' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.1dc4g2u166vpkt1cozuj31eknkb5'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1dc4g2u166vpkt1cozuj31eknkb5' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' date-parse-format='&apos;Month&apos; MM' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1dc4g2u166vpkt1cozuj31eknkb5' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' date-parse-format='&apos;Month&apos; MM' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:max_temp:qk]&quot;' value='Avg. Warmest Temp' />
          <alias key='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:max_temp:qk]&quot;' value='Warmest Days' />
          <alias key='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[min:min_temp:qk]&quot;' value='Coldest Days' />
        </aliases>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_704D98079A2145398F853BDD94109EA5]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='dimension' type='ordinal' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='dimension' type='ordinal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Attribute' name='[attr:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Attribute' name='[attr:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Avg' name='[avg:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Count' name='[cnt:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Count' name='[cnt:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='CountD' name='[ctd:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Max' name='[max:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Max' name='[max:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Max' name='[max:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Max' name='[max:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Median' name='[med:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Min' name='[min:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Min' name='[min:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Min' name='[min:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:ok]' pivot='key' type='ordinal' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='None' name='[none:min_temp:ok]' pivot='key' type='ordinal' />
      <column-instance column='[min_temp]' derivation='None' name='[none:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Var' name='[var:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Month,Pressure)' hidden='true' name='[Action (Month,Pressure)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[month]' />
          <groupfilter function='level-members' level='[none:pressure:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Season,MONTH(Month),Pressure)' hidden='true' name='[Action (Season,MONTH(Month),Pressure)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Season]' />
          <groupfilter function='level-members' level='[mn:month:ok]' />
          <groupfilter function='level-members' level='[none:pressure:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Earth Date))' hidden='true' name='[Action (YEAR(Earth Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:earth_date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1867' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[attr:pressure:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:pressure:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[med:pressure:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[min:pressure:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:pressure:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[min:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[attr:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[cnt:max_temp:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[cnt:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:min_temp:ok]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[attr:max_temp:ok]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[cnt:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[ctd:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[min:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:max_temp:ok]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[var:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_704D98079A2145398F853BDD94109EA5'>
            <properties context=''>
              <relation connection='textscan.1dc4g2u166vpkt1cozuj31eknkb5' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' date-parse-format='&apos;Month&apos; MM' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (2)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
      </column>
      <column datatype='string' name='[Season (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Attribute' name='[attr:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Attribute' name='[attr:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Attribute' name='[attr:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Avg' name='[avg:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Count' name='[cnt:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Median' name='[med:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='None' name='[none:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Sum' name='[sum:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <group caption='Autumn' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Season (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[cnt:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[sum:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[sum:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[med:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month - Split 1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Season (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='earth_date' />
        <field-sort-custom-order field='sol' />
        <field-sort-custom-order field='ls' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='min_temp' />
        <field-sort-custom-order field='Calculation_5320580789577490432' />
        <field-sort-custom-order field='max_temp' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='Season' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_F769EC814CC0468898A634ACB196C0B9'>
            <properties context=''>
              <relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (3)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy)'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
      </column>
      <column datatype='string' name='[Season (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Attribute' name='[attr:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Attribute' name='[attr:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Attribute' name='[attr:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Avg' name='[avg:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Count' name='[cnt:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Median' name='[med:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='None' name='[none:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Sum' name='[sum:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <group caption='Autumn' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Season (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[cnt:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[sum:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[sum:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[med:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month - Split 1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Season (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='earth_date' />
        <field-sort-custom-order field='sol' />
        <field-sort-custom-order field='ls' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='min_temp' />
        <field-sort-custom-order field='Calculation_5320580789577490432' />
        <field-sort-custom-order field='max_temp' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='Season' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_F769EC814CC0468898A634ACB196C0B9'>
            <properties context=''>
              <relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (4)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 2)'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 2)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 2)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
      </column>
      <column datatype='string' name='[Season (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Attribute' name='[attr:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Attribute' name='[attr:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Attribute' name='[attr:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Avg' name='[avg:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Count' name='[cnt:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Median' name='[med:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='None' name='[none:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Sum' name='[sum:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <group caption='Autumn' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Season (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[cnt:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[sum:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[sum:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[med:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month - Split 1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Season (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='earth_date' />
        <field-sort-custom-order field='sol' />
        <field-sort-custom-order field='ls' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='min_temp' />
        <field-sort-custom-order field='Calculation_5320580789577490432' />
        <field-sort-custom-order field='max_temp' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='Season' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_F769EC814CC0468898A634ACB196C0B9'>
            <properties context=''>
              <relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 2)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (5)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 3)'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 3)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 3)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
      </column>
      <column datatype='string' name='[Season (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Attribute' name='[attr:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Attribute' name='[attr:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Attribute' name='[attr:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Avg' name='[avg:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Count' name='[cnt:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Median' name='[med:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='None' name='[none:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Sum' name='[sum:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <group caption='Autumn' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Season (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[cnt:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[sum:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[sum:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[med:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Season (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month - Split 1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='earth_date' />
        <field-sort-custom-order field='sol' />
        <field-sort-custom-order field='ls' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='min_temp' />
        <field-sort-custom-order field='Calculation_5320580789577490432' />
        <field-sort-custom-order field='max_temp' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='Season' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_F769EC814CC0468898A634ACB196C0B9'>
            <properties context=''>
              <relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 3)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (6)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 4)'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 4)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 4)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
      </column>
      <column datatype='string' name='[Season (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Attribute' name='[attr:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Attribute' name='[attr:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Attribute' name='[attr:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Avg' name='[avg:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Count' name='[cnt:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Median' name='[med:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='None' name='[none:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Sum' name='[sum:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <group caption='Autumn' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Season (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[cnt:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[med:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Season (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month - Split 1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='earth_date' />
        <field-sort-custom-order field='sol' />
        <field-sort-custom-order field='ls' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='min_temp' />
        <field-sort-custom-order field='Calculation_5320580789577490432' />
        <field-sort-custom-order field='max_temp' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='Season' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_F769EC814CC0468898A634ACB196C0B9'>
            <properties context=''>
              <relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 4)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1ynpvs519d1ssl1g0uf071llgen7'>
      <datasources>
        <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
      </datasources>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
        <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
        <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
        <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]' included-values='in-range'>
        <min>10</min>
        <max>1977</max>
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]'>
        <groupfilter function='level-members' level='[yr:earth_date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]' />
      </filter>
    </shared-view>
    <shared-view name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
      <datasources>
        <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
      </datasources>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
        <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
        <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
        <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]'>
        <groupfilter function='level-members' level='[yr:earth_date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[yr:earth_date:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_019AEBE661554FFFA3508E9979724C31]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Yearly Average Pressure' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Yearly Average Pressure' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_80D1EBF4123E4EE3873080AA87958FBD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Monthly Pressure Variation' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_BC4FA863CC9647539E1A98D4E6DC52DE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Yearly Average Pressure' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Max Temperature in each Season/Solar Longitude (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>The temperature dips down in Autumn going into the winter and increases going into Spring</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
            <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Autumn&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk]' scope='cols' value='Solar Longitude' />
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]' scope='rows' value='Avg. Max Temp [Celsius]' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]</rows>
        <cols>([federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk] * [federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk])</cols>
      </table>
      <simple-id uuid='{C2E294BB-C4A5-418F-B330-4F1B6682612C}' />
    </worksheet>
    <worksheet name='Average Temperature over Sols (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
            <run>Æ&#10;</run>
            <run fontsize='9'>Spanning over 1,977 Sols (Martian Solar Days)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
            <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
            <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:Calculation_5320580789577490432:qk]' scope='rows' value='Avg Temp [Celsius]' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:Calculation_5320580789577490432:qk]</rows>
        <cols>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:sol:qk]</cols>
      </table>
      <simple-id uuid='{9139132B-55F2-426F-9118-0D0678FF7FE8}' />
    </worksheet>
    <worksheet name='High/Low Temperature in each Season (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt; </run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Autumn experiences the coldest temperature (-80.24 °C)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Season]' new-bin='true'>
                <bin default-name='true' value='&quot;Autumn&quot;'>
                  <value>&quot;Autumn&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Spring&quot;'>
                  <value>&quot;Spring&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Summer&quot;'>
                  <value>&quot;Summer&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Winter&quot;'>
                  <value>&quot;Winter&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
            <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Autumn&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]' scope='rows' value='Temperature [Celsius]' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]' />
              <color column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</rows>
        <cols>([federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk] / [federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{66EB9761-148C-4C3C-B5E7-A71F19EDA120}' />
    </worksheet>
    <worksheet name='Monthly Pressure Variation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Monthly Pressure Variation&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
            <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
            <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (YEAR(Earth Date))]'>
            <groupfilter function='level-members' level='[yr:earth_date:ok]' user:ui-action-filter='[Action3_BC4FA863CC9647539E1A98D4E6DC52DE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (YEAR(Earth Date))]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='render-fold-reversed' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' value='70' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d4a6c8' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]</rows>
        <cols>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{8BD4A7AE-2664-4F04-8292-ECE96AAF2C79}' />
    </worksheet>
    <worksheet name='Seasonal Pressure Variation'>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column-instance column='[max_temp]' derivation='Max' name='[max:max_temp:qk]' pivot='key' type='quantitative' />
            <column caption='Max Temp' datatype='real' name='[max_temp]' role='dimension' type='ordinal' />
            <column-instance column='[min_temp]' derivation='Min' name='[min:min_temp:qk]' pivot='key' type='quantitative' />
            <column caption='Min Temp' datatype='real' name='[min_temp]' role='dimension' type='ordinal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[pressure]' derivation='None' name='[none:pressure:ok]' pivot='key' type='ordinal' />
            <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
            <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
            <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (Month,Pressure)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80D1EBF4123E4EE3873080AA87958FBD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[month]' />
              <groupfilter function='level-members' level='[none:pressure:ok]' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Autumn&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (Month,Pressure)]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]' scope='cols' value='Atmospheric Pressure' />
            <format attr='height' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]' value='31' />
            <format attr='auto-subtitle' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' value='26' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <lod column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:max_temp:qk]' />
              <lod column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[min:min_temp:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='orange_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]</rows>
        <cols>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]</cols>
      </table>
      <simple-id uuid='{EAD42D22-123F-4BD4-9F87-7EB4955CC884}' />
    </worksheet>
    <worksheet name='Seasons by Mars Months/Solar Longitude (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Seasons by Mars Months/Solar Longitude</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>12 Mars months each spanning within 30 degress of Solar Longitude (ls)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
            <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
            </column>
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Autumn&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk]' scope='cols' value='Solar Longitude' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month - Split 1:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='362' />
                <format attr='maxwidth' value='362' />
                <format attr='minheight' value='240' />
                <format attr='maxheight' value='240' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk] / [federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk])</rows>
        <cols>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk]</cols>
      </table>
      <simple-id uuid='{4AAA05FF-66BF-4838-B4BC-7C8BE471A8AA}' />
    </worksheet>
    <worksheet name='Yearly Average Pressure'>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[pressure]' derivation='Avg' name='[avg:pressure:qk]' pivot='key' type='quantitative' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[pressure]' derivation='None' name='[none:pressure:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
            <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
            <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (Month,Pressure)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80D1EBF4123E4EE3873080AA87958FBD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[month]' />
              <groupfilter function='level-members' level='[none:pressure:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (Month,Pressure)]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:pressure:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:pressure:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-color' value='#e5632a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:pressure:qk]</rows>
        <cols>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</cols>
      </table>
      <simple-id uuid='{5266E415-595C-442F-80F3-282236F59265}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
      </datasources>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
        <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
        <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
        <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
        <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97256' id='25' param='vert' type-v2='layout-flow' w='98158' x='921' y='1372'>
            <zone h='97256' id='23' type-v2='layout-basic' w='98158' x='921' y='1372'>
              <zone h='78178' id='7' param='horz' type-v2='layout-flow' w='98158' x='921' y='20450'>
                <zone h='78178' id='5' type-v2='layout-basic' w='53394' x='921' y='20450'>
                  <zone h='26824' id='3' name='Seasonal Pressure Variation' w='53394' x='921' y='20450'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46764' id='9' name='Monthly Pressure Variation' w='53394' x='921' y='51864'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='4590' id='31' type-v2='text' w='53394' x='921' y='47274'>
                    <formatted-text>
                      <run fontalignment='1'>Atmoshperic Pressure (Pa)</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='389' h='78178' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='44764' x='54315' y='20450'>
                  <zone h='8919' id='8' mode='checkdropdown' name='Seasonal Pressure Variation' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]' type-v2='filter' w='44764' x='54315' y='20450'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8748' id='20' name='Yearly Average Pressure' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='44764' x='54315' y='29369'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='55022' id='19' name='Yearly Average Pressure' w='44764' x='54315' y='38117'>
                    <layout-cache cell-count-w='7' minheight='183' non-cell-size-w='66' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='24' h='5489' id='10' is-fixed='true' name='Monthly Pressure Variation' pane-specification-id='26' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[:Measure Names]' type-v2='color' w='44764' x='54315' y='93139'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='19078' id='18' type-v2='text' w='69107' x='921' y='1372'>
                <formatted-text>
                  <run fontcolor='#2a0857' fontname='Toppan Bunkyu Midashi Mincho' fontsize='36'>Mars? I Wouldn&apos;t. Would You?..No Pressure. </run>
                  <run fontcolor='#d4a6c8' fontname='Toppan Bunkyu Midashi Mincho' fontsize='12'>(Pressure Variations on Mars : Could They Ever Sustain Us?)</run>
                  <run>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19078' id='17' is-scaled='1' param='/Users/remyadams/data301/Snoopy on Mars.jpeg' type-v2='bitmap' w='29051' x='70028' y='1372'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3458' id='28' type-v2='dashboard-object' w='1900' x='66983' y='1153'>
          <button action=''>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{8D9E8039-C1ED-4128-AA0B-EFC81F5A2319}&quot; zone-id=&quot;28&quot; zone-ids=[17]</toggle-action>
            <button-visual-state />
            <button-visual-state />
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97256' id='38' param='vert' type-v2='layout-flow' w='98158' x='921' y='1372'>
                <zone forceUpdate='true' h='19078' id='18' type-v2='text' w='69107' x='921' y='1372'>
                  <formatted-text>
                    <run fontcolor='#2a0857' fontname='Toppan Bunkyu Midashi Mincho' fontsize='36'>Mars? I Wouldn&apos;t. Would You?..No Pressure. </run>
                    <run fontcolor='#d4a6c8' fontname='Toppan Bunkyu Midashi Mincho' fontsize='12'>(Pressure Variations on Mars : Could They Ever Sustain Us?)</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='145' h='19078' id='17' is-fixed='true' is-scaled='1' param='/Users/remyadams/data301/Snoopy on Mars.jpeg' type-v2='bitmap' w='29051' x='70028' y='1372'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8919' id='8' mode='checkdropdown' name='Seasonal Pressure Variation' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]' type-v2='filter' w='44764' x='54315' y='20450'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='206' h='26824' id='3' is-fixed='true' name='Seasonal Pressure Variation' w='53394' x='921' y='20450'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8748' id='20' name='Yearly Average Pressure' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='44764' x='54315' y='29369'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55022' id='19' is-fixed='true' name='Yearly Average Pressure' w='44764' x='54315' y='38117'>
                  <layout-cache cell-count-w='7' minheight='183' non-cell-size-w='66' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4590' id='31' type-v2='text' w='53394' x='921' y='47274'>
                  <formatted-text>
                    <run fontalignment='1'>Atmoshperic Pressure (Pa)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46764' id='9' is-fixed='true' name='Monthly Pressure Variation' w='53394' x='921' y='51864'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='5489' id='10' name='Monthly Pressure Variation' pane-specification-id='26' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[:Measure Names]' type-v2='color' w='44764' x='54315' y='93139'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7D63D9BC-7AC7-49FC-A57D-388F497BA9CA}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Mars Weather - Does the red planet experience seasonal variations?'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Mars Weather - Does the red planet experience seasonal variations?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
      </datasources>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97694' id='40' param='horz' type-v2='layout-flow' w='98698' x='651' y='1153'>
            <zone h='97694' id='37' param='vert' type-v2='layout-flow' w='85679' x='651' y='1153'>
              <zone h='6052' id='38' type-v2='title' w='85679' x='651' y='1153'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='91642' id='35' type-v2='layout-basic' w='85679' x='651' y='7205'>
                <zone h='45819' id='32' param='horz' type-v2='layout-flow' w='85679' x='651' y='7205'>
                  <zone h='45819' id='24' type-v2='layout-basic' w='85679' x='651' y='7205'>
                    <zone h='45819' id='20' param='horz' type-v2='layout-flow' w='85679' x='651' y='7205'>
                      <zone h='45819' id='16' param='horz' type-v2='layout-flow' w='85679' x='651' y='7205'>
                        <zone h='45819' id='30' name='Seasons by Mars Months/Solar Longitude (2)' w='38812' x='651' y='7205'>
                          <layout-cache has-max-size-w='true' maxwidth='477' minwidth='477' type-h='fixed' type-w='scalable' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='45819' id='42' name='Average Temperature over Sols (2)' w='46867' x='39463' y='7205'>
                          <layout-cache minwidth='156' type-h='fixed' type-w='scalable' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='45823' id='34' name='Average Max Temperature in each Season/Solar Longitude (2)' w='42839' x='651' y='53024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45823' id='45' name='High/Low Temperature in each Season (2)' w='42840' x='43490' y='53024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='97694' id='39' is-fixed='true' param='vert' type-v2='layout-flow' w='13019' x='86330' y='1153'>
              <zone h='7493' id='41' mode='dropdown' name='Average Max Temperature in each Season/Solar Longitude (2)' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' type-v2='filter' values='database' w='13019' x='86330' y='1153'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='62' h='10087' id='46' is-fixed='true' mode='slider' name='Seasons by Mars Months/Solar Longitude (2)' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' type-v2='filter' values='database' w='13019' x='86330' y='8646'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontcolor='#000000'>Mars Weather - Does the red planet experience seasonal variations?</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='62' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97694' id='61' param='vert' type-v2='layout-flow' w='98698' x='651' y='1153'>
                <zone h='6052' id='38' type-v2='title' w='85679' x='651' y='1153'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='62' h='10087' id='46' mode='slider' name='Seasons by Mars Months/Solar Longitude (2)' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' type-v2='filter' values='database' w='13019' x='86330' y='8646'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45819' id='30' is-fixed='true' name='Seasons by Mars Months/Solar Longitude (2)' w='38812' x='651' y='7205'>
                  <layout-cache has-max-size-w='true' maxwidth='477' minwidth='477' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45819' id='42' is-fixed='true' name='Average Temperature over Sols (2)' w='46867' x='39463' y='7205'>
                  <layout-cache minwidth='156' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7493' id='41' mode='dropdown' name='Average Max Temperature in each Season/Solar Longitude (2)' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' type-v2='filter' values='database' w='13019' x='86330' y='1153'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45823' id='34' is-fixed='true' name='Average Max Temperature in each Season/Solar Longitude (2)' w='42839' x='651' y='53024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45823' id='45' is-fixed='true' name='High/Low Temperature in each Season (2)' w='42840' x='43490' y='53024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E166E8B2-F005-4181-9681-81442F72F1B7}' />
    </dashboard>
  </dashboards>
  <windows source-height='135'>
    <window class='worksheet' name='Seasonal Pressure Variation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:max_temp:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:min_temp:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BAC5C62-DB40-41A8-B711-3BA7101FCAB8}' />
    </window>
    <window class='worksheet' name='Monthly Pressure Variation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[:Measure Names]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Min Temp &amp; Max Temp:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:max_temp:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:max_temp:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:min_temp:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:min_temp:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[tyr:earth_date:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DDA745F2-329E-4349-9EFC-AF9E7C593DDD}' />
    </window>
    <window class='worksheet' name='Yearly Average Pressure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[mn:month:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2EB802D-7A6C-4B1E-BCD1-DA3EC2CFC8AD}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Monthly Pressure Variation'>
          <highlight field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Seasonal Pressure Variation' />
        <viewpoint name='Yearly Average Pressure'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8D9E8039-C1ED-4128-AA0B-EFC81F5A2319}' />
    </window>
    <window class='worksheet' name='High/Low Temperature in each Season (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 1]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group)]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{868F6ADE-1133-41E2-810F-51F5B97C0A71}' />
    </window>
    <window class='worksheet' name='Average Temperature over Sols (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA49DA34-1999-40CB-8CD3-A7DA69A8A445}' />
    </window>
    <window class='worksheet' name='Average Max Temperature in each Season/Solar Longitude (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3AD9B3AF-B8D6-4DDD-9909-FD15B7654CC9}' />
    </window>
    <window class='worksheet' name='Seasons by Mars Months/Solar Longitude (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month - Split 1:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{137EA539-204C-4AE6-A547-16DD8C2492F0}' />
    </window>
    <window class='dashboard' maximized='true' name='Mars Weather - Does the red planet experience seasonal variations?'>
      <viewpoints>
        <viewpoint name='Average Max Temperature in each Season/Solar Longitude (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Temperature over Sols (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='High/Low Temperature in each Season (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Seasons by Mars Months/Solar Longitude (2)' />
      </viewpoints>
      <active id='39' />
      <simple-id uuid='{E38EA482-662C-4DDD-BD97-8E0715B778CB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Average Max Temperature in each Season/Solar Longitude (2)' width='384'>
      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
      ubm5PPPMM0iSxObNm3n22WfZs2cPt9xyC3fddRf33nvvJS3+Vq1aRUdHBxaLhbNnzwJGvv1f
      /uVf+PjHPz7s98TjcY4ePcrf/u3f8vDDD9Pc3IzP5yMnJ4fNmzdz//334/f7qaurY/bs2Tz0
      0ENs2LAh7TPcbrcpvXv//fcPq+t/5MgRFi9ezJ//+Z+zfv168zGPx4PT6aS0tJSDBw+Ow5kT
      TCa33norDz/8MLt27eLuu++mubmZXbt2sXnzZr761a+Sl5eX1m2usrKS8vJy2traTOlkMBqX
      PP3002lNi4Zy4MABbrjhBu666y7+7M/+jO3btwOwcuVKHnzwQVavXo3f72fbtm089NBD3H33
      3ZdInC9dupQZM2Zw++23c9NNNw37Pdu2bWPz5s3cc889zJgxA4C33nqL2tpaiouLaW1tzer1
      K+EApgipLlV/8Rd/wTe/+U22b9+OzWYzZ0iRSCStqXVLSwtPP/00mzZt4pZbbjEfv+aaa0Zt
      PJ9qEhKPx82ZjSxfehvY7XZ6enqIxWLDdg+TJCltsTrVfSr1d6pJyVA7rFarqQ//yU9+kuuv
      v/6DniZBhunu7ub666/niSeeYPny5Rw6dAiLxUIsFkPTNGKxWJoE9datW2lvb+fLX/5ymjrq
      6tWrh73vUgy998PhcNq9P7TRjd1up62tDVVVh40mdF1PS39eXMCgquolndOsViuapuF2u/na
      1742ro3cpxpiDWCK0NzczOOPP051dTXNzc18+tOfZvXq1TzyyCP09vZy/PhxHnvsMbOywmq1
      EggE+M1vfmPmUoFhu0Cpqsp3v/tdXC4Xd999Nxs3buThhx/GYrGwfPlys13c0PctWLCAiooK
      vvrVryJJ0iWNdWpra/nnf/5ngsEgDz/8MJFIhG9+85v09PRQVVXF4sWL+dGPfsRjjz3GmTNn
      WL58OcuWLeMXv/gFO3bsIB6Ps2HDhklpkCMYP7Zu3crBgwfJy8ujtbWVe++9F13XeeKJJygt
      LcXpdKYN9B6PhzfffBO/3282cR9pctLU1MSDDz6Ix+PhL//yL/n5z3/Od7/7XY4dO8bXv/51
      otFo2nslSeIzn/kMTzzxBNu2bRu20GH+/Pn84Ac/4NZbb6Wqqoqf/vSnnD9/nsOHD3Pbbbex
      fv16fvCDH7Bw4UIaGhqQJInbbruNn/zkJ2YDnGuvvRa32z3OZ3JqIPoBTBFSPUU7OzvJy8uj
      oqICWZbp7e3l9OnTVFdXU1paSiQSwe/3U1xczPnz5wkEApSVlSFJEk6nk0AgQFFRUdpnt7e3
      m3nZwsJCnE4nJ0+eRNd15s2bh6IodHR0UFxcjK7rdHd3U1hYyKlTp7Db7bz00kvk5OTw5S9/
      mc7OToqLi5Fl2UwfXX311XR0dNDZ2UlVVRW6rlNYWEhPTw/Nzc1UVVWhKAr5+fkEAgGam5tx
      Op1UVlamzeyyhWzuBxCPx2lpaSEQCFBdXU1ubi66rnPmzBn8fj/z58/H6XTS09ODy+VCURSz
      OYnNZiM/P5+BgQE8Hk9ap7BYLEZ7ezu6rmOxWKioqMDv93Pq1CkqKiooLy8nEokQCoUoLCyk
      v78fRVHw+XzE43FzAvLUU0+Rl5dnvi4ajdLY2IjX66W8vJz6+nrsdju5ubnk5uZis9loampC
      13Vyc3MpLCxEURTa2tro6+ujtLSUwsLCrCxWaG9vFw5AMDyRSITHH38cn89HcXExDz744Kid
      2ASDZLMDmGrs3buXZ5991qwK+sxnPjNqakkwiHAAAsEEIByA4EpAdAQTCASCaYxwAAKBQDBN
      +X+Gn02qGFsFKgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Average Temperature over Sols (2)' width='384'>
      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
      HLHIDnfL/waRnTaWf70tAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOyddXQU19uAn9nduHuCu7s7FIoVLbRQSo1CXWmpG1SAClXqUFqshVLcnQAh
      OCEJEYi7ezZrM98fm0x22SiE0u/HPudwyOzcuWN37nvva1eQJEnCihUrVqzccShu9wVYsWLF
      ipXbg1UAWLFixcodilUAWLFixcodilUAWLFixcodilUAWLFixcodilUAWLFixcodilUAWLFi
      xcodilUAWLFixcodilUAWLFixcodilUAWLFixcodilUAWLFixcodilUA3ASSJFFSrCY9OYe0
      pGwK80uwplb6d5Ekicy0PI7tuYBBb7ihOkRRIi0pm4yU3Aa9NnWphvTknBu+Lit1QxQlMlJz
      Cdx38abaQGpiFplpeQ18df9tVHUppNHoWPH5NpLjMihTa8323TNjEKOn9q/XSSVJYuefJzi8
      85zZ7za2Kpq19ufpN6ehslHWq85/m/iraaz4YhuJMemoSzVkpuWhUAh079eWOfMn0a1vGwRB
      qLWe0pIyflq8mcy0XDRlOov9SqUCN09nZsy9m/bdmldbz9Hd59m9MQidVm9xvIe3K3PmT6RR
      Mx9Wfb2T6NAEi/coCALuXs70HNieSbOGmu07eTCEvf8EU1xQWlleIdCld2senz+p1ntsaPR6
      A3FRKQQdCiVw70XCL8YiGiSOJ/6MUlW3dlOm1hIXncqZY+Gc2H+Jy2djeGvZo0x9aHiDXKMk
      SXwyfxX7Ngfz4Y9PMv6+QQ1Sb00c2n6WfZuDq24DPq7Me3UKfo09WfHFNq5FJKOpsg240Gdo
      R+653/x6A/de5MDW0xQXquXfFAqB7v3b8cgL99y6m6oGvc5ATGSy3AYiLsVhY6viQNTyerQB
      DbGRqZwubwOh52JY+P0TFvf+v0ydBICtrYpHXryH3MxC1n6/h/U/7ZP3JVxLY+jYHtg72NX5
      pBq1lh8+2URibIb825DR3Xnlk9kENPVCqfpvT0wiQ+J57bHvmP/hLAbc1QUbOxUZKbkse3sd
      +7ec5sSBEN77+nGm1KEzcXC0Y95rU8jNKuD3b3bx98pD8r723ZqzcPkTNGnhi6u7U431DLir
      Kx5errz71I/ERqXKv7/95WNMmDEYl/LjZ8y7m8zUXD5++TeCj4TJ5R554R7mLZiCk4uDRd19
      h3aiVfvGfLtoI9vXBeLq4cR738xl8N3dar2/W0F+ThEXgqIozC/h4qkoNGW6Kq+7JuKvpnF4
      xzmO7blA+IVYAFR17DjqgiRJxEamUFpcRsLVtAartyYGj+6Gh48r7z7xIwkx6fLvHyyfx5h7
      ++PiZmwDs54aQ3pKLh+9uIKzxyPkcnNfncxjL02o8ln2H9GFNp2a8tV769m9MQh3Lxc++G4e
      A+7qcutvrArysgu5eCqKgtxiLgVHodXo8fRxrVcdsZEpHNl1niM7zxMREg80bBv4/0CdelpB
      EHBxdaR5G38ef2USTi728r6osEROHAip10mP7rlg1vkjwJz5k2jftRmu7k51GjnfLvQ6A28/
      8SOPvjiBkZP64Ohsj42NiiYtfPnwx6do3sYfdYmGpa+tJtHkI6wOQRBwdXeiRdtGPP3mNGzt
      bOR9s58eS7e+bfD0ca11RmTvYEv3/m154/NHUSgrX2vbzk1x93JBWf6bk7M9Lds14oPlT2Bn
      X3mujj1a4OXrhr2DrUXdtnY2BDT1ZvTUfgDMfWUy4+8biJuHc633dyvw9nNn5hOjef69++ne
      v+0N1dGhW3Oee/c+nn5zmvxbQ378giDg5ml8Pl6+blWW0esM6HUNpx6yd7Cj18D2vPbpwwiK
      ym+oXedmuHuatAEXB1p3aMx73841a2+derbE08cNO3vLNmBnb0OjZt6MmtwXgKfeuJcx9/av
      dWByq/AJ8OCBJ8fw0qKZdOrZ6obq6NSzFc+9ez/zFkyRf7MKgFpwdnU0HyFIsHb5HnQ6ffUH
      mWAwiKz7YR+NW/jIv9moVHj61k963y4un71KVGgCp4+GI4rm+n4XN0cmPWhUnxTml3Bw25l6
      1e3j727W0fs39ar39fUf3pnu/So7xaO7L1RZrlkrPwaZjOAP7zhXZTlT4qJScXV3YtKsof8J
      IS0IAh5eLjdVh5NrZVtuyJmnIAg0am5s436NLd+jJEms/HI7UWEJDXbOCgaN6kaXXpWd4rE9
      VbeBVu0b029YJ3n78I5ztdqw4qJScfdy4Z4Z/w01SYXa6ma4VW3g/wP1vltBIaAQBHr0byd3
      AudPRhJy+mqdjg87H8Ol4ChmPzPOpFJQKP5/PPgKQ+Gev4M4uuu8xf5OPVrKf8dFp1rsr4nr
      dZdKZf1HIza2KmbMu1vePrDlNMWFpVWWnf7YSCjvxwP3XiQns6Daeg16A4F7L9J3WCd8G3nU
      +7puFTcriEyPbug22Li5D0qlAh9/d4t9Jw+E8POnWzA04AygAjt7G+5/fJS8vfefYEqLyyzK
      CYLAtMfukh/CoR1nKcwvqbZevU7P8f2XGDiyS7WzmtuB4j/cBv7r3PDdDh3bgzadmgBGC/qa
      5bsRDWKNx0iSxLof9tKomQ93T+l3o6e+rXTs0QJ7B1skSSI5PtNiv+nU28HJ3mL/v8GwsT3k
      Tic1MZvgo+FVlhs8ujv+5aNTTZmOXRtOVltnQkw6l89eY+LMwf+J0f+toKHvq0kLX+wdbC1G
      qElxGSx8/lcLI2xDMmJCbzy9jbPqxJh0zp2IqLLc8PE98fE3CvSyUi17/g6qts7YqFSuXIhj
      wv90G7jdV/DvcsMCwM7BltnPjJW3j+25SExkSo3HpCfncGDrGR54cjR2Veiaq6Oisz225wLb
      1wVycPtZYiJTLFQw16PX6bkWkSxvZ6XnEXwklPSUHIuymWl5nDwYwuGd54gOS0Sn1aMp01oI
      teZtAli1730W/fAkM01G2hVU6P0FwaiOuR24eTozclIfeXvrmqOIoqVwtrVV0aVPa3l7y+qj
      1T7TvZtO4ebhRP8ajH4lRWoiQuIJOX2VaxHJFp5GFWg1OrLS8sz+mXaG6lKNxf6igqpnMfWh
      ILeYM8fCObjtDJfPXkOrvc7rqpqPX68zEBORLLcFSZKIi0rh5IEQoi4nVKs2adzcB3tHO9kW
      AEbj8/P3fUFaUo58r8VFaoqL1OjrqEatC54+rgy/p5e8vXXNsSqv097Bjk49Wsjbm/84Wu39
      7N54Ek9fV/oOq75dFxeWEnEpjpDTV4mJSEZTVnUb0JRpLduASVl1iWUbqG4mW1ckSSI/p4jT
      R8M4uP0sYedjLDym/lcFW3XUyQuoOsZOH8gvn20lNTEbnVbP2h/2sHD5E1U+REmS2PDrAewd
      bbn3kRHoa5ktVJCdkc/SBX8QfjGOu6f0JaCpN2cCr/D2vB/oN6wTH/74JJ4+ldNRSZJIScji
      4NYzbFsXiIOTHeuOfMiev4NY/Mrv5OUU4e3nxuqDC2neJgCtVsfPS7dwdPcFxk7rj72jHdvX
      BRJ5OQFbOxtW7HoH34BKlYcgCHTr24ZufdtYXKsoigQfNnrWtO7YlIGjutb3kTYIgiAw+cFh
      bFp1BIPeQPDhMNKScmjc3MesXHFhKadNPIGuXkki9Ow1C8NqmVrL3n+CGTquZ5WG3+S4TH75
      bAtnAq/QtKUvoigRdTkBG1sVo6f24/FXJuPfpFIPnp9TxJY1x9iy+ii5WUa105IVz8kGxuT4
      TLavC+To7gtklAvrqQ+P4O1lj93Q8yhTa/n9m51s+PUAbTo1pWXbABJjM8jNKuTuKX3NnlsF
      Wo2OsPMxHN55nqO7zqHXi2w99znpyTksfmUVZ49HoNXoUNkoGTWpLx/9/DROzuYzPt9GHnj5
      ueHgaPSQS4xN56nJS8xmji/MWCbrnT/5+RkzwX0zCILAlIeGsW1dIKJB5OTBEDJScs3eAxjf
      xbkTkfL2lYtxRF5OoGP3Fmbl1KUa9m0+zV0T++BchZdQQkw6v3y6hQsnI2nSyg/RIBIZEo+d
      gy1jpw1gzssT8W3kKZfPzS5k25pANv9xhPzcIgC+WPMSw8b2BIwDqR1/Hufo7gtkphnVrjPm
      3c2CxQ/d0PNQl2r47cvtbPrtMO26NqN5a38SYtLJzylmxIRKQVndIOB/lZsSAK7uTtw/dxTf
      fLABgD0bg3j6zWkENPW2KKsu0bBp1WGmPjQcdy8XsmvQN1dQVFDC8/d9Ttj5GNYcWkSPAUa7
      gyRKuLg5svq73Sx6YQVfrZuPQqlAp9OzdMEfHNtzkbSkbAC69GnN/i2nWf7R3/LIJjujgOiw
      RJq19mflF9tZ/e1uVu1/XzaczX5mHL8t2843CzegrcI3vzqy0vI5dSQMpUrJS4tm4nibVEAA
      nXu1om2nJkReTkBdqmHvpiDmvjrFrMyh7WdRl2ro3KsV4RdikUSJrWuOWQiA8AuxxEen8tay
      Ry3OcybwCq898i1efm78tO1NmrXyRxAgLSmb957+mXU/7uPA1jMsW/sSPQe2RxAEfBt58uTr
      U3F0tmfpgj8Ao29/BW07NeWVjx9k5MQ+PDxqIZIk1es9mKIu1fDao99y5mg4X6x5icGju6NU
      KjAYRI7vu8Rbc7+v8rhtawPZv/U0wYdDEUWJgKbeBB28zKdvrKbPkI7MmT+RU4fDuHzmKvs2
      BxPQ1JvXlpp3To5O9ma2Mt8AT1bueZf1P+7jj293AfDF6hdp1aExQL3dGGujW982tGzXiJiI
      ZIoL1ezfctrCZ//A1jPodXo6dG9BZEg8kiSxdfVROl4nbC+djiYlIZPx9w20OM+pQ5d5fc5y
      App688uOt2ncwheA1IQs3n3qJ1Z/t5v9W07z5bqXZQeFgCbePPXmvdjYqfjynfUAGPSVg8L2
      3ZrTrmszho3vyZyxHwHccBsoLSnjlQe/5mJwFF+vf4X+IzqjKG8DR3ed5+0nfjApfWdJgJu2
      eNz7yAhZx1lSXMaGFQernELu3HCC4kI1D5qojWpj518nCT0XgyQZPWwqPiRBIdB/hFEVcXjH
      OTl6T6VS8sZnj7Bq73vyqCotMZt9m4NZf/Qj/jz+CaOn9mPEhN70HdqJooJSNq48REBTLzqa
      BFkplQoefWkCbTs3tVQT1MC+zcGUlWq4f+4oRtzTu87H3QpsbFWMNwlo2fnXSYtAs61rjjFg
      RBfmmARz7dscbDbVliSJHeuP06i5Dz0HtDc7PjYqhQUPf0NRYSmLf32WFm0CUCgEowdMMx++
      XPcyTVr4kpmWx4szlpFk4vprLGM5UDDd79/Eq16qwuuRJIkv313PkZ3neebt6Qwd20N2hVQq
      FQwf35N7Hxlhcs7KY++fO4qftr5J1/KZXnZGPj8t3cyPW97g45+f5sUPZvL7vvdo3sYfgK1r
      j6HVmD9fR2d73vqiUmjaO9gaYzo8Kl0n/Rp70qSFL01a+Db4gMHO3pZxJh32zr9OmLVnSZLY
      uvYYg+/uziPPj5d/37UxiLJSjVm5HeuP06yVv5mHGUB0eCILHv2OslIti399lqat/FAoBBQK
      gSYtffly3csENPUmPTmHF2d8YTb7qUsbaNzc96aCQiVJ4tPXV3N8/yVe+GAmA0Z2kd2klUoF
      Iyf1MQt8vMM0QDcvALz93Jn8YOUD/GfVEQtPAlEUWfv9Hu6e3Jcm5aODulChcxUEwUJX5+Lq
      gCAIiKJETGSyXM7WzoZGzX1o3tr4YapLNby+9GHcvVxo1sqPL9fN57sNr+Lu5UJBXjF5WQVk
      pOaadU5g9H0fO22AxXmrQ6fVs3XNUTp0b8H8Dx9Aobj9LWn01H6y+iE6LJGw8zHyvoRraVw4
      FcWkWUMZObGP7E5ZkFfMoe2VLqFFBaUc3nWO0VP7mcUIiKLIl++uJyezgL5DO9GuSzOL87t5
      OPPk61MByMsp4st315sNDoQ6jLZu5imGnr3GXz/vl2eq16smBUGg9+AO1V6PUqmQZ7M6rZ6v
      18+nVfvGcj129rbcPdnozFBUUGLhFFDRHmviVuucx97bX/brv3IpjsiQSrfTa1eSCTsfw8RZ
      Qxht4tOfl13IERMPt4K8EqOKdPoAbGwrlQYGvYFlb68nP6eIASO70LpjY4vze/q4MvfVyYBx
      5v3twg31agM3+3gunIzkn1VH8PByYfpjd9XaBqwzgHoiCAIPPDkGBydjR5ObVcC2tYFmZYIO
      hRIbmcIjL06oV4Of/thdvPv14yxe8YxFB2M6x7jeQCgI4Fwe9diomTd+jSt1jwqFII8AHJ3s
      cXJxoLhQzfzZXxMdlmhWz/3zRsnT2dq4GBxNwrV0PvzxSZxdHet6i7eUZq396TGgnby9ZXWl
      gW/nXyexd7BjxIRe2NnbMHHWELnc5tVH5HJBBy9TkFvMuOnmU//4q2mcLA8A7DGgXbUCb9x9
      A+XncXD72RpdTRsSSZJY+8NeRFGi58D21b4TZzeT36u4BaVJUF1VEbJ+TYxtSxKlGzJU32oB
      0LJ9I7qWG/qNKj7TNnACF1dHho7pgaOTPePvr3zHm1cflf8O3HOB0uIyxk4bYFZ3TGQKwUdC
      Aeg5oF2193LP/YNk+8jef4IpyC1usPurjdXL9yBJEn2GdpIHQ9dj2gasM4AboFlrPzO3zvU/
      7jPzAFmzfDe9BnWQG2JdsXe0Y9ZTY5j84DCUKiWSJHE1PIlPX1/Np6+vlhuyVIXnilJpfJMK
      haLahunp4ypfd3RYIrOGvcvS1/4gJyMfAC8ftyoNXtcjSRKbfz/M9MfuMosDuN0IgiAHpoFR
      XVaQW4xeb2DHn8cZOamP3KlNe/QuuVxI8FXiolIRRZEdfx6nTccmdLjOKHgxyBh+D+BXQ1yA
      k4uDPMKSRInzJyOrLduQGAyiHKHeqn2jasuZtowb6YwrIkclqm6HtXKLOxyFQsEkE+F+cNtZ
      igpK0Wp07N54klFT+sqDN9M2cDbwCklxGYgGkR1/naBDt+a06dTUrO7zJyLkSGZTA+/1uHo4
      0a1cdWTQG7gYHN1g91cTep2BoIOXgfq0gVt8Uf8xGkQACILAw8+Nl6eHSXEZchTstYhkgg5e
      5rGX6jf6N8VgEDmy6zxz7/mYXz/fyqQHh/Lm54+a+dzf6HW/tvQh2fOiTK1lzfI9TOzxKut+
      2GtmmKwJnVbPlUvxzJk/6T/nRjZsbA9z9c6Oc5w7HkFKfKZZRG+bTk1lzyadTs/2P4+TmZrH
      qSNhTJg52GwkDMhGdqDK9BGmmHqUZKY2bMbN6khPypFHmo7Ot88YXxv/RnsZfk8v2e6Qk1nA
      sT0XCD5i9AwzbQOde7WifVejLUyn1bPjzxOkJedw9lg4Ex8YYjHLq3BlhZrbgCAIt6UNJMak
      U1piDICrexv4b32/t5oGC3vr1LMlA0ZU+oj/8e0u9HoD637YS9NWfjdkFJUkiYRraTw2ZhEf
      PPcL8xZM4dNVz9OpR8sG07E7uzqybO3LLFjykDwaLswvYfGrv/PijC/kBlQTOZkFtOrQ2MLF
      7r+Au5cLQ8f1lLe3rTW6X/o18aLPEBP9twD3PjpC3t755wl2/HUCAbh7qmXQnqlB2TRDZFV4
      +VW66er1dXP/vVnycorkv0uKar4+mdvw7f8b4wVvP3cGjapM+7FtbSBb1hylWWt/M3dmY2Tw
      CHl7+9pAdqw/jspGxagqAjdN/fbr1wb+nfTYN9IG/mPjt1tOgwkAQRB49KUJsn79ysU49m46
      xc6/TvDICxPMEpTVlfiraTw6ehFh52P5at18Bo3qdktGTLa2Kua8PJEtZz8zG+0e23ORRS+s
      qDXCOT0ll0Gjuv7nRv9gfC8TZgySr+3iqSj2/nOKcdMHmhn0BEFg3PSB8kgpPTmHn5dspseA
      djRt6WdRr09AZXqD+Gs1Z7s0nT1UlRbhVmBrV3lvptlRa+J2vL9/45yCIDBx5mB5+0zgFQ5u
      O8u4+wZYGKknzhwiJwlMjs9kxRfb6DusEwFVDG58TOJj4mvJeHp72kDlvcVG1RykKvMf/IZv
      JfXvlaVyA2wVrp79h3c2S0L1/jO/YGdvy+TZQy3K1oYoinz6+mqy0vPpObA9PQe2r/2gepKX
      XcjxfRfl7cbNffh01fP8tO1NuZHu3hhESmJWjfV06dWKex8e0eDX11D0HtxRNoSLooReb2DS
      A0MsOh8XN0fGlK/tIEkS6lIN4+8bWGUn1XNAe1kFd/FUVI2jOlOjn6lR2owGXkjH1H3wUnB0
      naJI/5c//b7DOslt2qA3gCQxYeYQi3Juns6MmmQMjjNtA1XRa1DlN3khKLLGgVJ+RRsQoHv/
      f6cNNGvlJ7fRc8cjUJu4tlbH/3IbqIp6CwCDwYBBL1JWRYi3QqngkRfvkTsMTZmWGfNGVWl9
      r81glpmWx8WgKMBoRLq+DxJFSXYFutFmU1JcxqbfDpu7pQkCg0Z146OfnkKhVCAaxFpXilKp
      lA2ygM2tWk3MwcmOESZpATr3aEnrjk0sygmCYKYGcnCyY8jYHlXW2bZLM1lfHBkST1wNI6zo
      cKN3Ve/BHcyikU1nhcVVTNElSZLfrVTPt+zkYk+fIR0Bo0pv27rAKsuZ1vpvreZmmrystnTQ
      oihh0Btu+tqcXR3NVIHd+rWVYxhMkRPElePobM/g0d2rrLNj95ZyPrDwC7E1zgSvhicBMGhk
      V7PIetOZQVVqJNPUJPV9Am6ezvQoFzb5ucXs/PNEleVuRxv4r1BvAVBSpKa0WE1qYnaV+0dN
      6kvztsaGZe9gywNPjK5yBFlaXPmyRVG08Lc36A3yqPJScDRZ6fnyPp1Wz95/TskvqyKPjCiK
      lS9Qqqy7Js6fjKwyb3+3fm1xcrZHZaO0SKFgSnJ8Ji/M/IIXZy4jOc4yOVx90JbpzBpgmbr2
      EUtdGTt9gNzhjp8xuFqB1b1/ZcfQo387OVnc9dg72Mort2k1elZ/t6fKZ11cWErw4Yro6AfM
      2oKpKiDo4GWz40uLy/j1863oyoOrcjILq/w45dd93T5BEHj8lcny+X745B9iTPJCVRxzNvCK
      vJ2RmmdRT21LDMozHwnEOnYepm6HKSaxA/m5xWbPoCCvmAUPf8PMoe8QuPciN8u46QPkEfE9
      MwZVm/u+z9COcvxDnyEdq8386eBkx1NvTkOpVFCm1rLuh71VDuwKcos5G3gFG1sVz78/w6wN
      eJu0gZOHLssdviRJlBSp+WnJZrnOnMyCatpAxTFwvZiYt2CyPHj87sONFqoqUZQ4Z9YGcu8o
      IVAvASBJEqePhlNaouH00XAK8iz9eW3tbHjoWWNU4T0zBpvpCU3rCb8YJ28b9CLRoeZJtbz9
      PGjRzui6lZWWx9x7Pmbll9v57asdPDFpMQ6OdrIOe/u6QLatC2Tlsu3G+gyi7G+emZpHUUH1
      KW6Li9R89d6fFonL4qJSKSvVMP6+QfhV4+ImSRI/LdnMkZ3nObzjHD8s3lTteerC1StJZtGk
      Vy7GNVhj7NG/HY2aeWNrp7Lw5zZFpVIypnz/mHtrXupz1OS+zH11Mgqlgu3rAzm0/azZ9Yqi
      xG9f7aAgr5gXP5hhpjIAaNOpCU1bGuMs9m89w/vP/MLuv4NY+/0eHh71Af5NvOV1I4IPh/Ld
      oo2EnLlqUr9Iark3UlmphpIic4P9oJFdmfX0GMCY82bOuI/449tdRFyK49qVJH74ZBN7N52S
      yy//cCNvz/uB4/svAZXrDVdQWEU7So7NlMtmp9dtPdl2XZrJneDKL7cTfiGWQzvOsviVVWYz
      gs1/HGHf5mAiLsXz8cu/1anumug1qAP+jT1xcLSrMRuvsQ0Y333F/9UxbvoAo+1PIbD5jyMc
      3XPhujYgsmLZNoqL1Mz/aJZFDq0O3VvIzhO7Npxk0Qu/smdTEGuW7+GhkR/QvI2/vC7G8X2X
      +P7jTYSeqwxoNBhE2SOtpKjU4jsePr6XMe05RgHy2JhFrPl+DxEh8VwNT+K7DzdyYPtZufzX
      7/3FO0/+yKnDoTXe9/8KyoULFy6srZBWo2P7n8f549vd/P7NTvQ6A0X5JZw6HEpWej4+/u5m
      C3O0bNeInX+d4K0vH8Xbr1LCi6LIrg0n2bL6KCuX7TALNz93MpL05BwK80to3bEJNrYq2nRs
      wvH9lygtLiMv25jFrzCvhNeWPMTk2cM4fSSU1MRsUhKyiIlMZs7LkzhzLJyVy3bI/uaaMh0R
      IcbEZPYOtriaJDMrzC9h8x9HiL+axpnAK9jZ26Ap03LuRASfv7WOfsO78P63j1ebjkAQBC6f
      u8aF8nMNG9uz3kvkaTU6dvx5nB1/neDHxf9QkFvZyYSeiyEpNoOUhEx8AzxwcbvxADOlSkl6
      UjYOTvbGWVk1XlSCIODp48r29YG89cVjNQa1CYJA36Gd8PRxJeTMVfZuOkVJURku7o6kJefw
      +1c72LY2kFc+mc0jL9xjMRNUqZR06N6CU4dCKS4sJTIkngNbThN+IZan35zGfY+PYuOKgwAM
      GdOD3oPb07FHS5QqBUEHL7P6u90c3W3scCQJEq+lYWtng6e3K/aOdgiCwMCRXdFp9URciqOo
      oJSTBy+zceUhNv12GN9GHjz0/Hj2bjqFfxMvxk0fyOTZw+g9uCNxV9NYvXw3+zeflnXbyfFZ
      uHu64N/Ek5yMAjauPMTq5bvl2WtiTAZNWvriE+BRo0rQy9eNS8HRpMRnkZ6cw6ZVh8lMzWXR
      90+arbCVGJPB4R3Gzql52wCzHP83go2NiqTYTNy9nLlvzshqDdCCIODm4czuDUG889WcGlNU
      CIIxLYuruzMhp6+yZ9Mp1CUaXNwcSU3MYsUX29m9MYjXP32YWU+OsWh3KpWS9l2bE3ToMiVF
      aq5cjGP/ltNEXIrj+ffuZ8pDw9mw4iAKpYKhY3vSa2B7OnZvgUKh4OTBEH7/eicnDoQgSUZh
      kByfia2tDZ6+rtg72CIIAkNGd6e0pIzIy/EU5pdyYn8IG1ccZNOqwzRp4cvMJ0azf/NpApp5
      M276AKbMHk6Pge3uiLUBBKkOQ0ydVk/ouWvVGvqatwmwGCUnxqTTpKWfmbumKMKxowEAACAA
      SURBVEpcCo5Gr68+vYKtnQ3d+raRH35Gai6Bey9SUlRGpx4t6DmwvTzyz8ks4MjOczi6ODBi
      fC+UKoXZCPF6Gjf3NVPnlBSrSUvKwcnZnuiwRKLDkigpUuPt50bvwR1o361Fre6m6pIytqw+
      BgLc+/AIOaimruh0ei6fuYbBULOqoU3HpjedLOxqeCJZ6flmLoFVodcZ2LjyIA8+Xfe8TZlp
      eRzecZYLQVEU5BXj4uZE1z6tGTOtP/6NvWr0dsnJLODQ9rOkJmXTpLkPw8b3xDfAE4PBwIn9
      IXTr19ZsgFFWqiHsQmy16r3WHZqYqS0kSSIxJkNOBe7s4kCfoZ3o2qc16ck5RIYkMHBkV7N3
      FxuVQnZGflXV071fW/JziszW3a1AEAQ692xVq995YX4Je/85RWZqHh17tGDI6B5mS3SC8T38
      vfIgibEZPPj0WJq2svTGqi8RIfEU5pfUmqpcrzew8deD9crdlZ6Sw+Ht57h4KorCghJc3Z3o
      1rcNY+4dYBaNXxXZGfkc3H6WjOQcmrT0Zfj4Xnj7uaPT6Qk6eJnu/dvhbpJWW11SRtiF2Gpn
      yNd/LxUu5cFHwshIycXFzZG+wzrRuVdrUuIziYlIZsBdXbCvJlr4f5U6CQArVqxYsfK/x//+
      HMeKFStWrFSJVQBYsWLFyh2KVQBYsWLFyh2KVQBYsWLFyh2KVQBYsWLFyh2KVQBYsWLFyh2K
      VQBYsWLFyh2KVQBYsWLFyh2KqvYiRvJziqrMAGqKt68bKhvzKg0Gkez0vCoz+alUSrNUEbeL
      MrWW8AuxRIclUlKkxs3Tmc49W9G+azOU1STMqi+iKJGTmY/hupS5Ts72uLg5VXOUEXWJhoL8
      qtdRVQgCXn7uFit2NSSaMh15OYU1llEqldjZ2+Ds4nBDaz9YsWLl36fOAuDEgRA2rjxE1OV4
      i319h3WmY7fmzHp6rEW6gjK1ho0rDxEZEs+5ExHy701b+XHPjME8Pn/SjV99A3DxVBRfvfcn
      zVr70ayVP+kpuaxZvpv83GJ6DWrPu189XmXq5Pqi1xvYvu44wUfDCD17TQ5hb9LCl192vF1t
      xkUwLriyZvluQs9eM0tO1rxNAP2Hd+apN6fh7Fr72sU3SmZqLr9/s5MLQVGkVrM2gqAQUKlU
      uHk40b5rc0ZO7MOICb1v6XVZsWLl5qhXKgh1qYZl76zjz5/2y7+5e7mw89IyPLxrzlOj1ei4
      q9Uz5OcWc+8jI3jz80dqTDT2b3A1PIkFD3/Doh+fpHu/tnK+msTYDOZN+JiU+Cz8m3ix+uDC
      GlNC1wetRsdX7//Jmu92y6mMR0zozVfrXrZYnckUSZLIzihg9oj3SEnIYtKsobz/3dwaE3U1
      JJIkkZtdyMMjF5JQnve9//DOvPv14yhVSnKzCoi4FM/ef05xISgKSZJo2a4R7379OP1HdP5P
      rpZmxcqdTr3m6g6Odrz6yWyGmSwsUZBXTNiF2FqPjbgUT0FeMSMn9eGD7+bd9s5fkiS+//hv
      Grf0Nev8wbiS0DNvTQeMSyOu+Hxrg6VltrWzYf6Hs8zWDz666zw/Lv7HbPGL6xEEAW8/N0ZP
      7YdCIXD/3FH/WudfcX4vHze6969M59u6Y2NadWhM8zb+9BzYngefGcvK3e/y9pePoVIpiYtO
      5fn7P+fs8Ss11GzFipXbRb2VtQ6Odnzw3Tx5wQhJlFj29jqKCqpfck+vM7Bkwe80aubDou+f
      MFuL9nZRVFDKpdNXOXXwcpWLbQwe3R2n8oyOwUfCLBasuRls7WxQqpRmqXFXLtvOvs3BNQoa
      QRBo3jYAWzubWrMr3irMBbflqN7GVsWsJ8cw6UHjMqDqEg0fv7zqX1sI3IoVK3Xnhqx1/k28
      eOerOdiU5zy/Gp7Ez0s3V7vM47qf9hJ+MY6PfnoaT5/qdd3/JpIkgSSh1er5aclmi9TCXj6u
      2Nob1wEoyCuxMN42BBNmDKJRM6MgNRhEFj3/K1GhCTUe4+hkj6AQLFIH/1vURZMjKAQmmqw5
      HBORTHRo4i2+MitWrNSXG3bXGD6+FzOeGC1vr/1hL+eDIi3KJcdl8v1HfzNj7ij6De90o6dr
      cFzdnbh/7t3Y2tnQpXcrCx11mVor5+j3a+wpC7uGJKCpN0tXPS/noS8qKGXBw9+Sl1NU7TEK
      hYCA8J/Xqfs2Ml8UpTrjsRUrVm4fN6yLUSgEnn/vfk4fDefalSR0Wj0fvfQb649+iJOL0fND
      EiU+mf8bbh7OzP9oVrWdliRJxEWlcvJgCPFX0xAUAn6NPOk7rBNd+7SxcHE8dTjUbH1XpUrJ
      jHl3o1QqkCSJwzvPkXbdmsV3T+lnpncXBIFn3p7OYy9NkFePMiXhWjql5UsMjprct8HcQa+n
      18D2vPnZIyx6YQWiKBEXncrbT/zAdxsW3NRC85lpeZw8EELk5Xi0Gj1evm5069eGfsM6Y1/N
      CmcNiaZMZ2bTcHSu9AaSJInQczGcPhrGE69NRa8zsH19IMFHwujWtw0PPDnG7N51Wj3nTkRw
      +mg4+blFePq4MuCurvQZ3KFal1N1qYadf57g7PErqEs1NG3pR7/hnXF1d6JluwALpwXRIBJ0
      OJSD286Qk1GAu7cLvQd1oH3XZiiUCtp3bQ7Aro0nycuqdIn19HXjnvsHAcb1g7etC6S0uHJp
      ShtbFRMfGCJ/E6bnOx8USWRIPA8/fw+aMh3//H6YS8HR9B/RmXsfGWG2IpVWo+PU4VDOHY+g
      qLAUH38PBt/dje792/7nBwNW/rvclDLe1d2J9795nHkTF6PV6Lh2JYmflmzmlU8eRBAEdm08
      yYkDIfy45Q2LD6CC/Jwiliz4g8B9F5n2yAj6DetMZloem1Yd4tuFG+jWry3vfjWHjj1aysf0
      GNAOgFdmf01hfgm2djbcN2ekLCi6922LykbF52+sIS46FYC2nZuaCQAwCrHqruvo7vPo9QY8
      fVyZ9dSYW/aRCYLA9MdGEh2WyLof9wEQuOci33/8Ny8unFnv82q1On79bCtrv9/L0LE9GDa+
      J9oyHbs2nOTnpZtp3NyXBUsfYtSkPre044i6HC8vqK5UKWjftRkpCVns++cUO/86ydXwRFq2
      b8yjL07g3ad+YteGkwDs3hhE4xa+3DWht7Ge0AQWPvcr9o52dOrRAnWJhrUb9/DLZ1sZeFdX
      PvnlaXyvW40uJ7OAJyctpkkLX97+8jGcXB05fyKCJQv+ID05h/VHPzITADqtnsWvrOJM4BWW
      rnyONp2aknAtjW8WbuC9Z37mpYUzZQEwbGwPDm47y3vP/IwkSnTu2VIWAAqlgn7DO3MhKJKl
      C1ZTkFeMo7M9Q8f2xMnFAUmSiL+axr5/TrFrYxDx0an0HtyBaY/dxYKHv5VtUbs3nqRNx6Z0
      798WgJAzV3n/mZ8JaOpNm45NKMovYfu6QH5aupmRE/uw6PsncDdZMc2Klbpy0xE7vQZ34NEX
      75G3Vy/fzcVT0eRmFfL5W2uZ8tBwBo/uXmVnk5ddyNwJn3Bg6xm+WvcyC5Y8xNjpA3j4+fGs
      P/oRg0d351JwNHPGfcSZY+HycQ6Odgwc2ZXeQzpY1CkIAt7+7gwb24N7Hx1xQ/ek0+rZvTEI
      gFc/mX3TSzHWhqAQeHXxbPqPqFym79fPt3Fg6+l6eR/ptHrefeonfly8mafeuJdPf3ueiTOH
      MO3Ru/hlx9s8Pn8SSXEZzH/wK9b/uK/BPJuup0ytZb2Jq/DoKf1w93Jh98aTxESmEBWagChK
      RgeCd9bh5OLAhJmD5fIVTSU6LJGnpixl/P2DWLnrHV5b+jBLf3uO3/d/gLOLA0GHLvPMvZ9S
      XKg2O/+SBb8TfzWND396Cr/GXji7ODBsXE++27gAOzsbC4P07r+D2LjyEPM/mkXXvm1wcLKj
      Q/cWfLn2ZTr1aGHmAODi5sTUh4fjX4URXhAEmrTwZdKsoQy+23LZzaKCUo7uvkBUWCKxkSmI
      ooTBIPLxy6to2a6RLPQkCdlB4PKZqzw5aTHzFkzhxy1vsGDJQ3yx5iV+3v4WNjZKDm47w8sP
      fmWxGLoVK3XhpgWAIAg89ca9dCofoet1BhY9/yuLX12FQiGwYMnsKjt/g8HAohdWEBkSz4SZ
      g+k/ootZOScXBz74bh7uXi4UFZTy+pzlZKXnmdXh4FjzYtVOtazLWh3nT0aSEJPOxFlDmPTg
      kH9lim1nb8tnv78gxxtIksQ7T/7ENRNVV01IksTq73az66+TdOhuDMoz9TJSKhU89979dOnd
      CtEg8tkba7gYFNWg9yBJEllpebz2yLeEl7sGt+7QmLeWPYZSqeCJ16by4Q9P4uVndARIjE3H
      w8uF97+dy9LfnuPnbW/x6arnGTq2J+pSDR88+wvNWvnx4DNjZVWPIAh07N6C8eWj7sjLCWz4
      9YAszHQ6PYd3nMPWzsYswloQBNp0asLoe/uj15kLgANbTgPI11WBg5Mdc+ZPsvAAEwShxrVj
      BUHA0cWy7bm6OzHn5Ym89/VcPLyNI/bLZ67Rc0A7Xlv6EN9ueJVvNrzKN3+9QpferSkpLuON
      x7+n79BOZkZ1QRDoM7gjw8f3AuBs4BV5BmXFSn1okJh9Byd7Fn7/BPaORt3ytYhk9vx9ine/
      fhx3z6qnpiGnr3Jw2xkAxk0fUGUnG9DUm0mzhgCQlZZ3S0etFUiSxKZVh2ja0pe3vngUpfLW
      6P6rwtvPna/Wz5eNwqXFZbw4YxkFeVWngTAlJ7OAVV/vBGDkxD5VegnZ2tnw2EsTQTBGJn//
      yaZqF1avC+dPRvDtoo38uPgfPn19NU9NXsLYTi9yeOc5nF0dmbdgMuuOfWSW7kOhVNCspXFx
      cycXBx57eRKCIKBQKBgypjsTZg5GqVRweMc5Lp+9xthpA1AoBERRlP9JkkTvwZWzv4Pbz8r2
      Bo1ah06rpzC/xEwwgLHjvHtKPwu7QVGh0YX59693odXozPb1HdqpwWeA7l7OuHkYFzhv2sqP
      KQ8NMz4DpYK7J/c1XqNCYPMfR0iMSeeeGYORJMn8GSDRc2D7ymdQ/i1ZsVIfGswhv3OvVsx6
      cozcCXXo1pwR5SOU65Ekid0bg5AksHe0pXmbgGrrHXffQNb9sA9RFDmy6zzPvD29xojZmyUt
      KYeTB0L4Ys1L1QqvW0nnXq344Lt5vD3vB0RRIjEmnTcf/57v/l6AqgZD9KnDoeRlG42TFfrq
      qhg6tgeubk4U5pdwJvAK+TlFN+yaW1SoJvxCDHqdAZVKiYubE4+8MIGufVozcGRXHKuZgVWM
      nl3cHKs0SEuSxPb1xwFYs3w3//xxxKKMukSDonyGk56cjU6rR+lgi5OLPS3bNyYmIpnFr6wi
      MSadp9+ahqu7E4IgMOIeyzbZtU9rzh2P4OC2Mzw77TPe/OJRWndobAx+83XjoefG39DzqQ6F
      QoFduYuxi5uj/LcpkiSxo/wZfP/x36xYts2iTHFBqfwMEmPTkSTJahC2Ui8aNCLLv2mlkdXG
      VlWt07goSoRfNKoIVCoVTlVMlyto3aEJnr6uZKfnkxSbQXFh6S2NJTi25wK9h3RkwIgut+wc
      tTFp1lCiLifIwjRw70WWf/Q3Ly2cWe0xoedi5L/dPJ2rLefs6kinni0JPhKGaBCJupzIwFFd
      b+g6R4zvxTtfzan3cRXNorquqqRIzbUrSQA8+859Zg4AVaFQCtjaqcrrFnj1kwd5ceYy9DqD
      US224STzXpvCjLmjsHewVN089Ox4Dmw5Q3J8JqcOh3L/wDeZ+vAInnrjXvwae96STrW2KosL
      K5/Ba0sfonFz3xrL34zHmJU7l9sSkmswiBTkVqg1albpOLs64OPvTnZ6PmVq7S03dl0KjuKh
      Z8ffMrfPuvLyh7O4Gp7EiQMhgDFSuEO36kf2pq6JtdGiXSOCj4QBkJ9bfczB7aJMrZUjy+0d
      7WjbuWm9jh8+vhff/PkK7zz5I/m5xeRkFvDpa6vZuuYYC5c/Qdc+rc06df8mXvy6820WlNsu
      tBo9G1ccZP+W07zy8YNMfXj4Lc22WhV52YUY9Eb1nLOLY72fwc0gSRKGMh16jR6xwl4igI2j
      HSoHm9s+yzDoDGjyje1DZW+DrYu98beCUkDAwcupepdzUaIwJQ/Xxu4IiprfaVmBGskg4uBZ
      c7beW0lZXimi3oCtsx0qk9myJIqoc0pAAHt3RxQ32F/dlry9AsjqDJ3WQGF+9WkkBEHApTz9
      gFKluKVpJCRJQl2qld3vbicqGyWfrnqeZq39AaPf+MLnfiXyctWRwqYjwJzMghrrdjFJ51CT
      MfO2IUFFprzosBuLIB4xoTebz3xmtCmUt7Woywk8OWkxp4+GW5Rv1tqf1Qc/4OUPH8DF3fjB
      5+cU8cGzv/DrZ1tuylZyI5iauqLCao4Ob2g0hWpyotNR2dmQHZFKxqVENIVlJAddI/V0LNK/
      /CyuRxCgICGHhGNRso1HEARyozNQ59ZsL5NEiaLkPER91fcgSRLaEg0AmoJSynJLGvbi64sC
      Eo5FkXo+wcyeVZicR9zBK5RkFNYtPL/66v99VDZKmrQyGgI1ZVo5u2R16MpHId5+7jjcwgRo
      BoPI0LE9/pVAqbrg7uXC13/Ol1MqFxWU8vs3O6ss26JdI/nv2tIu6HSVXi1Ny9/Dfwl7R1u5
      Ez51OLTWPEI6rV4WepIkyYZcv8aefLrqeVbufocuvVsBxmf4/jM/U1RQ+WFryte5sHew44nX
      prLp1BImzhqCUmUMLPzhk3+4eCq6we+zJjx9XGXBdfJASK3OD2VqLfk1RJDXFdEgknY2Hu9O
      jVE52GDr6oCNsx0erXxo1K8l+fE5aArUiHoDokHEoNUbDdR6g/x3RT36Mh2i3oAkSUiicdug
      MyCJ5ceJotlxkiRh0Bkw6Ix1S5KEQatHvO79K1RKvDs3QlAIaAqNQXeC0tgJerT2RdSL6Eq1
      sqAyPY+gFGjUtwUKlVI+n06tlc9XkJBDblQ6okHEtaknbi2Mam1JkhB15dda7nAgicb7rqi7
      opxBZzDeexXpY0SDiEGjl/dVlK/4/fr3bO/miJ2rPcUpeWjLA1MlSaIwMRelrQp7TycUSgWS
      KKJTazGU95VyvXoDol5EEqXK529yjoYVAHV00BEEgUEjK/XOx/ddqrasXmcgJyMfgB7921Xp
      2lnhGXKzqFRK7n981C2f4ho/CKlO+YXadWnGhz88JasgDNWMXAbc1UU2CAYdulxjp5mRkgtA
      o+Y+tKjBAH+7cHJxkFUeYedjOG+yjsT1SJLEH9/ukoOo1CUavnh7ndnIsO/QTvy+/wPZoywl
      IcvMZvL5m2vNVItNWviyZMVzvPv146hUSgwGsVovm1uRIwqMxuE2nYzrUJzYH8K1K9W7A4ui
      yA+fbOLCqZt36y1Oy8fG0RbldTYFSZLQFKhRqBSo80qJ2RtGSnAMCUcjKU4rIPtKGmnn4sm4
      lIioN5B6Jo7i9ALSzieABKln4ylOLyD1dCwGrYHEwGgKk3LRFKiJ2ROKtqiM9PMJxB+KIPFY
      FLlXM8gOTyX3WibxhyMpzTEf2ds42OLW3Ivc6HQkUaIsrxQ7d0c0BaWknIqhOC2f5KAYdKVa
      Eo5GkXTiKrEHwsmJTCd2Xzi6Ug2a/PKyKfmkBMcg6kUKE3NQ55dSnFZA2vl40i8YZ18FCTlk
      haeQHZFGctA1DFo9aefiiTsUQfqFRGL2hqIpVKMpVJN+IYGCxBxyr2aYXXNZfilp5+LJi8si
      MTCasrxS8uOyid0bSvqFBOIOR5Afa5kyxd7DCQdPJ3KijIZ+dU4Jdu4OstATDSLJQTEUpxWQ
      fPIqZQWlZIWlELc/nKQTV8kKTyHzchJFyXmknY2ThRU0sAAw/Rhq65DvmTFYdq87sO1Mtbro
      lIQsMtPzUSoVzHraPCLX3sHoDaTXGcjJNNeBS5Ikd3QVZWqjqKCE+OjUOmX+NEZ1phIdllhl
      JyAaRK5dSSI2KsVCfaDV6NDpDDVmUK1AEATGTOvPE69NrbFcpx4t6VXuGnnlUpzsh389er2B
      0HPXAHjw6TEoVfVrAqYC6FapRQRBYNIsYzZRvc7Ahy/9RlJshkU5SZLY908w+zYHM3b6APm3
      Y7svWLwTB0c7Xl08W3axNW2f8dfSZINrBQqFwH1zRtF9gFEdeH2qbvtyz53MtDyLc+l1BrLL
      By2SJFU5EqwLFRlVDQaRN+d+L9dpiiiKbPrtMJfPXmPI6O4W+3OzC7l89ppZeoqaUOeUYONk
      rhYsyy0l42Iihcl5NB3SFrfmXkYPqXb+NBvegeyIVBQ2Cmyd7SlMzEVbrEGdU4zKzgbPNkbj
      dUlGIYJCwKtjAEo7FTZOtkiihL2HI4JSAYKAk58rglKg+V0dsHOxpySzEKWNEoWNgoL4bItr
      9WzjhzqnBHVuCYVJubg18wQJXJt54uDlTFFqvnEW42KPg5czrcd0wbOtL1L5SFUCXJt6YOfh
      SFleKZIo4uDtjKOnE65NPHDwdEY0GEfOWWEpeHUIwLdbEwxaPflx2Tj5uaC0VRHQtwWOPi6U
      ZhejLSxDW6jG2d8NJ79K92FJksi4lIhrEw+8OwTg7O9KRkgiTn6uSBL4dm2Cd4cAitOrUN8K
      Al4dG5Efl42hTEd+XBYercydAuzcHXD2NzrHlOWV4hzgjiRJNB3SFp/OjSjJLEKSJLw7Bpi5
      QTeoADDVPRfkldTYQXh4u/DKJw+iUCrISstj7fI9FkJDkiT2/B1EWamGex+9i16DzCN/W7Zv
      LP/9+zc70Wp0SJJEcWEpK5ZtJ+hwqLw/9HwMer2hWsGUkZLLzKHvMqH7K7z/7C+1qh32bz7N
      1D6vM73/G6z9fo/F/j9/2c+0/m8yrd8bclRxBdkZBRQXlhITkSynS6gJQRB4+q1pjJrUp9oy
      NrYqFix+CBd3R/Q6Az8t2VylIAs+EkZqYjZderfmgSdG12u2I0mS2TvOr0XfWh36ciFSVqar
      9n2MnNSHrn2Naw/ER6cyZ9yHbPrtMOnJOeRlFxEblcJX7/3JRy//xpufP2q2NkJqYhb7/gm2
      qNPRyR5HJ3vcPJ1p27lZ5fXoDKz7ca9FR61QGNdAAOgzpKPZvlYdjG0vN6uQrauPYihvW1lp
      eSxZ8DupCcYOq0ytJTo8UVYxgPE5VjwDnVZf7Sxi2iMjZBtQZEg8D49ayM6/TpCZlktediHR
      4YksfvV3vv9kE29+/oiFe3R6cg6zhr3LrGHv8uLMZbKqqyYkUbSIk7D3dMS/V3OaDGyNs78b
      gmBUuShtVYBRTePW3AvvTgG0vqcbdq72eHcMIOV0DHnlI1r/Xs3JuJRI9pXUarMGCwoBlZ0K
      hVKBtliDvbsj7i29aTa0Hb7dmlq0FVtXe5wD3Mi+kopBq8fGyWgoLc0sQleikQ0pgiCgsrdB
      YaMEwZhMEYwGZGOnrTYaJq+7rIovQ1+mQxJFBKXCGOTn7WJUx5THboBRLSWJIs4Bbti5OxJ3
      KAJNQWWEuiRK6Eq05c8MYx3l1ygoBASFgMJGUe2zcWnkjq2THRmXk1GolKjsKm2hFTEkBQk5
      RsN2eZ0KGyUKlfGfX4+m5EZnkH4x0aydN4gA0OsNpCZmEbinMq9+cnwmpw6Foi7VVPmRC4LA
      5AeH8eIHM1DZKFn19U52rD8uj9QlSeLc8Qj++G4Xd03ozYLFsy08McbfN1CO3lz7/R5mDH6b
      p6cu5d6+r3PlQiwvL3pALvvblzt4c85y0pNzqryHsPMxJFw12iKO7jpPcWHNo/PDO8+h0+oR
      RYlD28+a7ZMkiUPbzmLQG9Bp9RzZdd74uyiRm1XI79/spLS4jNBzMRzZdb7aZ2SKja2KRT8+
      VaM3SJferVj8y7O4eTpzfN8lvvtwI+pygxYYZ1Ofvr6alm0D+GL1i/Wyp+j1Bq6GJ3EpuFIX
      fiEokuiwRFnw1oYkSWSm5cmj7dysQs4EXqnyWAdHOxZ9/wR+5Xl+0pJy+OC5XxjX+SXGd32J
      Kb0WsOHXA7z/7Vx6DWpvcfySBb9z/mSkPAgRRYn9W09TkFfMM29PxzfAw6z8rg1BrP1hD5oy
      nXyt164kcSbwCndP6cvw8T3Nys+Yd7fserroxRXMvut9npy0mPsGvYWLuxP3zRlprEeU+PDF
      lSxZ8AelxWVIkkRMZAqZqcbZafy1NCJC4qt8Bk4uDixd+Rwu7kajfWJMOm/MWc7Yji8xvsvL
      TOv7Bns3nWLxr8/SoVsLi+PDL8aSHJcJwJnAKzVmma3A1sUBfZlJMJwkVa3aLf9NqVIiCAKF
      SXlIkkRRci6lWcXYONnRcnRnitMK0JVqEHV6Wo3pgq7EODsQBAGD1oBBW66jvk4I2rnaU5SS
      h05t1FvnxWRaXIIgCHi286MoNR/nADcEQSAnKg2lrRIHL2fjpVd0qCb3IGG8p9zoDBRKBY4+
      riBKSAYRQRAQDUabQcUhNuUBrhUdul6jw97TqbxOk/olKMksxLdrExr3a0l2RGrltSoE7Nwc
      KMkoNA4ANHrs3R3NB2ASFs9akiRErR4E8OrgT35cNh5tfCtPLRmN9rlXM/Bo44ugEIz3bPLe
      JElCV6Kh5ehOIAiUpFdqS5QLFy5cWMXrrTPGpFRb2PDLAUpLynD1cDL+c3ci6GAoJw+GEHQo
      lKFje1oEMikUAj0Htqdbn9bERqawZc1RTh0JJepyApv/OMLm1UeZ/fQ4Xv1kdpVJ21zcHOk/
      vAsxEcnk5xSTl1OIVqvnwafH8consynMK+HiqShmPzOO+R/NYsbcu6v1kXd2deTUoVBKitSM
      nzGIMVP7m2VjvB5BgKO7LyAIAg+/MJ5ufdua7BMoU2s5dTgMWzsb5r46mWat/fnszTWs+noH
      kZcTcPVwwtnVgdNHwzh58DIubk60NDHkVoWDox29B3fg8M5zTJ8z0iLQShAEWrZvxJAx3clK
      y2P/FqN6JCYyhX3/BPPbl9vpO7QjH//yjLygT12IiUzm45d+4+/fDhmnUvA3OAAAIABJREFU
      zeXvWKlScmTnOYIOhiIIAu26NKu2jtKSMpa88jtrlu/BYBBx9XDCxc2RM4FXiA5NQKVSyqPd
      Crz93Bk6rgeZKblkZ+QbBY0oYmtnQ/8RXfjkl2cYcJd5ChG9zkDImau0bNeILauPcvpIGBeD
      o9nx5wnOHrvCgsWzmfrwcLNjzp2IoG3nppzYH8LBbWe5fOYaR3ef5++Vh5g8exivfjLbIn6g
      UTMf2ndtTlRoIkUFpeRlF2Jja8NLC2cy+5lxXA1PIjergLmvTObFD2YyceZgSorULHn1Dzb8
      egAE43N0dLLn9OFQosMTcXZ1sHgv/k28GDqmB4mxGeRlFcqDDnsHW4aN68niFc/SoxqvNWcX
      BwL3XqQgr5ghd3fj3kfvqjGYEIydXU5kOu4tfdAWlVEQn41Bo8fOxV5WDZVmFRlVFQoBB29n
      7FwdyA5PpSg5DztXBxy9nckKTwEElDYKXJt6kRGSbPxoJHBv5YOgVJATlY62uAxF+WxCnVuM
      pqgMew9HHLyc0RaVkX0lFXVOCZ7t/FFVEQBq42iLrkSDV1t/BKUCg9ZAXmyW0X1VAl1xGZqi
      MgxaHQ7ezpTllFCSXoCy3H00v7ysWC4AHDydjcJGkijLL0VXqsXZ3xUHLxdyozNko7RXO38K
      4rONMxUPJ4qSchENIjYOduTHZ4Mk4eDljKOXsb8RBAEHTyejGkejpyy3BJ/OjVHnllCaVYSd
      qwOlWUVoi8tw9ndFaWMcXOTHZFGcmo+Nsx0ujT2Q9AbcmntRmJiLOrsICQlHbxeK0woozSpC
      5WCc1Rg0erTFZdi62GPrZEf2lVREnXEW6t7CW7bx1GtN4FuJQW8g/lo6iTHp6LR6fBt50Lp9
      Y9kbpLZjU5Oy0esM+Df2kvW8xpEpdV48pbhQTW5WAY2a+9T6oUiSRHJcJlqNjlblUaOmiKJE
      wrU0FAoFzVr7NZhhWZIkkmIzCGjqXaNLrCRKpCXnEBuZQkmxGg8vF1q2b4y3n9tt9+OuLxUz
      h8zUXBQKBd7+7vgGeFR5H1L5Ij92djZoNTqy0vIoU2txdLHH19+jyvgOTZkWO3tbRINIdmYB
      RQUl2Nja4BvgUatHmKZMS1pSNgqFwuydlJaUYVe+8ltDPYO0pByy0/NR2Srx9ffAqw7vMj+n
      iLSkbFq0a4RDHVx+JUkiPy4bQRBwb1n3QYIkikiSMdWHrOoyVKpNJEmy3BYlOV9Vde9S0osI
      KkWN9ykaRONgTajcNs2DVVMaetNrqChbcbzFN20wzlQUNsoa60Qy/l9VqnLjiN6Awrb6Om4E
      SZTMIiuvr9v4/CUEpfl9/WcEgBUrVv4bGN0Mc3D0cZXVH1b+N7EKACtWrFi5Q7ktgWBWrFix
      YuX2YxUAVqxYsXKHYhUAVqz8X3v3HR9Fnfh//DXZTa+mkgQIiBSpygNCiUizEAHx1PM85VDv
      PB9ylhP1VGyIFVERvfPU81SwYkEeD1QkiDTBSrFRA2IokU0vu9lsnd8f/NgzBgRF5Suf9/O/
      7E5mPrMJ85r57IYRMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBEx
      lAIgImIoBUBExFAKgIiIoRQAEZHDZNv2D94D/aes79f4n/oVABE5qn322WesXbsWgEAgwLx5
      8/D7/T/b+uvq6rjhhhuYMWMGAOFwmDfffJNZs2Yxa9YsFi9efNB1BINBdu/eHTno33fffXi9
      3lbLrV+/nlmzZvHaa6+xbdu2A0bC4/FQWVl50O0qACJyVMvMzGTatGl4vV6WLl3K+vXriY6O
      xufzUVNTQygUAvYehBsbG/F6vXtv3B4MEgwG8fv9kWUA/H4/VVVVhEIhwuEwS5cuJSsri6uu
      ugrYG4C5c+eSnJxMbm4u6enp2LaNz+ejvr6eQCAQWU84HMbn81FVVcWdd95JU1MToVCILVu2
      4PP5qKura7Htzz77jG3bthEKhbj55ptZsWLF3pu+BwI0NDTg8/mwbZu1a9fy9NNP09zcHNmX
      6urqyLb3OfBNZUVEjgL5+fmcdNJJvPzyy6xatYq7776b8vJybrvtNtLS0sjJyeGGG25g+vTp
      uFwu9uzZw5QpU9iyZQsbNmxg3bp13HHHHfTo0YPdu3czefJkkpOTiYuL4/rrr+eVV14hGAzy
      5JNPcvXVVwPgcDgoLCwkPT0dp9NJfX09N910E9HR0fj9fh5++GGmTp1K27ZtWbNmDZ07d6a0
      tJTJkyfzt7/9jXA4zC233EJlZSWnn346l156aWR/jj/+eM4//3x69+7NzJkzGTx4MHfccQce
      jweXy8WUKVN46aWX2LlzJ/X19UyaNInp06cTFRWFx+Nh+vTpJCbuvde6rgBE5KhmWRYTJkzg
      tddeo3///uTm5vLOO+9QWFjIFVdcwfr166murubPf/4zY8eOpWPHjqxbt45QKMRXX33FzJkz
      6dGjBwALFizgd7/7HY899hgxMTFUVFRw3nnnMW7cuMjBH/ae3d9555384x//YM6cOaSkpHDN
      NddQXFxMbW0tLpeL5uZmGhsbefzxx5k4cSJdu3ZlxowZdOvWjaioKO69916mTJnC119/vd/9
      at++PdXV1TidTi6//HKKi4tJT0+nrKyMiy66iKFDh3LfffexY8cO/H4/V1xxBYmJiXz55ZeR
      degKQESOeqmpqfTq1YuioiIAmpubKS0tJSoqiqFDh9Lc3MzUqVM566yzyM3NjUy7jBkzhvz8
      /Mh6mpubSUlJASA5OZnm5ub9bi8mJoZp06aRkZEBwLp163j22Wc599xzSUtLw7ZtoqKiGD9+
      PPHx8Xi9XsLhcIs5fYfDgcPh2O/6bdtm9erVdOzYkZqaGm6//XYuuOACcnJyCIfDWJYV2Qef
      z4fL5aKkpITjjjsuMibQFYCIGMCyrBZfn3TSSdTW1hIbGxuZG3e73VRUVLQ4Q/7+95188sm8
      +OKLPP3002zYsCFyZfB9gUCAxx57jOnTpzN37lyamprwer1s2rSJ8vLyVssnJibidrt57LHH
      2Llz5wG3D7B48WJuv/12/vvf/3LZZZdFxr5r1y42b94MQHZ2Np9++imzZ8+moKCA2NhYANxu
      Nz6f73/rt3+NzxqJiBxh27dvJzs7m8TERGzbZseOHezcuZP8/Hw6dOhAaWkplZWVtG/fntjY
      WKKiorBtm6ysrBbr2bp1K9988w0nnHACmZmZVFVVEQ6Hyc7OBvaenW/ZsoWmpiYAUlJS6NCh
      A59++ikJCQkkJiaSn59PeXk5+fn5kYPz7t27KS0t5cQTT8TlctGpUyd8Ph8VFRV06NABgIqK
      Cnbv3k1cXBzt27eP7Mv69etxu93k5uaSkpJCWloamzZtora2lv79+9PQ0MCmTZtITU2lW7du
      OJ17J38UABERQ2kKSETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVA
      RMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFD
      KQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAROarZtk1dXR0fffQRGzdu
      xO/373e5BQsWUFdX9yuP7shSAETkqOZ2u7nyyitZvnw5zzzzDCtXrgT2hiEYDEaWW7RoEQ0N
      DUdqmEeE80gPQETkl1RRUYHT6eTyyy8nJSWFYDDInj17mDFjBm63m+LiYsaMGXOkh3lE6ApA
      RI5qBQUF9OjRg8suu4yHHnoIr9fL888/T1FREXfccQdvvPEGNTU1R3qYR4QCICJHNYfDwfXX
      X8+//vUvAoEAc+bMoaKigh49epCVlUV6erpxUz/7aApIRI5qGzZsYPny5fTu3ZumpiYKCgo4
      /vjjmT9/PgMHDqSmpobs7OwjPcwjwrJt2z7SgxAR+aU0NTWxcOFCysrK6NixI8XFxYTDYebO
      nYvL5WLMmDF07dqVkpISBg4cSGpq6pEe8q9GARARMZTeAxARMZQCICJiKAVARMRQCoCIiKEU
      ABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAERE
      DKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQC
      ICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiI
      oRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIA
      REQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBEx
      lAIgImIoBUBExFAKgIiIoRQAERFDKQC/UQ0NDXi93p99vbZts2PHjsNej8fjIRwOH3AbTU1N
      NDQ04PP5Dntbh8vj8bBgwQJCoRCNjY00NDQQCoX2u6zX6+XNN9/Etu1feZQiPz8F4DcoHA4z
      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
      iBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIo
      BUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAR
      EUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAyl
      AIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAi
      YigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEU
      ABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAERE
      DKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQC
      ICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiI
      oRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIA
      REQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBEx
      lAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqA
      iIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKG
      UgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQ
      ETGUAiAiYqj/By2PUkb5YMpXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='High/Low Temperature in each Season (2)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXAU950+/qePOXVfSIhDCCQBEojLnHa4bGww2MH4wk4c7+ao7JHaTcre
      1GY32U02tcnWLxUnm2Szu7VbOWrj2IljrhgbzA0CDBgQkpAQp+77mhmN5urj94e+6iAQIDOS
      mlE/r6pUrGGm+z3v6emn+9PHCLqu6yAiIksRBEEQzS6CiIjMwQAgIrIoBgARkUUxAIiILCom
      A8Dv90PTNLPLICKKaTEZAO3t7VAUxewyiIhiWkwGABERRY8BQERkUQwAomHQNA2hUIhDjzSu
      yGYXQPSg8/v9eOONN1BaWor4+Hj81V/9FZYuXWp2WURRYwAQ3cORI0cQCATw5ptvor29HT6f
      DwDQ2tqK0tJSTJ8+Hfn5+QgEAigvL4ff78fcuXORnp4Oj8eDsrIyOJ1OzJ07Fw6HA3V1dais
      rMSsWbOQm5uL7u5u9PT0oLOzE8FgEMuWLYMs86tJo49DQET3kJ6ejqqqKuzbtw9xcXEoLCxE
      W1sbXn/9dTQ0NOC73/0uKisrceLECRw8eBCnT5/G1772NQSDQXz961/HyZMnsX//flRUVODy
      5ct47bXXUFNTg7//+79HeXk5SktL8ZWvfAUffvghfvzjH+Pw4cNmv2WyCAYA0T0sWrQIr7/+
      Oo4cOYIvfvGLOHPmDM6dO4ekpCTMmzcPBQUFOHHiBBYvXoyioiIkJiaip6cHPT090DQNNpsN
      69evR3FxMQ4ePIjnn38ef/mXf4mtW7fiwIED0HUdDz/8MP7hH/4B69atQ1dXl9lvmSyCAUB0
      D5FIBMuWLcMPfvADfOYzn8GuXbugaRq6u7tRXV2N3NxczJ8/Hz/96U/R1NSEhx9+GImJiRAE
      Ad///veRl5eHn//853jvvfegqqoxvCPLsnFBoyj2fxUFQTDtfZL1cKCR6B527NiBM2fOYPr0
      6Th9+jSefvppzJ8/H7/4xS8QDAYRiUTQ2tqK3t5eyLKMQ4cOoaurC4qi4D/+4z8wd+5cJCYm
      IhQKYdWqVfiXf/kXRCIR7Ny5E6+//jo8Ho/Zb5EsSojF3wOoqalBdnY27Ha72aWQBYTDYZw7
      dw6tra3IycnBvHnzIAgCmpqacP78ebjdbixZsgR9fX04duwYZsyYAUVRUFRUhNraWlRUVCA1
      NRWPPPIIZFnGpUuXUFZWhjlz5qCwsBAdHR3o7u5GQUEBampqYLPZMGnSJLPfNo1zgiAIDAAi
      IgviD8IQEVkYA4AAAKqqml3CuBMOh80uYdyJRCKIwUGLBxYDgAAAPT09Zpcw7tTW1ppdwrjT
      0NDA23GMIAYAEZFFMQCIiCyKAUBEZFEMgGHQdR3vvvsuysrK7vo8r9eLQCAwRlXFtkgkgiNH
      jhh/Hzt2DJWVlca/HT9+HD6fDydOnLjjNLq7uxGJREa91lhTW1uLd955B2+//TaOHz8+rNfo
      uo59+/bxZID/p7u7G9u3b8dbb72FvXv3IhQKmV3SqGAADENnZydCoRAqKiqMMxDC4TB0XYeu
      6wiHw1BVFWfPnsX169cRCASgaZpxFsjAcwb+v6+vDz6fD5qmwefzGaERiUSgKAq8Xi+CwaBp
      73csyLKMGzduIBgMQtd1VFVVGQHQ1NQEv98Pl8uF2bNnA+jvdzgchsfjMfp09OhRtLa2GtNQ
      FAUej8f4sqqqCkVRjNdaxb59+7Bu3To8/fTTyMjIANDfv2AwCK/Xa6zkB5bJQCAAXdcxf/58
      iKIIRVGgKMqgZXPg+T6fD8FgcNz/JveePXuwZMkSPPPMMygoKDCWr4H3HYlEoGmasXx5vV6E
      w2GEQiGjx7d+31VVNXo6sB4JBoPweDyDPhNN09DX1zcmPeatIIahqqoKDz30EEpLS+HxeJCc
      nIz3338fTz31FHRdx+7du7F69WpUVlairq4OjY2NWLZsGY4dO4aNGzciHA5j7969ePzxx/GL
      X/wCEyZMQEdHB5xOJ5KSktDS0oJXX30VH330Eerq6pCUlIS2tja8+uqrcDqdZr/9USEIAqZO
      nYr6+nqkpqZi8uTJxsr96tWryM/PRzAYxKlTp7B+/Xq8/fbbsNlssNlsUFUVK1aswLVr1xAM
      BpGVlYUVK1bgD3/4AxISEtDZ2YktW7agtbUVN27cQG1tLZYvX46ioiKz3/aY0DQNHR0dyM3N
      RUFBAQDggw8+QG9vL5xOJyKRCF544QXs2bMHKSkpuH79OrZs2YIjR47gueeew5kzZ3Dx4kWk
      paWhubkZr776Kvx+P9577z2kp6ejtbUVzzzzDNLT001+p6PHbrejsbEREyZMwLRp0yAIAk6d
      OoXs7GxMmTIFJSUlmDt3Lq5du4by8nKkpqairq4OEydORCQSwaRJk7Bq1Sr85Cc/QW5uLtra
      2uByuZCUlIT6+nr89V//NTo6OrB3716kpKQgEongmWeewQcffACHw4Hu7m4888wzo/79ZwAM
      Q21tLRYvXoxgMIiqqiosX74cfX19xr8HAgGkpKRg/vz5yMrKwowZMxAIBIytJ13Xja3UjIwM
      PPfcc7hy5QpaW1vxyCOPYM+ePfD5fAiFQti4cSMyMjKwe/du4ws7XuXn56OiogJpaWmYMWMG
      6uvr0d7ejsbGRqxatQqBQMDYExIEAVu3boUgCPjNb36DiRMnYtasWViyZAnS09Nx6dIl5OTk
      YMWKFaiurkZZWRnS0tJQWVmJL3zhC4iPjzf53Y6dF154AYcOHcK+ffvwyCOPYO7cuVAUBZs3
      b0ZcXBx2796NlpYWeDweuN1uvPLKKxBF0Vimw+Ew1q1bh5ycHOzfvx89PT04fvw4Nm/ejNTU
      VOzZs2fc7wFs2rQJR48exf/8z/+gsLAQK1euNPb0ASAUCkHTNEQiETz66KPIzc3FW2+9hc2b
      NyMcDmP//v0AgKysLGzZsgWXLl2Cx+PBsmXL8Ic//AGhUAinT5/G+vXrkZGRge3bt8Pj8aCx
      sRELFizAE088MSY3BmQA3ENXVxcaGhqwbds2KIqCUCiE5cuX3/f0Bj5UQRCM/x64E+TN/y1J
      UhRVx4YJEyagvb0dfr8fGzduhM1mQ2VlJex2+20/iHKnfg3o7e3FhQsX0NLSAk3TMGvWLADA
      ihUrLLXyB4Dk5GRjRfTLX/4SBQUFg/rndrsRiURgt9uxcuXKIft5a68jkQgSEhLG7k2YzOFw
      YN26dVi7di22b9+O+vr6e77mTn0UBAGiKA767gOAx+PBgQMH4HA4jOGltLQ0LFq0aMzuCssA
      uIfy8nJs3rwZM2fOhK7reOutt+D1ehEKhdDZ2QmPxwO/3w+g/4tVX1+P9PR02O12eL1e9PT0
      oK6ujhevDMFutxt7Rw6HA5mZmdi9ezcKCwuH/fqGhgbY7XZMnjwZ1dXVWL16tTF+evNemlXo
      uo7Dhw+jqKgImqZBFEVIkmTcvtrj8eD69eufeCNm+vTpeP/99zFjxgxcvXoVCxcuHKV3YD5d
      13Hy5Enk5OTA6XQiHA7D4XBAlmW0tLQgPj4e9fX1UfcgJycHAFBcXIympiZT7m0mffvb3/72
      mM81Sj09PUhISBj1rWRd1+HxeDBz5kxIkgRBEJCUlARBEJCeno6PP/4YmqYhJycH2dnZSEtL
      w5UrV9DS0oLc3FwIgoDz58/D6XRiypQpmDBhAiRJMg7MDYwJAkBKSgrsdjtSU1Nhs9kAYNB/
      j7ZAIAC32z0m8xogCALcbjcyMzMxYcIE2Gw2KIqCwsJCxMXFAeg/WDww1pyZmWm8NjMzExkZ
      GSgrK4PX68Xs2bNhs9lQXl4Oj8eDGTNmwOFwIC4uzrQt166uLqSlpY35fPv6+nDx4kW0tLTg
      U5/6FJKTk1FRUYH29na0t7dj5cqVSE5OBtC/F3bzlmtWVhaA/r2IgeHH5ORkTJ8+HbIsIxQK
      IRgMYvr06WO+vAD93/3ExMRR/+4LgoCysjLU19djzpw5yMnJQUpKCsrKytDS0oKpU6diypQp
      sNvtSEpKgsvlAgDjO37z93xguXW73UhMTAQAZGRkYPLkyWhubkZ1dTUkScLUqVMhiuJtn8lo
      +c53vvMd3g2UAPSf6WTGymo8u3LlCvLz880uAwCwfft2PPHEE/e90i4tLUV7ezskSUJDQwNe
      fvllU363+MaNG5g8efKYbRiNZ4IgCBwCIrKAlStXwuFw3Pfri4uL0dbWBlVVsXLlSv5o/TjB
      T5HIAqLduxNF0RgeovFjyADw+XxoaWkZ61qGbeACqluFjvx/0BWTLqASRDjXfnNYT1WbSxGp
      3DXKBd2ZnLMCct5jgx5rbW297Xmd3gB+f/DiWJV1m0kZCXj64ZnDeu6h8zW4VNsxyhXd2ZPL
      8pGTlWT8raoqVFVFZ2fnoOeFlRD+7+NfjHV5hiRnMp6b/9Kwnnuu4QzON3w8yhXd2cO5KzEr
      c/C1G319ffB6vYMeU/uuI9i2eyxLG8SWUAR72tphPTfYsg1qsHGUK7oz16TPQLSlGn8PGQAJ
      CQkP9Clfdxqv9rUcA0LeIV4xBgQJCWk/GtZTIy1eBBsPjHJBd2abOBXOW/o31AFLX6QHZ651
      j2Vpg4R027C3XJt6rppa6xMPOwbVGolE0NfXd1v9/lAvSjvNW6lmJWQPu6c99V2m1row76Hb
      ah1qOQ2Ll9HbfGosSxvEYUtG3DB76m27AkUtH+WK7iwp6fOQXH+qlbeCICKyqAfuGICiKKip
      qUFcXByysrLG7IIIorEgSzaszX/ctPknuZJNmzc9eB6oANB1Hdu2bUNqaipaWlowd+5czJs3
      z+yyiEaMQ3bgi8v/yuwyiAA8YENAXV1dEAQBjz76KLZu3WpcaEVERCPvgQqA3t5epKWlQRAE
      yLIMh8PB+5MTEY2SByoARFEctMUfgxcpExHFjAfqGEBiYiJaW1uhaRqCwSBUVeUVh0REo+SB
      WrsmJiYiIyMDb775Jnw+H5588kmeBURENEoeqAAQBAHr1q1DX18f7HY7b/hERDSKHqgAAPpD
      YOBWwERENHoeqIPAREQ0dhgAREQWxQAgIrIoBgARkUUxAIiILIoBQERkUQwAIiKLYgAQEVkU
      A4CIyKIeuCuBiYg+CTmuAPF5/2Da/EVHlmnzjhYDgIhimmhPgz31U2aXEZM4BEREZFEMACIi
      i2IAEBFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgsigFARGRRDAAiIotiABARWRQDgIjI
      ohgAREQWZfrdQDVNAwCIYn8W6boORVEgCAIkSYIgCGaWR0Q0bpkaAA0NDdi9ezfWrFmDgoIC
      AMDHH3+MiooKqKqKT3/608jIyDCzRCKiccu0ISC/34/S0lLk5+cjHA4bj128eBGf+9zn8Oyz
      z2LPnj3Qdd2sEomIxjXT9gDcbjc2btyIs2fPGo91d3cjOzsbkiQhJSUFAKCqKiRJMoaKBh4L
      BoNDTNXcsBi6pttpEWWUK7k7Vbm9f0P1dCCYzaJp2rB7qqrqKFdzd5FIZFCtiqLcZTmNDYpi
      7nIaUSLDWk5jyc3rMTOEQiGIwp/6N6YB0Nvbi7KyMrhcLhQXF0OSpEH/rigKbDab8bcgCNA0
      7bYAEAQBdrv9tulHYO7xgqFqGooiSzBzdSVJ4m21iuLtj9lkG8wkDFHTnYiSueczyLI8qFZB
      EIbsaSy59fs51mRJHtZyGkvCggAzI8Bms0G6qX9jGgA2mw0TJ06E3W4f8uBuXFwcenp6APQn
      ZTgcNg4E3xwMoigaB40fJMOtyfQD2/9v5TT4oSEeE82tU8An6KnJ4X9r/0RRHLKnscTs5XTI
      ZTLGewqTe3rrunNMA8DhcCA3NxcAEAgEUF9fj+bmZthsNsTFxWHKlCnwer0oLy9HY2Mj8vPz
      Td8KISIar0w7BqCqKnp7ezFp0iQAQF9fHwRBwPPPP49z585h4sSJKC4uNqs8IqJxz7QAiI+P
      x8KFC2973O1245FHHjGhIiIia4nhwTQiIooGA4CIyKIYAEREFsUAICKyKAYAEZFFMQCIiCyK
      AUBEZFEMACIii2IAEBFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgsigFARGRRDAAiIoti
      ABARWRQDgIjIohgAREQWxQAgIrIoBgARkUUxAIiILIoBQERkUbLZBdCDyyaJyEqNN23+qYku
      0+ZNZAUMALqjSRmJ+O/XN5ldBhGNEg4BERFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgs
      ytQAUFUVzc3N6OjogK7rAABN09DY2Iju7m7jMSIiGnmmXQfQ09ODd955B5MmTUJXVxcmT56M
      VatWYefOnZBlGR0dHVi6dCkKCwvNKpGIaFwzLQBcLhdefvllxMXFIRQK4a233kJxcTFCoRA2
      b96MSCSC3/zmN5g1axZEkSNVREQjzbQAcDgccDgc8Pl82LFjB5YsWQKfz4eMjAwIggC73Q67
      3Q5VVSEIAhRFMV6rKAr6+vpun6jJQ0ZD1jQEPRwZ5UruTonc3j9VVYdd/4NIUZV7P2kUhUPh
      Qf1TFOXOy2mMiETMXU7DkfC4W041TTV1/sFgEIL+p/6NaQB0dXXhww8/REJCAp544gk0NjZi
      z549eOKJJ5CTk4P6+vo7jvvfvBcgSRLcbvdtz/EJwqjVPhxD1TSUiN2G4CjXcjeyTYbzllrv
      1NNYIUvm3tXE7rAP6l8kEoEsyzHdU5vNZur87Tb7bf2L9eVUESVoJs7f6XRCcv2pf2P6rUlJ
      ScELL7wAAAgEAvjggw/w0ksvISkpCQCQmJiI9vZ26LqOSCSCcDgMSZIgCAIkSTKmI5i8oici
      Gg/GNAAEQTBW3nV1dfB4PPjwww8BABkZGVi1ahUSEhLwzjvvoLu7G2vXruX4PxHRKDFtv7mg
      oAB/+7d/a/w9sKJ/8skn0d3dDYfDgbi4OLPKIyIa90wLAEmSBg3rDBAEAWlpaSZURERkLRxf
      ISKyKAYAEZFFMQCIiCxqXP0kpPPRbwKqWRevMEuJKLaMqwCwzXzS7BKIiGIGN1uJiCyKAUBE
      ZFEMACIii2IAEBFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgsigFARGRRDAAiIotiABAR
      WRQDgIjIohgAREQWxQAgIrIoBgARkUUxAIiILIoBQERkUQwAIiKLYgAQEVkUA4CIyKIYAERE
      FsUAICKyKAYAEZFFMQCIiCxKNmvG4XAYpaWlaGhoQEpKCpYvXw6n04nu7m6UlJQgISEBK1eu
      hCgyo4iIRoNpa1e/3w9JkvDYY48hJSUF77//PhRFwbZt27Bw4UK4XC58+OGHZpVHRDTumbYH
      kJKSgkWLFkHXdciyDKfTic7OTmRkZGDSpEnIzs7Gr371K6iqCkmSBr1W13WoqmpS5dHTNN3U
      +eva7f2L9Z7qurk91W7pqaqqsd9Tk5dTTde4nI4wVdOAm/o3pgGgqioCgQAEQYDb7UZ5eTmO
      HTsGVVXx+c9/Hu3t7UhISAAACIIAm80GVVUhCALC4fCg6SiKMpaljyhVM3cB1jTttv7puh7T
      PdV0zdT537pMqqo6ZJ9jiWb2cqqOv+XU9ABQFOg39W9MA8Dn8+Ho0aOIj4/HqlWrMGfOHOTl
      5eHy5cvYu3cvli1bhlAoBKC/UZqmQRRFiKIIp9NpTMfv98PhcIxl6SMqIssw86slydJt/RNF
      MaZ7KonSvZ80imw2eVD/RFGEJN3e51giyaYNEAAAZFked8tpSBRh5qaK3W6HdFP/xvQTTk5O
      xtNPPw0A6OrqgsvlgtvtxsyZM3HmzBmkpKSgsbER4XAYnZ2d/cVK5n6xiYjGq08cALquIxAI
      3HVXZmCI524CgQDee+89iKIIVVWxYcMGuFwurFixAm+++SZEUcSWLVsgCMInLZGIiIbhEweA
      1+vFN77xDaSnp9/xOe3t7fjP//zPu05n0qRJeOWVV4xhnoEV/axZs1BQUDDoMSIiGnn3tQew
      aNEifOELX7jjc374wx8Oa1qCINw2xDPUY0RENPI+8XUA8fHx2LRpE4D+i7lCoRAURUFlZSV6
      enoAAFu3bh3ZKomIaMR94j0AWZaRmZkJAPjd736HwsJC1NfXo6SkBKIo4l//9V8xadKkES+U
      iIhGVlRXAjc2NmLy5Mk4fvw4/vEf/xFJSUnwer0jVRsREY2iqAJgwYIF+OY3vwmXywVZluHx
      eJCYmDhStRER0SiK6jqAdevWYf78+UhKSoIoinjttddgs9lGqjYiIhpFUQXAgQMHcOLECePv
      xMREfOUrX2EIEBHFgKgCYN68eZgyZQoAoK+vD++++y5v30xEFCOiCoCMjAxkZGQYf//f//0f
      PB4PUlNToy6MiIhGV1QB8M4772DPnj0A+u9+mJKSgri4uBEpjIiIRldUAbB582Zs3LjR+Ntu
      t3P8n4goRtxXANTU1ODq1auIj49HWVmZ8Xh8fDxeeOEFyCbfRpaIiO7tvtbUbrcbGRkZiIuL
      Q15envG4w+HgDdyIiGLEfQXAhAkTMGHCBHi9XqSnp8PhcODQoUOYMWMGb+RGRBQjojpn8803
      30RdXR1+97vfobq6Gj/+8Y+NX/QiIqIHW1QB4PP5kJqaitLSUnzhC19Aamoq/H7/SNVGRESj
      KKoAWL16Nf75n/8ZM2bMAND/Y+NJSUkjUhgREY2uqE7XWbx4MQoLC+FyuaDrOl577TUeAyAi
      ihH3FQDHjh3DBx98cNvjycnJ+NrXvsZrAYiIYsB9BcDcuXORnZ19+8RkmXsAREQx4r6OASQn
      J2PGjBnIycnBlStXsHv3biQmJuLatWu8GRwRUYyI+jTQ+vp6dHd3Q5Zl7N+/H4FAYKRqIyKi
      URRVAFy7dg3PPvssMjIyoGkaQqEQwuHwSNVGRESjKKqzgJ566il897vfRU9PD27cuIGJEyfy
      JyGJiGLEfQWAruvQNA0PPfQQcnJyUFNTg7i4OOTn5/NeQEREMeK+hoC6urrwox/9CED/fYGW
      LFmCyZMn44033oCqqiNaIBERjY77CoDm5mYoijJoaz8xMRFNTU3wer0jVhwREY2e+wqA9PR0
      XLlyBS0tLQD6h4TKy8sRiUQQHx8/ogUSEdHouK9jAJmZmXjuuefw9a9/HRkZGYhEIvD7/fjq
      V7/Kq4CJiGLEJw4AVVXh8/mwfv16rFixAk1NTZAkCVOmTIHL5QIAdHZ2Ii0tbcSLJSKikfOJ
      h4B8Ph/effddCIKApKQkzJ49GwUFBcbKHwB+9atfjWSNREQ0Cu5rCOj06dNoamq647/X1tbe
      d0FERDQ2PnEAJCYm4gc/+AE0Tbvjcz7J/YBaW1vxu9/9Dn/xF38Bu92OyspKnDlzBpIk4amn
      nuLvCxARjZJPHACiKI7Y1b6RSAR79+6Fy+WCpmkIBAL46KOP8NJLL6Grqwt79uzBCy+8wIvL
      iIhGQVS3ggD6TwFVFMW4DfRwt/51Xcfp06dRVFSEy5cvA+i/wCw7OxsulwuTJk1CMBiEqqqQ
      JAm6rhuvHbjvUKzSFHMvltNU9bb+xXpP1bvskY4FRVEG9U9RFKhD9DmWmH1Rp6Iq4245vdvI
      yVgIRyIQxT/1L6oA6Orqws9//nPU1tbiO9/5Dnbt2oUvf/nLd9xiDwaDuHHjBux2OxISElBX
      V4cXX3zRCIBwOAyHw2E8X5IkaJoGSZKgKIrxuK7rsf27A6K5ezSCIN7WP0EQYrqnZu8liuLg
      nuq6zp5GSeRyOuIkUYR4U/+iCoD//d//xfr163Hq1Cm43W40NjbC5/PdcYhoYJhH13VUV1cj
      EAjgD3/4A65evYpdu3Zh6dKl8Pl8APq/QOFwGJIkQRAE2O32P70JSYIsR73zYhrd5N9MEETh
      tv4Jwu2PxRLR7JWVKA7qn67rtz0Wa8z+bY+h+hfry6npASBJkG7qX1SdVFUViYmJEAQBXq8X
      nZ2dd01nt9uNhQsXAgBmz55tDOu8/fbbeOqpp2Cz2XDgwAHU1NSgsbERU6ZMMX0hJCIar6IK
      gD/7sz/DG2+8gYaGBpw7dw7PPPMM3G73sF4rCIKRhosWLYLNZoMsy9i8eTNOnTqFuLg4rFmz
      xvTEJCIar6IKgLa2NvzN3/wNEhISYLPZ4Ha772uFPXPmTOO/U1NTsWHDhmjKIiKiYYhqfKW2
      thbbt29HYmIi4uLiuLVORBRDotoDmDRpErZv344f/ehHyMrKQlxcHDZt2hTTB2mIiKwiqjW1
      2+3Gc889Z/ztcrm4F0BEFCOiCoDk5GRMnTrV+NtmszEAiIhiRFQBUFlZidOnTwMAAoEAOjo6
      8O///u88dZOIKAZEFQCPPvooHn30UQD91wR84xvfgKIo/FEYIqIYEFUAVFRU4OrVqwD6733S
      0tKCUCg06LcBiIjowRRVAEQiEQQCAQD9F3Z99atfRXJy8ogURkREoyuqAAgEAli3bh3S09MB
      AHv27EEoFBp0QzciInow3dfRWl3X4ff78dFHH6GhocG4D9Du3buNPQIiInqw3fcewBtvvIFT
      p07h/Pnzxi0gli5dOmI/FkNERKPrvgJAEAR861vfwv79+zFnzhxkZWWNdF1ERDTKojoGsGzZ
      MuzcuRNdXV0QBAHx8fH47Gc/y1tBEBHFgKiu2PrNb36DYDCI2tpazJw5E7W1tbwIjIgoRkS1
      tu7p6cGGDRuQlZWFVatWQdd1eDyekaqNiIhGUVRjNcXFxWhoaMDkyZPx7W9/Gx6PB06nc6Rq
      IyKiURRVACxevBgulwsLFy7E0qVLkZKSwquAiYhiRFRDQLt27cKuXbsgSRJyc3N5FTARUQyJ
      ag9g7dq1+OEPf4j09HRkZWXBZrNh5syZPBBMRBQDogqAGzduYNKkSTh79iwEQUBiYiLy8vIY
      AEREMSCqAFizZg3mzp2LpqYm5Ofnw+Px8FbQREQxIqpN9ZMnT+J73/sefvrTn8Ln8+FnP/sZ
      FEUZqdqIiGgURRUAH3zwAf7pn/4JCxcuNO4A6vP5RqQwIiIaXVEFwKxZs/D73/iXuskAACAA
      SURBVP8e7e3t2LdvH7xeLxISEkaqNiIiGkVRBcDWrVsxdepUOBwOdHR04Jvf/CbvA0REFCOi
      Wlvrug673Y7k5GRkZmYiPj5+pOoiIqJRFtUewFtvvYXDhw+joKAALS0t+Ld/+zdomjZStRER
      0SiKKgCamprwxS9+EWvXrsWXv/xlRCIR+P3+kaqNiIhGUVRDQDNmzMCvf/1rzJgxAwBQX1+P
      HTt2ID8/H8uWLRuRAomIaHREFQBFRUWDbv728ssvAwBvCEdEFAOiCoBp06ahr68PqqoCAOx2
      O4qLi3krCCKiGBBVAPzXf/0XWlpaMGHCBABAYmIi5syZM+wACAaDRnjYbDbY7Xbouo7u7m44
      HA7jx+aJiGjkRRUAsizj1VdfRWFh4Sd+raZp+O1vf2vcQrqgoABFRUXYt28fPB4PfD4f1qxZ
      g9zc3GhKJCKiO4gqAObNm4ef/vSnyMnJAdC/B/ClL31pWDeECwaDcLvd2LJli/GYx+NBW1sb
      Xn75ZQSDQfz+97/HtGnTuBdARDQKogqAQ4cOYf369cZWus1mgyRJw3ptIBBAS0sL9u3bh4kT
      J2L27Nnwer3IysqCKIpwu92QZRmKokCWZWOoCAAURUFfX180pZtKD0dMnb8Sub1/qqrGdE8V
      1dybEIZD4UH9UxQl5pfTSMTc5TQcCY+75VTT1Hs/aRQFg0EI+p/6F1UAFBYWIjMzE8XFxcN6
      fnd3Nw4ePIiEhASsXr0aL7/8MiKRCCoqKlBXV4eioqJhHT+QJAlutzua0k0VsdsQNHH+sk2G
      85b+xXpPZcncW5DYHfZB/YtEIpBlOaZ7avat3e02+239i/XlVBElmHmprNPphOT6U/+i+tYo
      ioKf/exn+O///m8AQFpaGr73ve/BbrcP+fykpCRs3LgRgiBAkiRkZGRAEARkZmbi17/+NZYt
      W4aOjg5j2uFwGJIkQRCEQfcY4pAQEVH0ogqA559/Hps3b4bf74fb7YamaXfdahBFEU6nE0D/
      r4l99NFHmDp1KmpqalBcXIyUlBSIooh9+/ahvb0dixYt4imlRESjJKoAaG5uxk9+8hO0tbXh
      +9//Pt5880289tprw9pCnzZtGpKTk9HR0YG8vDxMmDABgiDg05/+NGpra1FYWIjs7OxoyiMi
      oruIKgB+/etf48tf/jI+/PBDuN1ueL1e+Hw+JCUl3fO1giAgJSUFKSkpgx632WzIy8uLpiwi
      IhqGqMZXXC4Xenp6oOs62tra0N7efsfxfyIierBEtQfwpS99CT/+8Y9x+fJllJWV4c///M95
      HyAiohhxXwHg8XhQWlqKVatW4Vvf+hYikQhEURz2NQBERGS++xoC6unpwYEDBwD0j+Xb7XbI
      sszTM4mIYsh9DwGVlpbi61//+qDHkpOT8Xd/93emX0BCRET3dt8BMH36dHz+858f9NgnuRUE
      ERGZ674CQBRFTJw4EbNmzRrpeoiIaIzc1zGAyZMn4/XXXx/pWoiIaAzdVwAM3MuHiIhiF2+0
      Q0RkUQwAIiKLYgAQEVkUA4CIyKIYAEREFsUAICKyKAYAEZFFMQCIiCyKAUBEZFEMACIii2IA
      EBFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgsigFARGRRDAAiIotiABARWRQDgIjIohgA
      REQWxQAgIrIo2cyZRyIRVFdXw+/3Y/bs2UhMTEQgEEBVVRXi4+ORn58PQRDMLJGIaNwybQ9A
      0zTs3LkTHo8HCQkJaGtrg6Zp2LZtGxRFQVVVFU6fPm1WeURE455pewBtbW2w2+1YsWKF8VhH
      RwecTieWLFkCVVXxq1/9CosXL4Yo3p5Tuq6PZbkjyvTK9aH7F8s9fRDc3D9d143/xawHoHQu
      pyNLx+Bl0rQAaG9vR01NDd566y0EAgGsXr0akiQhJSUFACBJEhwOBxRFgSzLiEQixmsjkQgC
      gYBZpUdND0fu/aRRpCgKtFv6p6pqTPdUURVT5x8Ohwf1T1GUmO9pRDF3OR3qex7rPdU01dT5
      h4IhCPqf+jemAdDV1YU9e/YgMTERU6dOxcKFC7F8+XIEg0G89dZbePzxx6Eof/oi67oOQRAg
      CALsdrvxuM1mg9vtHsvSR1TEbkPQxPnLNhnOW/onSVJM91SWTD2cBbvdPqh/kUgEsizHdE9t
      Npvp87+1f7G+nCqiBM3E+TudTkiuP/VvTL81KSkpeOmllwD0h0FFRQVWrFgBh8MBWZaRnJyM
      lpYWqKqK3t7e/gJlmQeCiYhGwZgGwM0r8tTUVEyaNAm//e1voaoqHnroISQkJGD69Ol48803
      EQwGsWnTJq78iYhGiWn7zYIgYOXKlQiFQsYQjyAIePjhh/HQQw9BlmXIsrm79URE45mpa1hB
      EOB0Ou/5GBERjTxeCUxEZFEMACIii2IAEBFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgs
      igFARGRRDAAiIotiABARWRQDgIjIohgAREQWxQAgIrIoBgARkUUxAIiILIoBQERkUQwAIiKL
      YgAQEVkUA4CIyKIYAEREFsUAICKyKAYAEZFFMQCIiCyKAUBEZFEMACIii2IAEBFZFAOAiMii
      GABERBbFACAisijZrBmrqgpFUYy/RVGELPeXEwgEIEkS7HY7BEEwq0QionHNtACora3FmTNn
      AACKokDXdXzmM5/B8ePHUVNTg1AohA0bNiA7O9usEomIxjXTAmD69OmYPn06AODkyZOQJAm9
      vb24du0aXnnlFfT29mL79u343Oc+x70AIqJRYFoADFBVFWVlZfj85z+PlpYWZGdnQxRFJCYm
      QpIkKIoCWZahadqg1wQCAROrjo4WiZg6f1VRbutfrPdUUVVT5x8ORwb1T1EUKEP0OZZsmvkM
      Ns18xtQaxttyevN6zAyhUAgC/tS/MQ0Ar9eL06dPw+12Y+nSpZAkCefPn8ecOXMgyzJUVYUk
      SYNeo+s6gMGNEwQBTqdzLEsfURHZhpCJ85ckGY5b+ieKYkz39NblZqzZbbZB/YtEIpAkKaZ7
      +iCK9eU0IgowMwLsdjukm/o3pgHgcrkwd+5cyLIMURQRiURw/vx5vPrqqxAEAfHx8eju7gbQ
      n/ThcBiyLEMQBNhsNmM6oijG9LCQ6aULuK1/giDEdk8fgAJu7t9AP2O5pw+i2O+pubXf2r8x
      DQCbzYbMzEzj76qqKuTl5cFutwMAUlNTEQwGcerUKbS0tKCwsBCiyDNViYhGg6lr16ysLKxY
      scL4WxRFPPvss5BlGbNmzcLSpUtNrI6IaHwz9SDwhAkTbnvM6XRi0aJFJlRDRGQtHF8hIrIo
      BgARkUUxAIiILIoBQERkUQwAIiKLYgAQEVmU6fcCIiKyioSC70DXzbtvlSC5B/3NACAiGiOC
      5DL/tiU34RAQEZFFMQCIiCyKAUBEZFEMACIii2IAEBFZFAOAiMiiGABERBbFACAisigGABGR
      RTEAiIgsigFARGRRDAAiIotiABARWRQDgIjIohgAREQWxQAgIrIoBgARkUUxAIiILIoBQERk
      UQwAIiKLYgAQEVkUA4CIyKJMDQBN09DX14dIJAJd1wEAuq4jEAggHA4bjxER0ciTzZpxKBTC
      tm3bIMsyent7sWrVKuTm5uLkyZO4du0aQqEQNm3ahKysLLNKpBgyZ/oESJJ52zMZyXGmzZvo
      fpkWAHV1dcjIyMBjjz0Gn8+HnTt3YsKECbhy5QpeeeUV+Hw+7NixA5/73OcgCIJZZVKMWLsw
      F2sX5ppdBlFMMS0AJk6ciI8++ghnz55FfX095s6di56eHmRnZ0MURSQlJUEURSiKAlmWoWma
      8VpVVREIBMwqPWp6JGLq/FVFua1/sd7TB42iKFCG6DNFh8vpyBrTAPD5fDhz5gzcbjdmzpwJ
      QRAQCoWgqio0TYOiKJAkyXi+IAjGcYCbA0AQBDgcjrEsfUQpsg2qifOXJBn2W/onimJM9/RB
      I0kSJEliT0cYl9ORNaYB4HQ6MXv2bMiyjKqqKhQXF6O4uBiapuGXv/wlnnrqKfT09ADoT/pw
      OAxZliEIAmw2mzEdURQhirF7ApMtfx3kSQvMK8CZdFv/BEGI6Z4+aARBYE9HAXs6ssY0AGw2
      GyZOnAgACAQC2L9/PxwOBxoaGpCRkYH09HT09fXh448/RnNzM2bPnj0uP2zBEQ/BEW92GURk
      caatXadOnYqNGzeiu7sbkyZNwsaNGyGKIp577jnouo68vDwsW7bMrPKIiMY90w4CA0BmZiYy
      MzMHPeZ0OrF48WKTKiIiso7xN75CRETDwgAgIrIoBgARkUUxAIiILIoBQERkUQwAIiKLYgAQ
      EVkUA4CIyKIYAEREFsUAICKyKAYAEZFFCfoQP7wbiUQQDAbNqGdYOjs7zS5h3PF6vUhMTDS7
      jHFD0zT4/X4kJCSYXcq4wuV05OTm5gpD3gxOVVX09vaOdT3DJooiMjIyBv14zINq4BfNHnTJ
      yclwu91ml3FPAz8MFAu3Ce/o6EB6errZZdyTruvQNC0mvk9OpxPJyckP/OcfK8vpkGsmp9Np
      3Lf/QVRTUwNJkmC3280u5a50XYeu6w98nUD/r7XFQp0Dvx538w8EPaj8fj+ys7PNLuOeBn6N
      LxY+/0AggLS0tAf+849EIhBF8YEP1Qc7noiIaNQ8+GMTMe5B31KJNaIoQhAEs8sYVwRBiIlh
      ylgiSVJMLKf81EfRwO/C0shhT0ceezryHvSx/wGxUeUw1NTU4PLly1FPx+/348KFC1AUxXis
      ra0Nly5dinraAyKRCI4dO4ZIJBL1tC5duoS2tjbjb03TcP78efT29kJRlKh6cuHCBbS2tkZd
      Y0tLy211XLt2DQ0NDVFPe0BnZyfOnTuHIU5q+0QikQjKysrg9/uNx3p7e1FWVoZIJILe3l7U
      1tbe9/QvXbqEurq6qGoEgK6uLlRWVhoHGwGgvr4e169fj3raA3w+Hz766KNB87gfmqahoqIC
      PT09xmOhUAjnz59HKBRCMBi877p1Xcfp06fh8XiiqhEAamtrUVNTM+ixqqoqtLe3Rz3tAQ0N
      DaisrIx6OQ0EAigtLR20Duns7DSWic7OzmF9d8dNAJSUlODo0aNRr1RbW1uxY8eOQV/yw4cP
      Y+/evdGWaLh8+TLOnj07IoF16NAh7N+/31igamtrsWvXLjQ1NRlnd9wPv9+PEydO4Pjx41HX
      WFFRgXfffRehUAhA/5f//fffx+nTp6Oe9oATJ07g9OnTg1Yy98Pv92PPnj04e/as8djp06ex
      Z88eBAIB48D+/QiHwzh+/DiOHDkSVY0AcPXqVWzbts14v6qqYt++fSMy7QHnz5/Hxx9/jKam
      pqimoygKDhw4gKNHjxq9u3jxIv74xz/C4/FEtZx2d3fj5MmTOHPmTFQ1AsCZM2ewe/duY+PP
      7/dj27ZtuHjxYtTTBvrD6siRIygpKYGqqlFNq6urCzt37sSVK1eMaR88eBAHDx40TpQYznI6
      LoaABs5gSUtLQ0tLCyZNmoTDhw9j9erVEEUR58+fx7Rp0xCJRHDo0CGoqorU1FQ8/vjjQ+6q
      zZ07FxcvXsSMGTMQCASgqqpx7vHVq1dx5swZaJqGhQsXYsqUKTh9+jRWr16N69evQ1VVzJw5
      84616rqO8vJyvPjiizh69CgKCwtRW1uLSCSC/Px8+P1+VFRUYNGiRSgpKUFTUxMkScKnPvWp
      Ic8oSUxMhCiK8Pl8SEhIwIULF7Bw4ULj37u7uwH0ryC9Xi9aW1uRlZWFxx9//K67/VeuXMFD
      Dz2ES5cuIRQKQZIklJSUYNWqVQCAI0eOYOXKlUaYybKM3NxcLFmy5LZpCYKAoqIiVFZWYsGC
      Bairq0NOTo7xpf/oo49w/fp1iKKItWvXIhQKob29HQsWLMCpU6eQn5+PtLS0O9aqaRq6urqw
      dOlSVFdXY9myZTh16hRmz56NxMRE1NbWQlEUZGVlYd++fejr64PT6cT69euHPPU1JycH9fX1
      xheoqakJU6dONeY1sLX5wQcfIBwOo7OzE4sWLUJxcfFde9rU1IScnBy0trbC7/fD6XTi6NGj
      WL16NYD+jZhly5ahsbERJ0+eBABkZ2cbPb/VvHnzUFFRgZUrV6KrqwtpaWlGbRcuXDBWXI88
      8ghcLheuXLmC5cuXo6ysDGlpaZg8efIda9V1HXV1dVi/fj0qKiowefJklJeXIyMjA1lZWejo
      6EBTUxNmzpyJgwcPoru7GzabDY899hhSUlJum15GRgY8Ho9xWvTly5cxe/Zs498HltMDBw4g
      GAyira0NM2fOxPLly+/a09LSUmzcuBElJSVQFAV+vx/V1dVYsmQJNE3D0aNHsXLlSpSWlqKy
      shJ2ux1FRUUoKiq6bVqSJCE7OxsNDQ2YNm0aKioqMG/ePAD9AXvkyBE0NzfDZrNhw4YNqK+v
      h81mw4wZM3D48GGsWLECTqfzjrX6/X7Isoy8vDzU1NQgLy8PJSUlWLRoEVwuF8rLy5GZmQlZ
      lnHw4EFEIhG43W48/fTTQ/Zgzpw5qKysxOzZsxGJRBAKhZCcnAygfyMrHA5DVVXs3r0b4XAY
      Ho8Ha9aswfTp041pjIs9gAsXLqC4uBhFRUWoqKiAKIpQVRU3btwwVrhOpxPvv/8+HnvsMbz0
      0ktob2+/Y0KmpaXB5/NBURRUVVWhqKjI+AAyMjLw7LPPYsuWLTh27BhcLhc0TUNJSQmOHTuG
      3Nzcu9YaDAahqiomTpxo7P6mpKTg448/BtC/tTywMKiqiq1bt2LKlCnw+Xx3nObMmTNRXV1t
      XL8x8AXUNM0Ybqirq8Ps2bPxyiuvoLm5edAQ11AuX76MmTNnYtq0abh27RpkWUZdXR0CgQB6
      enrQ0dGBYDCIkpISPPvss3jsscfuustZWFiIS5cuQdd1XLp0adAXsKCgAC+88AKWL1+OkpIS
      ZGdno7y8HKdOnUJbW9uQK5Sb1dfXIzs7GwUFBbh69Sp0XUdSUhLOnTsHADh79iySk5Px4Ycf
      Ys6cOXjppZcA4I49cDgcSExMREdHB1pbW5Genm4czA+FQmhubjZ6umrVKrz00ksoKyu7a41A
      /1ZvYWEh5s6di7KyMkiShK6uLnR0dCASieD69evQNA0HDhzApk2b8MwzzxjzGkpubi7q6uqg
      qirKy8tRXFxs/FtOTg6ef/55bNiwAQcPHkR6ejqam5tx4sQJVFVV3fM0746ODiQkJCAnJwfN
      zc3QdR0pKSnGntFAT48dO4asrCy89NJLSEhIuOMFpIIgYMqUKWhoaIDX64XdbjfCNxKJoLGx
      EUD/UO7SpUvx6quvorq6+q57Bqqqoq6uDtOnT0dKSgo6Ojrgdrtx8eJFaJqGhoYGhEIhtLS0
      4MqVK9i6dSuWLFkyaMj0VgMrVV3Xce3aNRQUFBj1L1iwAFu3bsXMmTPx8ccfIzc3F8eOHcPx
      48chCAIcDsdde3r58mXk5eVh/vz5OH/+PHRdhyAIuHbtGnRdx/nz55GUlIT3338fK1aswIsv
      vmjsIQ0lMTERuq7D7/fjxo0bg1bsXq8XXV1d0HUdjY2NePLJJ7Fp0yaUl5cPmkbMB4CmaTh3
      7hwqKipw6tQplJeXQ1EUPPTQQzh37hwaGhqQlZUFTdMQHx+PtLQ0CIJw14M0giBgxowZuHLl
      Cq5cuTJoi76urg7vvvsu9u7di1AoBE3TsHLlSuzfvx/Lly+/57nU165dQ0tLC7Zt24bW1lZc
      u3bN2Lvo7e015tfa2oo5c+YM61zivLw8XL9+3diyHuq9SZKEzMxMiKJohNadBINBXLp0Cfv2
      7cONGzeMFenASvzixYuYO3cu2tvbkZeXB6fTec+DXg6HA5Ikwev1wu/3IzU11fi3s2fPYseO
      HTh16hTC4TAkScL69evx7rvvYs2aNXedtq7rOHv2LOrr67F3717U1NSgp6cHBQUFuHHjBnp7
      exEKhZCamgqfz4e8vLx7fv4AsGDBApSWlqK8vNzYCrxVXFwckpOTIcvyPc/2ikQiqKiowMmT
      J3Hp0iWcPXsWmqZh3rx5KC8vx+XLlzFr1ix4vV5MnDgRCQkJ9zw4K4oi0tPT0dLSgpaWFmMv
      BQAqKyuxfft2HDp0yBgWffTRR/Hee+9h1apV91ymKioq0NjYiD/+8Y9oaGgw9qw7OzvR29uL
      trY2TJkyBZ2dnZg9e/awejpv3jxcuHDBeK9DcTgcSE9PhyiK91yhdnd3o6GhATt27EBzczNK
      S0ths9kwZcoU1NbWorS0FAsXLkRzczOKioogy/I9zyLLyMhAd3c3vF4vnE6n8bkObOTt2LED
      Fy9eRDAYhMvlwvLly7F3716sXLnyrtPVdR2lpaWoqqrC4cOHUV1djXA4bAROT08P4uPjYbfb
      oWkasrOzh9XT/Px8XLlyBRUVFYM2AG42cJGnw+G4bXoxHwBerxcTJkzAxo0bsWnTJhQWFqKx
      sRHJyckIBoM4e/Ys5s+fD4fDAa/Xi87OTnR3d6Ovrw8AjIOltyoqKsL58+cHXXCm6zpOnTqF
      559/Hk8++aRxmf/Jkyexdu1alJSUIBwO37FWXddx8eJFvPLKK9iwYQM++9nPorKyEoIgYP78
      +SgpKYHb7YbdbkdqaiqqqqoQCoWMLZaBXdxbuVwuOJ1OHDt2DPPnz4+6p1VVVVi3bh2efPJJ
      PPvsswiFQohEIigqKkJVVRVqa2uRm5uL1NRUXLt2DX19fWhra4OqqtB1HV6vd8itljlz5mDX
      rl3GShjo34qrra3Fli1bsHr1asiybGwFP/300zh48OA9twI9Hg+2bt2KDRs2YMOGDaiqqoIg
      CEhPT0dJSQkKCwsB9F/geP36dfj9fmPsPBAIGMcmbjZx4kS0tbWho6MDEyZMiLqn9fX1mD9/
      Pp588kk89dRTSE5ORm9vL3JyctDY2GgETUJCApqamoxldWB58vl8Q/Zhzpw5OHToEDIzM42e
      apqGyspKPPfcc3j88ceNFemRI0ewfv16HDp06K491XUd9fX1ePnll7Fhwwa8/PLLOHfuHARB
      QG5uLkpKSjB16lQIgoDExERcvnwZgUDAuEVLKBRCIBC4bbrJyckIhUKorq4etLV6v8rLy7Fl
      yxbju9TU1ARVVbFw4UKcO3cOHo8HaWlpyMjIML5Lra2txjGHofaqB97jzp07BwV/V1cXFEXB
      li1bsGzZMgiCgFAohDNnzmDNmjWDjm8MxefzweVy4dlnn8WGDRuwZMkS1NbWGlvxR48exeLF
      iwH097+5uRler9e4I4Pf7x9yPZWfn29s1cfHx3/iHsZ8ADQ0NGDBggVwuVxwuVyYP38+Ghsb
      jXFnr9eLtLQ0yLKMJ554AgcOHMDx48ehaRoEQcDRo0cH3VvI4XAgPj4e8fHxsNlsmD9/PgRB
      MLZY8/Ly8Pbbb2PHjh1wOBzo7u5Gb28vVq5ciWXLlqG0tPSOtYbDYcTFxSEjIwMulwtZWVlw
      Op0IhUKYMWMGLl26hMWLFxu7m4qiYOfOnejq6oIgCGhvb0dJScmgaaakpEAQBBQXF8NutyMh
      IQFxcXFwOBwQBMEYPrn58vmUlJQ7blnouo7W1lYUFxfD5XIhLi4Oc+bMQXNzM1wuFxISEpCZ
      mQm73Y74+HgsXrwYf/zjH42zpFRVxa5duwZNMyEhAXa7HQUFBfD5fJg1axYkSUJSUhJEUYTb
      7cbvf/97HD58GPHx8cau8iOPPAK3220MDwylu7sb06dPNz7/mTNnwuPxQBAELFq0CJcvX0Z+
      fj4EQcD69etRVlaGvXv3GivWiooKXL161ZjezXVNmTIFU6dOhSRJRv9sNpuxxzbQ25v7fCfN
      zc2YN2+eUeeCBQvQ0NAAm82GSZMmGSHudDqxatUq7Nmzx9jzAvqPN9y8UnW73cYV+5FIBHPm
      zAEApKamQhAETJgwAW+//TY++OADxMfHo76+HklJSVi5ciVyc3NRXV19x1p7e3uRlZWFpKQk
      uFwuTJs2DeFwGJqmYc6cOaiursbcuXMBAKtXr0ZdXR12794Nv98PQRBw/fp1XLhwwZjeQH8E
      QUBBQQHS0tLgdDqRmJgIWZaNnt/c01v/+1a6rsPn86GgoAAulwvx8fGYOnUqvF4vkpOTEQgE
      MHv2bIiiiMmTJ2PKlCnYsWOHMSTq9/tvO7EjOTkZkiShqKgIfr8fubm5xnKemJgIj8eDd955
      B2fOnEF8fDxKS0uxZMkSrFmzBj09PXc9E6m1tRVFRUWD1lPNzc0QBAHz5s1DU1MTJk+ebCyn
      J06cwOHDh41QOXHiBFpaWozpDXzX3W43kpOTjT2qgc/f6XTC7XYPWjZv7rPx2Qx1M7gHXU1N
      DbKzs+853KJpGjRNgyzL0HUdVVVVxi7euXPn8OKLL37i8591XUc4HIbdbh/Rc6d1XTcOkAmC
      gLa2NvT29iIxMRHvvfcenn766UHDJiOts7PzrgdaBwycvSBJEjRNQ3l5OSZPnoyKigrIsoyH
      H374E89b0zREIpFR7+m1a9fgdruhaRo+/PBDfOYznxnV2x9cuXIF+fn593zezT0dOGaVnZ2N
      uro6tLS04Mknn/zE8x6r5bS+vt64kOz999/H1q1bR/WeUjdu3MDkyZPvOeSmKApEUYQoivD7
      /airq0NmZiZKSkqQn58/6AD0cKmqClVVR3yZGejpwHu6dOkSUlJS4Pf7cfz4cXz2s58dles0
      BEEY+mZw48XAAjDA4XDg/PnzcDgc2LRp0301dTgHe+6HIAiDFmqXy4Xq6mpcuXIFn/rUp+65
      hTlWbh47FgQBqqri448/Rmpq6n0PPw1nvPd+3NrT+Ph4VFRUQNd1bNq06YG5982t4/GSJOHs
      2bNISEjAo48+el/THKvlNC4uzrhu5vHHH39gbih485XNNpsNXq8XtbW1mDZt2l3P0rsbSZJG
      5d4+Q333y8rKIMsyPv3pT4/qRXrjeg+Ahm+4ewA0fMPdA6DhG+4eAN2bIb3G1gAAABZJREFU
      IAhCzB8DICKi+8MAICKyqP8fD61d7lL33w4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Mars Weather - Does the red planet experience seasonal variations?' width='384'>
      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
      Awa061UYSUhI4IsvvmDevHkmfiYkJPDxxx+bnBXw8vLigw8+YPz48fj5+UmNp1FoX3rpJcaO
      HUuvXr24ffs2cXFxJo3RrFmzGDVqFEePHkWr1UrnDe5OQ9tv3nrrLSZPnkyPHj3w9/enqKiI
      hIQEZs2a1c7tz6GmpobevXtLI4khQ4Zw5MgRvL29gTsN5YIFCxg8eDBRUVFkZWUxatQoabht
      nKeNjIwkJCSE0tJSevbsyahRo9BqtcybNw8hBD4+PmRmZvL666+3633Z2try9NNPM2TIEIKC
      gkhISOB//ud/2uXN3XPay5YtY/LkyXz77be4u7tTVFTEnDlzOkzn3Xns4uLCp59+yty5c/Hy
      8sLCwoL6+no++ugjAObMmcPevXuJjo4mMDCQqqoqWltb79mLXbRoEatWrZK2da5fv14ambQd
      pSUmJvLxxx8zdOhQFAoFer3eZPqso7i2ffbuu+8yfvx4oqKi8PX1pbCwkOHDh/Pss88C8Oyz
      z/LEE09w5MgRNBoNR44ckXr3AG+++aYkTwEBARQVFREfH8/MmTN5++236d27NxMmTEAul7Nm
      zRqeeOIJaepj+/btZGVlSVtUlyxZIo3Mn3nmGc6ePUuPHj0ICQmhrKyMyMhIEhMT75mmu593
      FLchQ4ZIUy13y3pbeUhISGD27NkMGjQIPz8/ysrKeP/995k2bRp//etf71nORoQQrFixQmo3
      8vLyiI2NJTQ0FJlMxh//+EdGjRpFQEAAOp0Og8HAF198gYWFBfPnz2fUqFFER0eTk5NDXFyc
      5G9dXR0zZszA1dUVZ2dnsrKypBmMfv36MXv2bAYMGEBUVBSZmZlMnDix3axBR2m2trZm8uTJ
      P9o23qt98PX1JTQ0lOTkZD799FPp+fPPP89zzz3Hhg0bKCwsJCYmpt0IsCM/5XI5MvFjXVru
      zFnKZDLJU2MvxdgoGHvHxr3Bxn3BNTU1REREYGNjg16vx8LCAoPBIP3fFoPBIO279fDwwMfH
      554CaDAY0Gq1WFhYtFtANcajbYLF/55azcvLw9XVFXd3dyktQghKSkooLi4mNDQUZ2dntFqt
      yT7n5uZmcnNzcXNzw8vLS9pj3TYNd+eRwWCgtLSUxsZG/Pz8sLGxQSaTIYSQ4v5zFIGx92JE
      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
      ehEMbuDAkooAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Monthly Pressure Variation' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='278' name='Seasonal Pressure Variation' width='384'>
      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
      NBrlz//8z7Pumz17NsuWLePSpUtUV1dfwV9z7dFV/958881Zxt9PSUkJCxcuRGvNiRMnvHTp
      32z8/SwCIAg95I033sCyLO655x4ikUggb9myZTlj+37a29sB22t1qauro7m5mZtvvjngtfpZ
      uXIlAHv27OlP8695uurfnnDq1CmUUoHJYOnfbPz9LAIgCD3g4sWLvP/++5SUlLB69epe39/c
      3Mzbb79NJBJhxowZXro7Kblo0aK8986bN49oNJo1gTmc6G///uEPf+Do0aPccMMNjB492kuX
      /g2S2c8yByAIPeD3v/89qVSKu+++O+cqk644ffo0P/zhD2lpaeGee+5h/PjxXp67XG/MmDF5
      71dKMXr0aC5dutS3xg8B+tq/R44c4d133+WDDz5g4sSJfOMb3wjkS/8GyexnEQBB6Ibm5ma2
      b9/OyJEje71S5P333+d///d/6ezsZPXq1XzhC18I5LsGyu+15mL06NF89tlnaK2z1sYPdXrT
      v++88w719fVcunSJ8+fPc/nyZQoKCqioqODzn/98lqGX/k2Tq59FAAShG9566y2SySTr1q0L
      LE3sing8zv/8z/+wZ88eIpEIGzduZO3atVnlOjo6AALPE+SisLAQ0zRJpVK9HoFc6/Smfz/5
      5BMOHDgQSJs4cSLTp0/P2S/Sv2ly9bMIgCB0QVtbG++++y5FRUU9fliosbGRl156iYsXLzJx
      4kT+6q/+KhD391NSUgJAa2srkyZNyltna2srRUVFw8449bZ/v/GNb9DR0UFzczPNzc3U1NTw
      0UcfsXnzZrZu3cq3v/1tpk6d6pUPe/+65OtnEQBB6IJ33nmHzs5O7rvvvryrSPxUV1fz85//
      nEQiwW233cajjz5KQUFB3vJuyKK5ubnLepubm7uMYw9Vetu/BQUFFBQUeIZ9wYIFfOELX2Db
      tm385je/4Qc/+AFPPfUUY8eOBaR/XfL1s6wCEoQ8dHR08M4771BQUMBdd93VbfmGhgZ+9rOf
      kUgkuPvuu3n88ce7NP6QNlBnz57NWyYejxOPx4edgept/3bF3XffzX333Ud7e3tgG4Qw969L
      V/0sAiAIeXj33XeJx+NUVFR0O4mYSqX48Y9/TDKZ5IEHHuDhhx/u0Xdcd911QNdr0Pfu3YvW
      mvLy8p43fgjQm/7tCTfddBNgr/13CXP/unTVzyIAgpCDRCLBW2+9RTQa5Z577um2/J49e7hw
      4QILFizg85//fI+/Z+rUqdxwww0cO3aMpqamnGXef/99ACoqKnpc77VOb/u3J7jLOP0P5IW1
      f12662cRAEHIwfbt22lpaWHVqlVePLkrdu/eDcBtt93W6+9yl+T9+Mc/pq2tLZD36quvcvjw
      YWbNmhWY3Bzq9KZ/Gxoa+Jd/+Rd2796NZVk5y5w7d45f/epXAMyfPz+QF8b+demun2USWBAy
      SKVS/P73v8cwDO67774e3ePGmKuqqjwxyMfKlStZsmSJd718+XI+/PBD9u3bxzPPPMOKFSsY
      OXIkNTU1VFdXM2rUqMAmZkOd3vZvMpmksbGRn/3sZ/zmN79hzpw5lJWVMW7cOOLxOI2NjXz4
      4YekUinWrFnDggULAveHrX9detLPIgCCkMGePXu4dOkSK1asYMKECT26p6WlBYBPP/2027JT
      pkwJCEAkEuGJJ57gv/7rv/jggw947bXXvLwJEybw13/918PKO+1t/86ePZt/+Id/YPv27ezZ
      s4ddu3ZllSktLeX+++9n1apVWXlh61+XnvSzvBBGEK4h2tvbOXToEPF4nJkzZzJx4sTBbtI1
      RSqV4uLFi1y4cIG2tjZGjRrFxIkTGTNmTI+e4JX+DSICIAiCEFJkElgQBCGkiAAIgiCEFBEA
      QRCEkCICIAiCEFJEAARBEEKKCIAgCEJIEQEQBEEIKSIAgiAIIUUEQBAEIaSIAAiCIIQUEQBB
      EISQIgIgCIIQUv4/BQnKlWmZYzIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Seasons by Mars Months/Solar Longitude (2)' width='384'>
      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
      O3vd130+H6Ojo0xNTX0vS3qbm5u5ePHibZ3r8XgYGBiQlWdCLLGwDAEVFxczMTHB1NSUfmx8
      fJy4uDh8Pl/QFsFOp5OrV6+Sn58PwJYtW9i7d+8tbSBWX1/PyMjIDV+PxrvPhoYG/u7v/o53
      3nnnujtuNjQ08Pd///e89dZbuN3usL3v6OgoXV1dIZ93d3c3XV1dt3w9VVU5duwY//zP/8yn
      n34armoKIa4jLJPAOTk5uFwupqam9Byu7e3tLFu2jNnZWQYGBiguLgZgcHAQh8NBbGwsiqIw
      OTnJ3Nycnpe2t7dXz1bV1NTE1NQUJSUlVFdXo6oqZ8+eZXx8nJaWFlwuFwCrVq0iNTUVVVVp
      b2/n0qVLKIrCqlWrWLVqFQaDAU3TaGtrIykpidTUVJqbm5mYmGDt2rURscTV6/WSmJjI4OAg
      IyMj5Obm6q9pmkZ9fT2ZmZnMzc2FNNYLP9/OzpuNjY309/cHJYO/XZqmMTAwwNmzZyksLAxr
      oBJChApLADCZTBQVFdHZ2cmKFSvw+/309PSwdu1afD4fly5d4pFHHgGgtbWV4uJifdvh1tZW
      +vv79QBw4cIFvvjiC9LT0ykuLsZisfDWW28RExOj56v1eDxMTk4SExODwWDQG5/a2lpOnz7N
      5s2bUVWVP/zhD2zbto0HH3wQgJMnT1JQUMDw8DBtbW1UVFREVE8hIyMDl8tFe3t7UABYSNSy
      fv166uvrg84ZHx+nq6sLp9NJVlYWy5Ytw2S69s/C5XJx9epVkpKS6O/vZ3x8nMTEREpLSzGb
      zfT09DAyMsLU1BQtLS0oikJSUpKeT2Dh+v39/czMzJCTk8OyZctuGGjm5+c5fPgwDz/8MG63
      O2joUAgRfmFbBlpSUsKlS5fQNI2JiQnm5uYoKChgfn6ezz//HKfTicFgYGhoiAcffPA77zbL
      ysrYu3cvNpsNVVVxuVz09fVRWVnJc889x9WrV9m4cSNr167Vz5mYmOD8+fPs2bOHsrIyNE0j
      NzeXd999l8rKSj2Jyeeff05WVhZ/+Zd/SWJiYsQ9El5TU8Pp06d55JFH9J5Pa2srycnJZGVl
      6QFA0zS6uro4dOiQ/qDf6dOnKSwsZN++fRiNRoaHh/n1r39NUlISJpOJ2NhYBgcH2bhxI48/
      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
    </thumbnail>
    <thumbnail height='384' name='Yearly Average Pressure' width='384'>
      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
      +XzE5wAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
