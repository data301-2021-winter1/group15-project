<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook original-version='18.1' source-build='2021.3.3 (20213.21.1018.0949)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <CollapsiblePane />
    <Heatmap />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='mars_data' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.1dc4g2u166vpkt1cozuj31eknkb5'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1dc4g2u166vpkt1cozuj31eknkb5' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' date-parse-format='&apos;Month&apos; MM' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1dc4g2u166vpkt1cozuj31eknkb5' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' date-parse-format='&apos;Month&apos; MM' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_704D98079A2145398F853BDD94109EA5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:max_temp:qk]&quot;' value='Avg. Warmest Temp' />
          <alias key='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:max_temp:qk]&quot;' value='Warmest Days' />
          <alias key='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[min:min_temp:qk]&quot;' value='Coldest Days' />
        </aliases>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_704D98079A2145398F853BDD94109EA5]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='dimension' type='ordinal' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='dimension' type='ordinal' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Attribute' name='[attr:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Attribute' name='[attr:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Avg' name='[avg:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Count' name='[cnt:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Count' name='[cnt:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='CountD' name='[ctd:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Max' name='[max:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Max' name='[max:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Max' name='[max:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Max' name='[max:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Median' name='[med:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Min' name='[min:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Min' name='[min:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Min' name='[min:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:ok]' pivot='key' type='ordinal' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='None' name='[none:min_temp:ok]' pivot='key' type='ordinal' />
      <column-instance column='[min_temp]' derivation='None' name='[none:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Var' name='[var:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Month,Pressure)' hidden='true' name='[Action (Month,Pressure)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[month]' />
          <groupfilter function='level-members' level='[none:pressure:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Season,MONTH(Month),Pressure)' hidden='true' name='[Action (Season,MONTH(Month),Pressure)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Season]' />
          <groupfilter function='level-members' level='[mn:month:ok]' />
          <groupfilter function='level-members' level='[none:pressure:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Earth Date))' hidden='true' name='[Action (YEAR(Earth Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:earth_date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1867' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[attr:pressure:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:pressure:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[med:pressure:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[min:pressure:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:pressure:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[min:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[attr:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[cnt:max_temp:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[cnt:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:min_temp:ok]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[attr:max_temp:ok]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[cnt:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[ctd:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[min:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:max_temp:ok]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7].[var:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_704D98079A2145398F853BDD94109EA5'>
            <properties context=''>
              <relation connection='textscan.1dc4g2u166vpkt1cozuj31eknkb5' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' date-parse-format='&apos;Month&apos; MM' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (2)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
      </column>
      <column datatype='string' name='[Season (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Attribute' name='[attr:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Attribute' name='[attr:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Attribute' name='[attr:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Avg' name='[avg:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Count' name='[cnt:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Median' name='[med:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='None' name='[none:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Sum' name='[sum:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <group caption='Autumn' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Season (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[cnt:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[sum:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[sum:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[med:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month - Split 1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Season (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='earth_date' />
        <field-sort-custom-order field='sol' />
        <field-sort-custom-order field='ls' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='min_temp' />
        <field-sort-custom-order field='Calculation_5320580789577490432' />
        <field-sort-custom-order field='max_temp' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='Season' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_F769EC814CC0468898A634ACB196C0B9'>
            <properties context=''>
              <relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (3)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy)'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
      </column>
      <column datatype='string' name='[Season (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Attribute' name='[attr:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Attribute' name='[attr:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Attribute' name='[attr:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Avg' name='[avg:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Count' name='[cnt:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Median' name='[med:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='None' name='[none:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Sum' name='[sum:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <group caption='Autumn' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Season (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[cnt:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[sum:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[sum:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[med:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month - Split 1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Season (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='earth_date' />
        <field-sort-custom-order field='sol' />
        <field-sort-custom-order field='ls' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='min_temp' />
        <field-sort-custom-order field='Calculation_5320580789577490432' />
        <field-sort-custom-order field='max_temp' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='Season' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_F769EC814CC0468898A634ACB196C0B9'>
            <properties context=''>
              <relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (4)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 2)'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 2)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 2)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
      </column>
      <column datatype='string' name='[Season (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Attribute' name='[attr:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Attribute' name='[attr:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Attribute' name='[attr:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Avg' name='[avg:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Count' name='[cnt:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Median' name='[med:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='None' name='[none:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Sum' name='[sum:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <group caption='Autumn' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Season (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[cnt:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[sum:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[sum:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[med:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month - Split 1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Season (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='earth_date' />
        <field-sort-custom-order field='sol' />
        <field-sort-custom-order field='ls' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='min_temp' />
        <field-sort-custom-order field='Calculation_5320580789577490432' />
        <field-sort-custom-order field='max_temp' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='Season' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_F769EC814CC0468898A634ACB196C0B9'>
            <properties context=''>
              <relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 2)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (5)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 3)'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 3)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 3)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
      </column>
      <column datatype='string' name='[Season (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Attribute' name='[attr:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Attribute' name='[attr:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Attribute' name='[attr:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Avg' name='[avg:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Count' name='[cnt:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Median' name='[med:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='None' name='[none:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Sum' name='[sum:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <group caption='Autumn' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Season (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[cnt:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[sum:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[sum:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[med:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Season (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month - Split 1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='earth_date' />
        <field-sort-custom-order field='sol' />
        <field-sort-custom-order field='ls' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='min_temp' />
        <field-sort-custom-order field='Calculation_5320580789577490432' />
        <field-sort-custom-order field='max_temp' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='Season' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_F769EC814CC0468898A634ACB196C0B9'>
            <properties context=''>
              <relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 3)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (6)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 4)'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 4)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 4)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
      </column>
      <column datatype='string' name='[Season (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Attribute' name='[attr:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Attribute' name='[attr:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Attribute' name='[attr:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Avg' name='[avg:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Count' name='[cnt:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Median' name='[med:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='None' name='[none:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Sum' name='[sum:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Season (group) 2,Season)' hidden='true' name='[Action (Season (group) 2,Season)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Season (group) 2]' />
          <groupfilter function='level-members' level='[Season]' />
        </groupfilter>
      </group>
      <group caption='Action (Season,Ls,Months,Month)' hidden='true' name='[Action (Season,Ls,Months,Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Season]' />
          <groupfilter function='level-members' level='[none:ls:ok]' />
          <groupfilter function='level-members' level='[month - Split 1]' />
          <groupfilter function='level-members' level='[month]' />
        </groupfilter>
      </group>
      <group caption='Autumn' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Season (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[cnt:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[med:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Season (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month - Split 1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='earth_date' />
        <field-sort-custom-order field='sol' />
        <field-sort-custom-order field='ls' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='min_temp' />
        <field-sort-custom-order field='Calculation_5320580789577490432' />
        <field-sort-custom-order field='max_temp' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='Season' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_F769EC814CC0468898A634ACB196C0B9'>
            <properties context=''>
              <relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 4)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (7)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 6)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0jp03hd0tz6jri1bf9nsq1qioje8'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0jp03hd0tz6jri1bf9nsq1qioje8' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0jp03hd0tz6jri1bf9nsq1qioje8' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 6)].[avg:max_temp:qk]&quot;' value='Max' />
          <alias key='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 6)].[avg:min_temp:qk]&quot;' value='Min' />
        </aliases>
      </column>
      <column caption='Max Above Zero' datatype='boolean' name='[Calculation_1174595120371273730]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [max_temp] &gt;= 0 THEN TRUE&#13;&#10;ELSE FALSE&#13;&#10;END' />
      </column>
      <column aggregation='Sum' caption='Temp Fluctuation' datatype='real' name='[Calculation_1174595120373465091]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[max_temp] - [min_temp]' />
      </column>
      <column caption='Index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sol (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[sol]' default='&quot;Other&quot;' new-bin='true' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Month 1&quot;' value='1' />
          <alias key='&quot;Month 10&quot;' value='10' />
          <alias key='&quot;Month 11&quot;' value='11' />
          <alias key='&quot;Month 12&quot;' value='12' />
          <alias key='&quot;Month 2&quot;' value='2' />
          <alias key='&quot;Month 3&quot;' value='3' />
          <alias key='&quot;Month 4&quot;' value='4' />
          <alias key='&quot;Month 5&quot;' value='5' />
          <alias key='&quot;Month 6&quot;' value='6' />
          <alias key='&quot;Month 7&quot;' value='7' />
          <alias key='&quot;Month 8&quot;' value='8' />
          <alias key='&quot;Month 9&quot;' value='9' />
        </aliases>
      </column>
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1174595120371273730]' derivation='None' name='[none:Calculation_1174595120371273730:nk]' pivot='key' type='nominal' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:ok]' pivot='key' type='ordinal' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Sum' name='[sum:min_temp:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Max Above Zero,Sol)' hidden='true' name='[Action (Max Above Zero,Sol)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1174595120371273730]' />
          <groupfilter function='level-members' level='[none:sol:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Month)' hidden='true' name='[Action (Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[month]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Sol (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;254&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;16, 34, 37 and 245 more&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 6)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 6)].[sum:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 6)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 6)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 6)].[avg:min_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1174595120371273730:nk]' type='palette'>
            <map to='#57606c'>
              <bucket>false</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8'>
            <properties context=''>
              <relation connection='textscan.0jp03hd0tz6jri1bf9nsq1qioje8' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (8)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 7)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0jp03hd0tz6jri1bf9nsq1qioje8 (copy)'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0jp03hd0tz6jri1bf9nsq1qioje8 (copy)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0jp03hd0tz6jri1bf9nsq1qioje8 (copy)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 7)].[avg:max_temp:qk]&quot;' value='Max' />
          <alias key='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 7)].[avg:min_temp:qk]&quot;' value='Min' />
        </aliases>
      </column>
      <column caption='Max Above Zero' datatype='boolean' name='[Calculation_1174595120371273730]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [max_temp] &gt;= 0 THEN TRUE&#13;&#10;ELSE FALSE&#13;&#10;END' />
      </column>
      <column aggregation='Sum' caption='Temp Fluctuation' datatype='real' name='[Calculation_1174595120373465091]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[max_temp] - [min_temp]' />
      </column>
      <column caption='Index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sol (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[sol]' default='&quot;Other&quot;' new-bin='true' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Month 1&quot;' value='1' />
          <alias key='&quot;Month 10&quot;' value='10' />
          <alias key='&quot;Month 11&quot;' value='11' />
          <alias key='&quot;Month 12&quot;' value='12' />
          <alias key='&quot;Month 2&quot;' value='2' />
          <alias key='&quot;Month 3&quot;' value='3' />
          <alias key='&quot;Month 4&quot;' value='4' />
          <alias key='&quot;Month 5&quot;' value='5' />
          <alias key='&quot;Month 6&quot;' value='6' />
          <alias key='&quot;Month 7&quot;' value='7' />
          <alias key='&quot;Month 8&quot;' value='8' />
          <alias key='&quot;Month 9&quot;' value='9' />
        </aliases>
      </column>
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1174595120371273730]' derivation='None' name='[none:Calculation_1174595120371273730:nk]' pivot='key' type='nominal' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:ok]' pivot='key' type='ordinal' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Sum' name='[sum:min_temp:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Max Above Zero,Sol)' hidden='true' name='[Action (Max Above Zero,Sol)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1174595120371273730]' />
          <groupfilter function='level-members' level='[none:sol:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Month)' hidden='true' name='[Action (Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[month]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Sol (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;254&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;16, 34, 37 and 245 more&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 7)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 7)].[sum:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 7)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 7)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 7)].[avg:min_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1174595120371273730:nk]' type='palette'>
            <map to='#57606c'>
              <bucket>false</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_24B0216962B84E058F34B9F2F4B69FF8'>
            <properties context=''>
              <relation connection='textscan.0jp03hd0tz6jri1bf9nsq1qioje8 (copy)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mars_data (9)' inline='true' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mars_data' name='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 5)'>
            <connection class='textscan' directory='/Users/malcolmmacleod/school/year1/data301/project-group15-project/data/processed' filename='mars_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 5)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 5)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='earth_date' ordinal='1' />
            <column datatype='integer' name='sol' ordinal='2' />
            <column datatype='integer' name='ls' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='real' name='min_temp' ordinal='5' />
            <column datatype='real' name='max_temp' ordinal='6' />
            <column datatype='real' name='pressure' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>earth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[earth_date]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>earth_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sol]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>sol</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ls]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>ls</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[mars_data.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
      </column>
      <column datatype='string' name='[Season (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Season]' new-bin='true'>
          <bin default-name='true' value='&quot;Autumn&quot;'>
            <value>&quot;Autumn&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Spring&quot;'>
            <value>&quot;Spring&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Summer&quot;'>
            <value>&quot;Summer&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Winter&quot;'>
            <value>&quot;Winter&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='mars_data.csv' datatype='table' name='[__tableau_internal_object_id__].[mars_data.csv_F769EC814CC0468898A634ACB196C0B9]' role='measure' type='quantitative' />
      <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
      <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
        <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Attribute' name='[attr:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Attribute' name='[attr:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Attribute' name='[attr:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Attribute' name='[attr:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Avg' name='[avg:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Count' name='[cnt:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Median' name='[med:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='None' name='[none:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='None' name='[none:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ls]' derivation='Sum' name='[sum:ls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sol]' derivation='Sum' name='[sum:sol:qk]' pivot='key' type='quantitative' />
      <group caption='Autumn' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Season]' member='&quot;Autumn&quot;' />
            <groupfilter function='union'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='1' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 1&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='0' />
                    <groupfilter function='member' level='[ls]' member='1' />
                    <groupfilter function='member' level='[ls]' member='2' />
                    <groupfilter function='member' level='[ls]' member='3' />
                    <groupfilter function='member' level='[ls]' member='4' />
                    <groupfilter function='member' level='[ls]' member='5' />
                    <groupfilter function='member' level='[ls]' member='6' />
                    <groupfilter function='member' level='[ls]' member='7' />
                    <groupfilter function='member' level='[ls]' member='8' />
                    <groupfilter function='member' level='[ls]' member='9' />
                    <groupfilter function='member' level='[ls]' member='10' />
                    <groupfilter function='member' level='[ls]' member='11' />
                    <groupfilter function='member' level='[ls]' member='12' />
                    <groupfilter function='member' level='[ls]' member='13' />
                    <groupfilter function='member' level='[ls]' member='14' />
                    <groupfilter function='member' level='[ls]' member='15' />
                    <groupfilter function='member' level='[ls]' member='16' />
                    <groupfilter function='member' level='[ls]' member='17' />
                    <groupfilter function='member' level='[ls]' member='18' />
                    <groupfilter function='member' level='[ls]' member='19' />
                    <groupfilter function='member' level='[ls]' member='20' />
                    <groupfilter function='member' level='[ls]' member='21' />
                    <groupfilter function='member' level='[ls]' member='22' />
                    <groupfilter function='member' level='[ls]' member='23' />
                    <groupfilter function='member' level='[ls]' member='24' />
                    <groupfilter function='member' level='[ls]' member='25' />
                    <groupfilter function='member' level='[ls]' member='26' />
                    <groupfilter function='member' level='[ls]' member='27' />
                    <groupfilter function='member' level='[ls]' member='28' />
                    <groupfilter function='member' level='[ls]' member='29' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 2&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='30' />
                    <groupfilter function='member' level='[ls]' member='31' />
                    <groupfilter function='member' level='[ls]' member='32' />
                    <groupfilter function='member' level='[ls]' member='33' />
                    <groupfilter function='member' level='[ls]' member='34' />
                    <groupfilter function='member' level='[ls]' member='35' />
                    <groupfilter function='member' level='[ls]' member='36' />
                    <groupfilter function='member' level='[ls]' member='37' />
                    <groupfilter function='member' level='[ls]' member='38' />
                    <groupfilter function='member' level='[ls]' member='39' />
                    <groupfilter function='member' level='[ls]' member='40' />
                    <groupfilter function='member' level='[ls]' member='41' />
                    <groupfilter function='member' level='[ls]' member='42' />
                    <groupfilter function='member' level='[ls]' member='43' />
                    <groupfilter function='member' level='[ls]' member='44' />
                    <groupfilter function='member' level='[ls]' member='45' />
                    <groupfilter function='member' level='[ls]' member='46' />
                    <groupfilter function='member' level='[ls]' member='47' />
                    <groupfilter function='member' level='[ls]' member='48' />
                    <groupfilter function='member' level='[ls]' member='49' />
                    <groupfilter function='member' level='[ls]' member='50' />
                    <groupfilter function='member' level='[ls]' member='51' />
                    <groupfilter function='member' level='[ls]' member='52' />
                    <groupfilter function='member' level='[ls]' member='53' />
                    <groupfilter function='member' level='[ls]' member='54' />
                    <groupfilter function='member' level='[ls]' member='55' />
                    <groupfilter function='member' level='[ls]' member='56' />
                    <groupfilter function='member' level='[ls]' member='57' />
                    <groupfilter function='member' level='[ls]' member='58' />
                    <groupfilter function='member' level='[ls]' member='59' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[month - Split 1]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[month]' member='&quot;Month 3&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[ls]' member='60' />
                    <groupfilter function='member' level='[ls]' member='61' />
                    <groupfilter function='member' level='[ls]' member='62' />
                    <groupfilter function='member' level='[ls]' member='63' />
                    <groupfilter function='member' level='[ls]' member='64' />
                    <groupfilter function='member' level='[ls]' member='65' />
                    <groupfilter function='member' level='[ls]' member='66' />
                    <groupfilter function='member' level='[ls]' member='67' />
                    <groupfilter function='member' level='[ls]' member='68' />
                    <groupfilter function='member' level='[ls]' member='69' />
                    <groupfilter function='member' level='[ls]' member='70' />
                    <groupfilter function='member' level='[ls]' member='71' />
                    <groupfilter function='member' level='[ls]' member='72' />
                    <groupfilter function='member' level='[ls]' member='73' />
                    <groupfilter function='member' level='[ls]' member='74' />
                    <groupfilter function='member' level='[ls]' member='75' />
                    <groupfilter function='member' level='[ls]' member='76' />
                    <groupfilter function='member' level='[ls]' member='77' />
                    <groupfilter function='member' level='[ls]' member='78' />
                    <groupfilter function='member' level='[ls]' member='79' />
                    <groupfilter function='member' level='[ls]' member='80' />
                    <groupfilter function='member' level='[ls]' member='81' />
                    <groupfilter function='member' level='[ls]' member='82' />
                    <groupfilter function='member' level='[ls]' member='83' />
                    <groupfilter function='member' level='[ls]' member='84' />
                    <groupfilter function='member' level='[ls]' member='85' />
                    <groupfilter function='member' level='[ls]' member='86' />
                    <groupfilter function='member' level='[ls]' member='87' />
                    <groupfilter function='member' level='[ls]' member='88' />
                    <groupfilter function='member' level='[ls]' member='89' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[ls]' />
            <hierarchy name='[month]' />
            <hierarchy name='[month - Split 1]' />
            <hierarchy name='[Season]' />
          </order>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Season (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Summer&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Autumn&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Winter&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[attr:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[avg:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:max_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Spring&quot;</bucket>
                <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[avg:min_temp:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[attr:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[attr:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[cnt:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:sol:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[sum:ls:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[sum:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[sum:sol:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[attr:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[avg:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[sum:Calculation_5320580789577490432:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:pressure:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[attr:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[med:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Season (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:month - Split 1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='earth_date' />
        <field-sort-custom-order field='sol' />
        <field-sort-custom-order field='ls' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='min_temp' />
        <field-sort-custom-order field='Calculation_5320580789577490432' />
        <field-sort-custom-order field='max_temp' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='Season' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mars_data.csv' id='mars_data.csv_F769EC814CC0468898A634ACB196C0B9'>
            <properties context=''>
              <relation connection='textscan.0z7j60g1bl8eld1h6sy7g1n0i4c1 (copy 5)' name='mars_data.csv' table='[mars_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='earth_date' ordinal='1' />
                  <column datatype='integer' name='sol' ordinal='2' />
                  <column datatype='integer' name='ls' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='real' name='min_temp' ordinal='5' />
                  <column datatype='real' name='max_temp' ordinal='6' />
                  <column datatype='real' name='pressure' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1ynpvs519d1ssl1g0uf071llgen7'>
      <datasources>
        <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
      </datasources>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
        <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
        <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
        <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]'>
        <groupfilter function='member' level='[none:month:nk]' member='&quot;Month 1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]' included-values='in-range'>
        <min>10</min>
        <max>1977</max>
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]'>
        <groupfilter function='level-members' level='[yr:earth_date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]' />
      </filter>
    </shared-view>
    <shared-view name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
      <datasources>
        <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
      </datasources>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
        <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
        <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
        <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]'>
        <groupfilter function='member' level='[none:month:nk]' member='&quot;Month 1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]'>
        <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]'>
        <groupfilter function='level-members' level='[yr:earth_date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[yr:earth_date:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_019AEBE661554FFFA3508E9979724C31]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Yearly Average Pressure' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Yearly Average Pressure' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_80D1EBF4123E4EE3873080AA87958FBD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Monthly Pressure Variation' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_BC4FA863CC9647539E1A98D4E6DC52DE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Yearly Average Pressure' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_3CE94D9474784021AC7C9D5157EFF9B1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Mars Weather - Does the red planet experience seasonal variations?' type='sheet' worksheet='High/Low Temperature in each Season (2)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mars Weather - Does the red planet experience seasonal variations?' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5_993D672C7C49452AB25490BE053E9788]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Mars Weather - Does the red planet experience seasonal variations?' type='sheet' worksheet='Seasons by Mars Months/Solar Longitude (2)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mars Weather - Does the red planet experience seasonal variations?' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Max Temperature in each Season/Solar Longitude (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>The temperature dips down in Autumn going into the winter and increases going into Spring</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (9)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
            <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Autumn&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk]' field-type='quantitative' range-type='independent' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk]' scope='cols' value='Solar Longitude' />
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]' scope='rows' value='Avg. Max Temp [Celsius]' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]</rows>
        <cols>([federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk] * [federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk])</cols>
      </table>
      <simple-id uuid='{C2E294BB-C4A5-418F-B330-4F1B6682612C}' />
    </worksheet>
    <worksheet name='Average Temperature over Sols (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
            <run>Æ&#10;</run>
            <run fontsize='9'>Spanning over 1,977 Sols (Martian Solar Days)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (9)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column caption='Avg Temp' datatype='real' name='[Calculation_5320580789577490432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([min_temp]+[max_temp])/2' />
            </column>
            <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Season]' new-bin='true'>
                <bin default-name='true' value='&quot;Autumn&quot;'>
                  <value>&quot;Autumn&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Spring&quot;'>
                  <value>&quot;Spring&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Summer&quot;'>
                  <value>&quot;Summer&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Winter&quot;'>
                  <value>&quot;Winter&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
            <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
            <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
            <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
            </column>
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[ls]' derivation='None' name='[none:ls:ok]' pivot='key' type='ordinal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
            <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5320580789577490432]' derivation='Sum' name='[sum:Calculation_5320580789577490432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Action (Season (group) 2,Season)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_3CE94D9474784021AC7C9D5157EFF9B1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Season (group) 2]' />
              <groupfilter function='level-members' level='[Season]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Action (Season,Ls,Months,Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_993D672C7C49452AB25490BE053E9788]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[none:ls:ok]' />
              <groupfilter function='level-members' level='[month - Split 1]' />
              <groupfilter function='level-members' level='[month]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Action (Season (group) 2,Season)]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Action (Season,Ls,Months,Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:Calculation_5320580789577490432:qk]' scope='rows' value='Avg Temp [Celsius]' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[sum:Calculation_5320580789577490432:qk]</rows>
        <cols>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:sol:qk]</cols>
      </table>
      <simple-id uuid='{9139132B-55F2-426F-9118-0D0678FF7FE8}' />
    </worksheet>
    <worksheet name='High/Low Temperature in each Season (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt; </run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Autumn experiences the coldest temperature (-80.24 °C)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (9)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Season]' new-bin='true'>
                <bin default-name='true' value='&quot;Autumn&quot;'>
                  <value>&quot;Autumn&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Spring&quot;'>
                  <value>&quot;Spring&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Summer&quot;'>
                  <value>&quot;Summer&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Winter&quot;'>
                  <value>&quot;Winter&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
            <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
            <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
            <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
            </column>
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[ls]' derivation='None' name='[none:ls:ok]' pivot='key' type='ordinal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Action (Season,Ls,Months,Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_993D672C7C49452AB25490BE053E9788]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[none:ls:ok]' />
              <groupfilter function='level-members' level='[month - Split 1]' />
              <groupfilter function='level-members' level='[month]' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Autumn&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Action (Season,Ls,Months,Month)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]' scope='rows' value='Temperature [Celsius]' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]' />
              <color column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</rows>
        <cols>([federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk] / [federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Autumn&quot;</value>
                <value>&quot;Autumn&quot;</value>
                <value>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</value>
                <value>-80.237132352941174</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Autumn&quot;</value>
                <value>&quot;Autumn&quot;</value>
                <value>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</value>
                <value>-22.375</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Winter&quot;</value>
                <value>&quot;Winter&quot;</value>
                <value>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</value>
                <value>-17.410204081632653</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Winter&quot;</value>
                <value>&quot;Winter&quot;</value>
                <value>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</value>
                <value>-79.467346938775506</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Spring&quot;</value>
                <value>&quot;Spring&quot;</value>
                <value>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</value>
                <value>-0.93525179856115104</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Spring&quot;</value>
                <value>&quot;Spring&quot;</value>
                <value>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</value>
                <value>-69.964028776978424</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Summer&quot;</value>
                <value>&quot;Summer&quot;</value>
                <value>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:max_temp:qk]&quot;</value>
                <value>-5.4423076923076925</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[:Measure Names]</field>
                  <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Summer&quot;</value>
                <value>&quot;Summer&quot;</value>
                <value>&quot;[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[avg:min_temp:qk]&quot;</value>
                <value>-72.96875</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{66EB9761-148C-4C3C-B5E7-A71F19EDA120}' />
    </worksheet>
    <worksheet name='Monthly Pressure Variation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Monthly Pressure Variation&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (9)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
            <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
            <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (YEAR(Earth Date))]'>
            <groupfilter function='level-members' level='[yr:earth_date:ok]' user:ui-action-filter='[Action3_BC4FA863CC9647539E1A98D4E6DC52DE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (YEAR(Earth Date))]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='render-fold-reversed' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]' value='70' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d4a6c8' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]</rows>
        <cols>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{8BD4A7AE-2664-4F04-8292-ECE96AAF2C79}' />
    </worksheet>
    <worksheet name='Seasonal Pressure Variation'>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (9)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column-instance column='[max_temp]' derivation='Max' name='[max:max_temp:qk]' pivot='key' type='quantitative' />
            <column caption='Max Temp' datatype='real' name='[max_temp]' role='dimension' type='ordinal' />
            <column-instance column='[min_temp]' derivation='Min' name='[min:min_temp:qk]' pivot='key' type='quantitative' />
            <column caption='Min Temp' datatype='real' name='[min_temp]' role='dimension' type='ordinal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[pressure]' derivation='None' name='[none:pressure:ok]' pivot='key' type='ordinal' />
            <column-instance column='[pressure]' derivation='None' name='[none:pressure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
            <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
            <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (Month,Pressure)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80D1EBF4123E4EE3873080AA87958FBD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[month]' />
              <groupfilter function='level-members' level='[none:pressure:ok]' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Autumn&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (Month,Pressure)]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]' scope='cols' value='Atmospheric Pressure' />
            <format attr='height' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]' value='31' />
            <format attr='auto-subtitle' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]' value='26' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <lod column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[max:max_temp:qk]' />
              <lod column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[min:min_temp:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='orange_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]</rows>
        <cols>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]</cols>
      </table>
      <simple-id uuid='{EAD42D22-123F-4BD4-9F87-7EB4955CC884}' />
    </worksheet>
    <worksheet name='Seasons by Mars Months/Solar Longitude (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Seasons by Mars Months/Solar Longitude</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>12 Mars months each spanning within 30 degress of Solar Longitude (ls)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (9)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Season]' new-bin='true'>
                <bin default-name='true' value='&quot;Autumn&quot;'>
                  <value>&quot;Autumn&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Spring&quot;'>
                  <value>&quot;Spring&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Summer&quot;'>
                  <value>&quot;Summer&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Winter&quot;'>
                  <value>&quot;Winter&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Ls' datatype='integer' name='[ls]' role='measure' type='quantitative' />
            <column caption='Months' datatype='integer' datatype-customized='true' name='[month - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ylpcki011cp1718nn22l12bmepa].[month]'>
              <calculation class='tableau' formula='INT(TRIM( SPLIT( [month], &quot;Month&quot;, 2 ) ))' />
            </column>
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[ls]' derivation='None' name='[none:ls:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month - Split 1]' derivation='None' name='[none:month - Split 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Action (Season (group) 2,Season)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_3CE94D9474784021AC7C9D5157EFF9B1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Season (group) 2]' />
              <groupfilter function='level-members' level='[Season]' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Autumn&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Action (Season (group) 2,Season)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk]' scope='cols' value='Solar Longitude' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month - Split 1:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='362' />
                <format attr='maxwidth' value='362' />
                <format attr='minheight' value='240' />
                <format attr='maxheight' value='240' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk] / [federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk])</rows>
        <cols>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:ls:qk]</cols>
      </table>
      <simple-id uuid='{4AAA05FF-66BF-4838-B4BC-7C8BE471A8AA}' />
    </worksheet>
    <worksheet name='Yearly Average Pressure'>
      <table>
        <view>
          <datasources>
            <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
            <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
            <datasource caption='mars_data (5)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)' />
            <datasource caption='mars_data (9)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)' />
            <datasource caption='mars_data (4)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)' />
            <datasource caption='mars_data (2)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)' />
            <datasource caption='mars_data (3)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[pressure]' derivation='Avg' name='[avg:pressure:qk]' pivot='key' type='quantitative' />
            <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[pressure]' derivation='None' name='[none:pressure:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
            <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
            <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
            <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (Month,Pressure)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80D1EBF4123E4EE3873080AA87958FBD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[month]' />
              <groupfilter function='level-members' level='[none:pressure:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7].[Action (Month,Pressure)]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 2)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 3)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 4)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:Season:nk]</column>
            <column>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 8)].[none:month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:pressure:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:pressure:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-color' value='#e5632a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ynpvs519d1ssl1g0uf071llgen7].[avg:pressure:qk]</rows>
        <cols>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</cols>
      </table>
      <simple-id uuid='{5266E415-595C-442F-80F3-282236F59265}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='mars_data' name='federated.1ynpvs519d1ssl1g0uf071llgen7' />
      </datasources>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7'>
        <column caption='Earth Date' datatype='date' name='[earth_date]' role='dimension' type='ordinal' />
        <column-instance column='[sol]' derivation='None' name='[none:sol:qk]' pivot='key' type='quantitative' />
        <column caption='Sol' datatype='integer' name='[sol]' role='measure' type='quantitative' />
        <column-instance column='[earth_date]' derivation='Year' name='[yr:earth_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97694' id='25' param='vert' type-v2='layout-flow' w='98698' x='651' y='1153'>
            <zone h='97694' id='23' type-v2='layout-basic' w='98698' x='651' y='1153'>
              <zone h='78531' id='7' param='horz' type-v2='layout-flow' w='98698' x='651' y='20316'>
                <zone h='78531' id='5' type-v2='layout-basic' w='67046' x='651' y='20316'>
                  <zone h='26945' id='3' name='Seasonal Pressure Variation' w='67046' x='651' y='20316'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46976' id='9' name='Monthly Pressure Variation' w='67046' x='651' y='51871'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='4610' id='31' type-v2='text' w='67046' x='651' y='47261'>
                    <formatted-text>
                      <run fontalignment='1'>Atmoshperic Pressure (Pa)</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='389' h='78531' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='31652' x='67697' y='20316'>
                  <zone h='7493' id='8' mode='checkdropdown' name='Seasonal Pressure Variation' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]' type-v2='filter' w='31652' x='67697' y='20316'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7349' id='20' name='Yearly Average Pressure' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='31652' x='67697' y='27809'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='59078' id='19' name='Yearly Average Pressure' w='31652' x='67697' y='35158'>
                    <layout-cache cell-count-w='7' minheight='183' non-cell-size-w='66' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='24' h='4611' id='10' is-fixed='true' name='Monthly Pressure Variation' pane-specification-id='26' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[:Measure Names]' type-v2='color' w='31652' x='67697' y='94236'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='19163' id='18' type-v2='text' w='69487' x='651' y='1153'>
                <formatted-text>
                  <run fontcolor='#2a0857' fontname='Toppan Bunkyu Midashi Mincho' fontsize='36'>Mars? I Wouldn&apos;t. Would You?..No Pressure. </run>
                  <run fontcolor='#d4a6c8' fontname='Toppan Bunkyu Midashi Mincho' fontsize='12'>(Pressure Variations on Mars : Could They Ever Sustain Us?)</run>
                  <run>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19163' id='17' is-scaled='1' param='/Users/remyadams/data301/Snoopy on Mars.jpeg' type-v2='bitmap' w='29211' x='70138' y='1153'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3458' id='28' type-v2='dashboard-object' w='1900' x='66983' y='1153'>
          <button action=''>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{8D9E8039-C1ED-4128-AA0B-EFC81F5A2319}&quot; zone-id=&quot;28&quot; zone-ids=[17]</toggle-action>
            <button-visual-state />
            <button-visual-state />
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97694' id='42' param='vert' type-v2='layout-flow' w='98698' x='651' y='1153'>
                <zone forceUpdate='true' h='19163' id='18' type-v2='text' w='69487' x='651' y='1153'>
                  <formatted-text>
                    <run fontcolor='#2a0857' fontname='Toppan Bunkyu Midashi Mincho' fontsize='36'>Mars? I Wouldn&apos;t. Would You?..No Pressure. </run>
                    <run fontcolor='#d4a6c8' fontname='Toppan Bunkyu Midashi Mincho' fontsize='12'>(Pressure Variations on Mars : Could They Ever Sustain Us?)</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='146' h='19163' id='17' is-fixed='true' is-scaled='1' param='/Users/remyadams/data301/Snoopy on Mars.jpeg' type-v2='bitmap' w='29211' x='70138' y='1153'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7493' id='8' mode='checkdropdown' name='Seasonal Pressure Variation' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]' type-v2='filter' w='31652' x='67697' y='20316'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='207' h='26945' id='3' is-fixed='true' name='Seasonal Pressure Variation' w='67046' x='651' y='20316'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7349' id='20' name='Yearly Average Pressure' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='31652' x='67697' y='27809'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59078' id='19' is-fixed='true' name='Yearly Average Pressure' w='31652' x='67697' y='35158'>
                  <layout-cache cell-count-w='7' minheight='183' non-cell-size-w='66' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4610' id='31' type-v2='text' w='67046' x='651' y='47261'>
                  <formatted-text>
                    <run fontalignment='1'>Atmoshperic Pressure (Pa)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46976' id='9' is-fixed='true' name='Monthly Pressure Variation' w='67046' x='651' y='51871'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='4611' id='10' name='Monthly Pressure Variation' pane-specification-id='26' param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[:Measure Names]' type-v2='color' w='31652' x='67697' y='94236'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7D63D9BC-7AC7-49FC-A57D-388F497BA9CA}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Mars Weather - Does the red planet experience seasonal variations?'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Mars Weather - Does the red planet experience seasons?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='mars_data (6)' name='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)' />
      </datasources>
      <datasource-dependencies datasource='federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)'>
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97694' id='40' param='horz' type-v2='layout-flow' w='98698' x='651' y='1153'>
            <zone h='97694' id='37' param='vert' type-v2='layout-flow' w='85679' x='651' y='1153'>
              <zone h='6052' id='38' type-v2='title' w='85679' x='651' y='1153'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='91642' id='35' type-v2='layout-basic' w='85679' x='651' y='7205'>
                <zone h='45819' id='32' param='horz' type-v2='layout-flow' w='85679' x='651' y='7205'>
                  <zone h='45819' id='24' type-v2='layout-basic' w='85679' x='651' y='7205'>
                    <zone h='45819' id='20' param='horz' type-v2='layout-flow' w='85679' x='651' y='7205'>
                      <zone h='45819' id='16' param='horz' type-v2='layout-flow' w='85679' x='651' y='7205'>
                        <zone h='45819' id='30' name='Seasons by Mars Months/Solar Longitude (2)' w='42636' x='651' y='7205'>
                          <layout-cache has-max-size-w='true' maxwidth='524' minwidth='524' type-h='fixed' type-w='scalable' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='45819' id='42' name='Average Temperature over Sols (2)' w='43043' x='43287' y='7205'>
                          <layout-cache minwidth='156' type-h='fixed' type-w='scalable' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='45823' id='34' name='Average Max Temperature in each Season/Solar Longitude (2)' w='42839' x='651' y='53024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45823' id='45' name='High/Low Temperature in each Season (2)' w='42840' x='43490' y='53024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='97694' id='39' is-fixed='true' param='vert' type-v2='layout-flow' w='13019' x='86330' y='1153'>
              <zone h='7493' id='41' mode='dropdown' name='Average Max Temperature in each Season/Solar Longitude (2)' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' type-v2='filter' values='database' w='13019' x='86330' y='1153'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='62' h='10087' id='46' is-fixed='true' mode='slider' name='Seasons by Mars Months/Solar Longitude (2)' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' type-v2='filter' values='database' w='13019' x='86330' y='8646'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontcolor='#000000'>Mars Weather - Does the red planet experience seasons?</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='66' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97694' id='65' param='vert' type-v2='layout-flow' w='98698' x='651' y='1153'>
                <zone h='6052' id='38' type-v2='title' w='85679' x='651' y='1153'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='62' h='10087' id='46' mode='slider' name='Seasons by Mars Months/Solar Longitude (2)' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]' type-v2='filter' values='database' w='13019' x='86330' y='8646'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45819' id='30' is-fixed='true' name='Seasons by Mars Months/Solar Longitude (2)' w='42636' x='651' y='7205'>
                  <layout-cache has-max-size-w='true' maxwidth='524' minwidth='524' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45819' id='42' is-fixed='true' name='Average Temperature over Sols (2)' w='43043' x='43287' y='7205'>
                  <layout-cache minwidth='156' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7493' id='41' mode='dropdown' name='Average Max Temperature in each Season/Solar Longitude (2)' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]' type-v2='filter' values='database' w='13019' x='86330' y='1153'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45823' id='34' is-fixed='true' name='Average Max Temperature in each Season/Solar Longitude (2)' w='42839' x='651' y='53024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45823' id='45' is-fixed='true' name='High/Low Temperature in each Season (2)' w='42840' x='43490' y='53024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E166E8B2-F005-4181-9681-81442F72F1B7}' />
    </dashboard>
  </dashboards>
  <windows source-height='198'>
    <window class='worksheet' name='Seasonal Pressure Variation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:max_temp:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:min_temp:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BAC5C62-DB40-41A8-B711-3BA7101FCAB8}' />
    </window>
    <window class='worksheet' name='Monthly Pressure Variation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[:Measure Names]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Min Temp &amp; Max Temp:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:max_temp:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:max_temp:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:min_temp:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:min_temp:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[tyr:earth_date:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DDA745F2-329E-4349-9EFC-AF9E7C593DDD}' />
    </window>
    <window class='worksheet' name='Yearly Average Pressure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[mn:month:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:Season:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:month:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:pressure:qk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[none:sol:qk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:earth_date:ok]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7].[yr:month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2EB802D-7A6C-4B1E-BCD1-DA3EC2CFC8AD}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Monthly Pressure Variation'>
          <highlight field='[federated.1ynpvs519d1ssl1g0uf071llgen7].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Seasonal Pressure Variation' />
        <viewpoint name='Yearly Average Pressure'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{8D9E8039-C1ED-4128-AA0B-EFC81F5A2319}' />
    </window>
    <window class='worksheet' name='High/Low Temperature in each Season (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 1]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group)]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{868F6ADE-1133-41E2-810F-51F5B97C0A71}' />
    </window>
    <window class='worksheet' name='Average Temperature over Sols (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA49DA34-1999-40CB-8CD3-A7DA69A8A445}' />
    </window>
    <window class='worksheet' name='Average Max Temperature in each Season/Solar Longitude (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3AD9B3AF-B8D6-4DDD-9909-FD15B7654CC9}' />
    </window>
    <window class='worksheet' name='Seasons by Mars Months/Solar Longitude (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month - Split 1:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:Season:nk]</field>
            <field>[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{137EA539-204C-4AE6-A547-16DD8C2492F0}' />
    </window>
    <window class='dashboard' maximized='true' name='Mars Weather - Does the red planet experience seasonal variations?'>
      <viewpoints>
        <viewpoint name='Average Max Temperature in each Season/Solar Longitude (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Temperature over Sols (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='High/Low Temperature in each Season (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ynpvs519d1ssl1g0uf071llgen7 (copy 5)].[Season (group) 2]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Seasons by Mars Months/Solar Longitude (2)' />
      </viewpoints>
      <active id='46' />
      <simple-id uuid='{E38EA482-662C-4DDD-BD97-8E0715B778CB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Average Max Temperature in each Season/Solar Longitude (2)' width='384'>
      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
      ubm5PPPMM0iSxObNm3n22WfZs2cPt9xyC3fddRf33nvvJS3+Vq1aRUdHBxaLhbNnzwJGvv1f
      /uVf+PjHPz7s98TjcY4ePcrf/u3f8vDDD9Pc3IzP5yMnJ4fNmzdz//334/f7qaurY/bs2Tz0
      0ENs2LAh7TPcbrcpvXv//fcPq+t/5MgRFi9ezJ//+Z+zfv168zGPx4PT6aS0tJSDBw+Ow5kT
      TCa33norDz/8MLt27eLuu++mubmZXbt2sXnzZr761a+Sl5eX1m2usrKS8vJy2traTOlkMBqX
      PP3002lNi4Zy4MABbrjhBu666y7+7M/+jO3btwOwcuVKHnzwQVavXo3f72fbtm089NBD3H33
      3ZdInC9dupQZM2Zw++23c9NNNw37Pdu2bWPz5s3cc889zJgxA4C33nqL2tpaiouLaW1tzer1
      K+EApgipLlV/8Rd/wTe/+U22b9+OzWYzZ0iRSCStqXVLSwtPP/00mzZt4pZbbjEfv+aaa0Zt
      PJ9qEhKPx82ZjSxfehvY7XZ6enqIxWLDdg+TJCltsTrVfSr1d6pJyVA7rFarqQ//yU9+kuuv
      v/6DniZBhunu7ub666/niSeeYPny5Rw6dAiLxUIsFkPTNGKxWJoE9datW2lvb+fLX/5ymjrq
      6tWrh73vUgy998PhcNq9P7TRjd1up62tDVVVh40mdF1PS39eXMCgquolndOsViuapuF2u/na
      1742ro3cpxpiDWCK0NzczOOPP051dTXNzc18+tOfZvXq1TzyyCP09vZy/PhxHnvsMbOywmq1
      EggE+M1vfmPmUoFhu0Cpqsp3v/tdXC4Xd999Nxs3buThhx/GYrGwfPlys13c0PctWLCAiooK
      vvrVryJJ0iWNdWpra/nnf/5ngsEgDz/8MJFIhG9+85v09PRQVVXF4sWL+dGPfsRjjz3GmTNn
      WL58OcuWLeMXv/gFO3bsIB6Ps2HDhklpkCMYP7Zu3crBgwfJy8ujtbWVe++9F13XeeKJJygt
      LcXpdKYN9B6PhzfffBO/3282cR9pctLU1MSDDz6Ix+PhL//yL/n5z3/Od7/7XY4dO8bXv/51
      otFo2nslSeIzn/kMTzzxBNu2bRu20GH+/Pn84Ac/4NZbb6Wqqoqf/vSnnD9/nsOHD3Pbbbex
      fv16fvCDH7Bw4UIaGhqQJInbbruNn/zkJ2YDnGuvvRa32z3OZ3JqIPoBTBFSPUU7OzvJy8uj
      oqICWZbp7e3l9OnTVFdXU1paSiQSwe/3U1xczPnz5wkEApSVlSFJEk6nk0AgQFFRUdpnt7e3
      m3nZwsJCnE4nJ0+eRNd15s2bh6IodHR0UFxcjK7rdHd3U1hYyKlTp7Db7bz00kvk5OTw5S9/
      mc7OToqLi5Fl2UwfXX311XR0dNDZ2UlVVRW6rlNYWEhPTw/Nzc1UVVWhKAr5+fkEAgGam5tx
      Op1UVlamzeyyhWzuBxCPx2lpaSEQCFBdXU1ubi66rnPmzBn8fj/z58/H6XTS09ODy+VCURSz
      OYnNZiM/P5+BgQE8Hk9ap7BYLEZ7ezu6rmOxWKioqMDv93Pq1CkqKiooLy8nEokQCoUoLCyk
      v78fRVHw+XzE43FzAvLUU0+Rl5dnvi4ajdLY2IjX66W8vJz6+nrsdju5ubnk5uZis9loampC
      13Vyc3MpLCxEURTa2tro6+ujtLSUwsLCrCxWaG9vFw5AMDyRSITHH38cn89HcXExDz744Kid
      2ASDZLMDmGrs3buXZ5991qwK+sxnPjNqakkwiHAAAsEEIByA4EpAdAQTCASCaYxwAAKBQDBN
      +X+Gn02qGFsFKgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Average Temperature over Sols (2)' width='384'>
      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
      aDlTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      drtljd3r9RIIBDAajbjdblQqFSqVirKyMhISElCr1RQWFlJSUkLbtm2JCugz6gAAIABJREFU
      iooKyf/w4cP59NNPGTt2rJyXdevWcc8998h1VVJSgsfjIS0tDaPRCIDD4cBgMBAIBKioqCAp
      KYlp06aFvJOKigoqKiqIj48nLi4Ov99PcXEx6enpVFZWolKpiI6Oplu3bnTq1EnOU1VVFenp
      6SQmJpKWloZKpZKv6/V6cnJyCAQCtG/fHo3mhANNBQWFf4BGv8ykpCRWrVpF7969MZlMaLVa
      tFotoijy8ssv43K5iImJ4d133+WNN95Ao9Hw2GOPodfrCQsLY9++fbzyyiukpqby+eefs2fP
      HlJTU8nMzOTpp58mNTWVJUuW8NNPP9GrVy/efvttrrvuOoYNGyZfT05OJi0tjU2bNvHhhx9i
      NBr5z3/+Q2JiIiqViqysLN566606nWZDaLX/x96ZB9l1XPf563vfMjsGg21AAAQIEhBBgAB3
      mYQkk9ZCRZa3iiuOo4pcSlSuMEUqVWGqIpWURC5HKSVRKnZcTsqOXE4pdhQlsWURkkiKmygu
      IinSFESRAAhggME+g5nB7O+9u/TJH919731v3mwAZggS91cYzLx+53af27fvOadPnz5dpLe3
      l8nJSQ4ePMhjjz1GsVjkJz/5CQ8//DDlcpmvfe1r3HXXXXz961/nN37jN7j//vv5/ve/z9/8
      zd+wfft2+vr6+N3f/V1uueUW/viP/5hjx46xdu1a3n77bb72ta8xMTHBn//5n/PlL38ZgB//
      +MccOXKEf/yP/zF//dd/TXt7O88++ywTExP8h//wH3jxxRf53ve+x+7du/kv/+W/8KUvfanO
      tbN9+3YGBwcZHx9nxYoVnD9/nunpaa677jqCIODzn/88XV1dlEolDhw4wB/8wR+wevVq/vN/
      /s/cd999/Nmf/Rlr167l937v9/h3/+7f8eCDD3LNNdfwf/7P/+Gll15iw4YNHDhwgF//9V/n
      xhtv5Bvf+AanTp3ia1/7Gj09PfyLf/EveO2113j99dd54IEH6Ovr49/8m3/DrbfeSn9/P9df
      fz0PPvggnufx4IMP0tbWxqZNmxgeHmbLli089NBDFz9Cc+TIsXSQOVCtVuUP//AP5e/+3b8r
      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
      4AD33HMPH/rQhzh37hxHjhzhzjvv5IMf/CADAwP09vZy/PjxZesjAP/LX/7yl5elpWXG4OAg
      69atS17II0eOJJ3e3d3NmjVreO655+js7GT79u3LItxGR0fp6upi1apV+L7Ptddey+bNmykW
      i9x00010d3fz7LPPUigU2LVr17Lw1N/fz+7du5Pp6MDAAPv37+e6667j+uuv5/jx4/zsZz/j
      rrvuorOzc8n5OXHiBNu3b6e1tZVyuczZs2d56623aG1tZceOHWiteemll9iyZUuSQnwpUS6X
      GRoa4o033sDzPHbt2kWhUODHP/4x11xzDddeey2+7/Piiy/S29ubGBxLidWrV/P8889z5MgR
      br/9diYnJxkcHKSvr4/x8XF27drFa6+9xrFjx/jABz6QzJqWCsVikbGxMX72s58RxzF33HFH
      cuZHuVxm+/btlEolnn/+edasWZOkgF9KeJ5HrVbj9ddfZ2pqijvuuINVq1bxox/9iNHRUe68
      805WrFjBc889R0dHB+973/uW/H1bu3YtL774IocPH2bnzp1s376dl19+mcOHD3PTTTexdetW
      Dh06xJkzZ/jABz6wLLuD830AOXLkyHGV4j3rAsqRI0eOHHMjVwA5cuTIcZUiVwA5cuTIcZUi
      VwA5cuTIcZUiVwA5cuTIcZUiVwA5cuTIcZUiVwA5cuTIcZUiVwA5cuTIcZUiVwA5cuTIcZUi
      VwA5cuTIcZUiVwA5cuTIcZUiVwA5cuTIcZUiVwA5cuTIcZUiVwA5clwmuPN53wtwp5vNhenp
      ac6fP79MHOVYCuQKIMdVC3dW7dGjRwEj9C5cuHDR9b3yyitUq9WL4uPVV19t+t3hw4fZt28f
      3/ve9zh58uRF87ZYfp599llaW1t55plneOyxx3jssceoVCp1dOVymRdffDE50DzHuw/v2QNh
      cuSYD2EYcvjwYUZGRti2bRvPPfccb775JsVikSAIOHz4MMeOHWN8fJyDBw9yzTXXMDk5yUsv
      vUQYhqxatYrDhw/z5ptv0tHRwZkzZxgdHeXo0aP09vZy5swZ3nrrLc6fP09vby+Tk5O88sor
      RFHEypUrOXPmDGfOnMHzPFpaWujs7OTtt9/m0KFDrF27lkKhwLFjx7jxxhvZs2cPzzzzDD09
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='High/Low Temperature in each Season (2)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXwU9f0/8NfsmWzuiwRCEkI4AwHKoYBIEERQoOJFkVqpWLQij1Z/HK1H
      qda2tlrFotZbsUrFKqAoAsoh9yUkJuE+cpL72E3Y7DHX74982bImyLFJJpt9Pf+BTGZ33vPJ
      7Lx2PjPzGUFVVRVERBRQBEEQdFoXQURE2mAAEBEFKAYAEVGAYgAQEQUovwwAu90ORVG0LoOI
      yK/5ZQBUVVVBkiStyyAi8mt+GQBEROQ7BgARUYBiABBdBkVR4HK52PVInYpB6wKIOjq73Y4X
      X3wR2dnZCA0Nxbx583DttddqXRaRzxgARJewbds2OBwOrFixAlVVVWhoaAAAVFRUIDs7Gz17
      9kTv3r3hcDiQm5sLu92OjIwMxMbGwmazIScnB0FBQcjIyIDZbEZRURGOHDmCfv36ITU1FXV1
      dbBaraipqYHT6cTIkSNhMPCjSW2PXUBElxAbG4ujR4/im2++QUhICNLT01FZWYmFCxeipKQE
      zzzzDI4cOYLdu3djy5Yt2L9/Px599FE4nU4sXrwYe/bswaZNm5CXl4cTJ05gwYIFKCgowO9/
      /3vk5uYiOzsb8+fPx9dff42XXnoJ3377rdarTAGCAUB0CcOGDcPChQuxbds2/OpXv8KBAwdw
      6NAhREREYPDgwejTpw92796NESNGYMCAAQgPD4fVaoXVaoWiKDAajZg8eTIGDRqELVu24K67
      7sJDDz2EmTNnYvPmzVBVFddddx0ef/xxTJw4EbW1tVqvMgUIBgDRJYiiiJEjR+L555/Hz3/+
      c6xduxaKoqCurg7Hjx9HamoqhgwZgpdffhmlpaW47rrrEB4eDkEQ8Oyzz6JXr17417/+hS+/
      /BKyLHu6dwwGg+eGRp2u6aMoCIJm60mBhx2NRJfw2Wef4cCBA+jZsyf279+Pn/70pxgyZAje
      ffddOJ1OiKKIiooKnDt3DgaDAVu3bkVtbS0kScKrr76KjIwMhIeHw+VyITMzE3/6058giiI+
      //xzLFy4EDabTetVpAAl+OPzAAoKCtCtWzeYTCatS6EA4Ha7cejQIVRUVCAlJQWDBw+GIAgo
      LS1FVlYWLBYLrrnmGjQ2NmLHjh1IS0uDJEkYMGAACgsLkZeXh+joaIwZMwYGgwHHjh1DTk4O
      Bg4ciPT0dFRXV6Ourg59+vRBQUEBjEYjEhMTtV5t6uQEQRAYAEREAYgPhCEiCmAMAAIAyLKs
      dQmdjtvt1rqETkcURfhhp0WHxQAgAIDVatW6hE6nsLBQ6xI6nZKSEg7H0YoYAEREAYoBQEQU
      oBgAREQBigFwGVRVxapVq5CTk/Oj89XX18PhcLRTVf5NFEVs27bN8/OOHTtw5MgRz+927dqF
      hoYG7N69+6LvUVdXB1EU27xWf1NYWIhPPvkEK1euxK5duy7rNaqq4ptvvuHFAP+nrq4Oa9as
      wUcffYSNGzfC5XJpXVKbYABchpqaGrhcLuTl5XmuQHC73VBVFaqqwu12Q5ZlHDx4EGfOnIHD
      4YCiKJ6rQM7Pc/7fxsZGNDQ0QFEUNDQ0eEJDFEVIkoT6+no4nU7N1rc9GAwG5Ofnw+l0QlVV
      HD161BMApaWlsNvtCA4ORv/+/QE0tbfb7YbNZvO00/bt21FRUeF5D0mSYLPZPB9WWZYhSZLn
      tYHim2++wcSJE/HTn/4UcXFxAJraz+l0or6+3rOTP79NOhwOqKqKIUOGQKfTQZIkSJLktW2e
      n7+hoQFOp7PTP5N7w4YNuOaaa3DbbbehT58+nu3r/HqLoghFUTzbV319PdxuN1wul6eNf/h5
      l2XZ06bn9yNOpxM2m83rb6IoChobG9uljTkUxGU4evQohg8fjuzsbNhsNkRGRuKrr77CtGnT
      oKoq1q1bh3HjxuHIkSMoKirC2bNnMXLkSOzYsQNTpkyB2+3Gxo0bcdNNN+Hdd99Fly5dUF1d
      jaCgIERERKC8vByzZ8/G3r17UVRUhIiICFRWVmL27NkICgrSevXbhCAISE5ORnFxMaKjo9G9
      e3fPzv3UqVPo3bs3nE4n9u3bh8mTJ2PlypUwGo0wGo2QZRmjR4/G6dOn4XQ6kZCQgNGjR+PT
      Tz9FWFgYampqcPvtt6OiogL5+fkoLCzEqFGjMGDAAK1Xu10oioLq6mqkpqaiT58+AID169fj
      3LlzCAoKgiiKmDFjBjZs2ICoqCicOXMGt99+O7Zt24Y777wTBw4cwOHDhxETE4OysjLMnj0b
      drsdX375JWJjY1FRUYHbbrsNsbGxGq9p2zGZTDh79iy6dOmCHj16QBAE7Nu3D926dUNSUhJ2
      7tyJjIwMnD59Grm5uYiOjkZRURG6du0KURSRmJiIzMxMLFu2DKmpqaisrERwcDAiIiJQXFyM
      hx9+GNXV1di4cSOioqIgiiJuu+02rF+/HmazGXV1dbjtttva/PPPALgMhYWFGDFiBJxOJ44e
      PYpRo0ahsbHR83uHw4GoqCgMGTIECQkJSEtLg8Ph8Hx7UlXV8y01Li4Od955J06ePImKigqM
      GTMGGzZsQENDA1wuF6ZMmYK4uDisW7fO84HtrHr37o28vDzExMQgLS0NxcXFqKqqwtmzZ5GZ
      mQmHw+E5EhIEATNnzoQgCPjwww/RtWtX9OvXD9dccw1iY2Nx7NgxpKSkYPTo0Th+/DhycnIQ
      ExODI0eO4P7770doaKjGa9t+ZsyYga1bt+Kbb77BmDFjkJGRAUmSMH36dISEhGDdunUoLy+H
      zWaDxWLBL37xC+h0Os827Xa7MXHiRKSkpGDTpk2wWq3YtWsXpk+fjujoaGzYsKHTHwFMnToV
      27dvx1tvvYX09HSMHTvWc6QPAC6XC4qiQBRFTJgwAampqfjoo48wffp0uN1ubNq0CQCQkJCA
      22+/HceOHYPNZsPIkSPx6aefwuVyYf/+/Zg8eTLi4uKwZs0a2Gw2nD17Fj/5yU8wadKkdhkY
      kAFwCbW1tSgpKcHq1ashSRJcLhdGjRp11e93/o8qCILn/+dHgrzw/3q93oeq/UOXLl1QVVUF
      u92OKVOmwGg04siRIzCZTM0eiHKx9jrv3Llz+P7771FeXg5FUdCvXz8AwOjRowNq5w8AkZGR
      nh3Re++9hz59+ni1n8VigSiKMJlMGDt2bIvt+cO2FkURYWFh7bcSGjObzZg4cSLGjx+PNWvW
      oLi4+JKvuVg7CoIAnU7n9dkHAJvNhs2bN8NsNnu6l2JiYjBs2LB2GxWWAXAJubm5mD59Ovr2
      7QtVVfHRRx+hvr4eLpcLNTU1sNlssNvtAJo+WMXFxYiNjYXJZEJ9fT2sViuKiop480oLTCaT
      5+jIbDYjPj4e69atQ3p6+mW/vqSkBCaTCd27d8fx48cxbtw4T//phUdpgUJVVXz77bcYMGAA
      FEWBTqeDXq/3DF9ts9lw5syZK/4S07NnT3z11VdIS0vDqVOnMHTo0DZaA+2pqoo9e/YgJSUF
      QUFBcLvdMJvNMBgMKC8vR2hoKIqLi31ug5SUFADAoEGDUFpaqsnYZvqnnnrqqXZfqo+sVivC
      wsLa/Fuyqqqw2Wzo27cv9Ho9BEFAREQEBEFAbGwsvvvuOyiKgpSUFHTr1g0xMTE4efIkysvL
      kZqaCkEQkJWVhaCgICQlJaFLly7Q6/WeE3Pn+wQBICoqCiaTCdHR0TAajQDg9f+25nA4YLFY
      2mVZ5wmCAIvFgvj4eHTp0gVGoxGSJCE9PR0hISEAmk4Wn+9rjo+P97w2Pj4ecXFxyMnJQX19
      Pfr37w+j0Yjc3FzYbDakpaXBbDYjJCREs2+utbW1iImJafflNjY24vDhwygvL8f111+PyMhI
      5OXloaqqClVVVRg7diwiIyMBNB2FXfjNNSEhAUDTUcT57sfIyEj07NkTBoMBLpcLTqcTPXv2
      bPftBWj67IeHh7f5Z18QBOTk5KC4uBgDBw5ESkoKoqKikJOTg/LyciQnJyMpKQkmkwkREREI
      Dg4GAM9n/MLP+fnt1mKxIDw8HAAQFxeH7t27o6ysDMePH4der0dycjJ0Ol2zv0lbefrpp5/m
      aKAEoOlKJy12Vp3ZyZMn0bt3b63LAACsWbMGkyZNuuqddnZ2NqqqqqDX61FSUoJZs2Zp8tzi
      /Px8dO/evd2+GHVmgiAI7AIiCgBjx46F2Wy+6tcPGjQIlZWVkGUZY8eO5UPrOwn+FYkCgK9H
      dzqdztM9RJ1HiwHQ0NCA8vLy9q7lsp2/geqHXNuegyppdAOVoEPQ+Ccva1a5LBvikbVtXNDF
      GVJGw9DrRq9pFRUVzearqXfgv1sOt1dZzSTGheGn1/W9rHm3ZhXgWGF1G1d0cbeM7I2UhAjP
      z7IsQ5Zl1NTUeM3nllz44Lt327s8j4igSNw55O7LmvdQyQFklXzXxhVd3HWpY9Ev3vvejcbG
      RtTX13tNkxvPwFm5rj1L82IMGwBTzPjLmtdZvhqy82wbV3RxwYk/h84Y7fm5xQAICwvr0Jd8
      Xay/uqF8B+Cqb+EV7UDQIyxm6WXNKpbXw3l2cxsXdHHGrskI+kH7tXTCskG04sDpuvYszYtL
      NV72N9dS6ylNa510ndmrVlEU0djY2Kx+u+scsmu026kmhHW77Da1FtdqWuvQXsOb1drSdurW
      ncC5sn3tWZoXszESIZfZpvWVJyHJuW1c0cVFRMyBPvh/tXIoCCKiANXhzgFIkoSCggKEhIQg
      ISGh3W6IIGoPBr0R43vfpNnyI4IjNVs2dTwdKgBUVcXq1asRHR2N8vJyZGRkYPDgwVqXRdRq
      zAYzfjVqntZlEAHoYF1AtbW1EAQBEyZMwMyZMz03WhERUevrUAFw7tw5xMTEQBAEGAwGmM1m
      jk9ORNRGOlQA6HQ6r2/8fniTMhGR3+hQARAeHo6KigrPQF6yLPOOQwpIjY2N+Oabb5Cdnd3s
      i5CiKDh8+DC+/PLLZvcZ2O12HDx4kIMP0mXpcAEQFxeHFStWYPny5Rg3bhyvAqKAoygKFi1a
      hDNnzuCdd97B2rXeNw2uXbsW77zzDux2O+bNmwer1Qqg6Yj5H//4BxYuXOgZoZbox3Sor9eC
      IGDixIlobGyEyWTigE8UkM6cOYPQ0FA8+OCDcLvdmDNnDqZOneoZAfPzzz/Hm2++CaPRCFEU
      sXnzZtxxxx04dOgQJElCRkaGxmtA/qJDHQEATSEQEhLCnT8FrOrqas9Y8UajERaLxatLJzEx
      EV9//TWqq6uhKAoKCgpgt9uxbNky/O53v+NRM122DhcARIGosbERDz/8MBYtWgS32+21w1dV
      1WunvmjRIuTl5eHFF1/E999/j9DQULz22mvo27cvjhw5gvLycuTm5vI8AF1Sh+oCIgpUwcHB
      WLZsGQRBQEVFBT766CPPYHKqqsJgMKCxsRFBQUEIDQ3F4sWLoaoq/vSnP2H48OGoq6tDaWkp
      jh07hrq6OhQWFuLaa6/VerWog2MAEHUAgiB4+vgTEhLQu3dvPPTQQ6ipqcGSJUug0+nw+OOP
      4//9v/+HoqIi/Pe//4Usy+jWrRsGDx7sdbVcXl4epk2bxm5UuiQGAFEHIwgCHn30UVitVgQH
      B3sezfjSSy8BAJKSkpCeng6dTud5ROmFnnvuuXavmfwTA4CoAxIEAVFRURf9XXR0dIu/I7oS
      PAlMRBSgGABERAGKAUBEFKB4DoCI/JrOFAdT7ETNlm8ITdds2b5iABCRXzOE9EJoz/+ndRl+
      iV1AREQBigFARBSgGABERAGK5wCIqNNTFAVnzpyB0+kEAHTr1q3Fm+lKSkqgqiqSkpI806qq
      qmC1WtG7d+92q7e98AiAiDo9u92OBQsWYPPmzdi8eTOKi4ubzWO1WvHAAw/gtdde80wTRRGP
      Pvoonn766fYst93wCICIOr36+nqkp6fjt7/97UXnWbp0KebMmYPc3FzPtHfffReTJ0/Gvn37
      2qPMdscjACLq9CorK3H48GEsWrQIy5Yta/bIzF27dsFkMmH48OGeaQUFBcjLy8OUKVPau9x2
      wwAgok4pJycHDz/8MJYuXYpBgwbh3//+N373u9/BYrHgzTff9Mzndrvxl7/8Bddffz2OHj2K
      8vJyFBcX4/HHH8fkyZNx9OhRVFVVIT8/X8O1aRvsAiKiTikjI8PzkB2bzYaQkBCYTCaMHDkS
      K1euhKqqcLlckCQJt99+O06cOIGamhqUlpaipKQEkyZNQllZGfLz81FZWYlTp04hNTVV69Vq
      VQwAIuqULnzITnZ2Nt566y1069YNp0+fxp///GfU19fjN7/5Dd5//3386le/AgAUFRXB5XJh
      1KhRGDVqFACgoaEBp06dwsSJ2g030VYYAETU6d1www0YN24campqEBUV5QmG999/32u+5ORk
      LFmyxGtaWFiY52E8nQ0DgIgCgiAIiI2N1bqMDoUngYmIApSmAaCqKsrLy9HQ0OCZ5nQ6kZ2d
      jVOnTkFVVQ2rIyLq3DQLALfbjc8//xwffPABCgsLATTdrr169Wo4nU7k5OTgwIEDWpVHRNTp
      aXoOYNSoUejevbvn59raWpjNZowcORKyLGP58uUYPnw4dDr2VBERtTbNAsBkMiE+Pt5rTI5z
      584hKioKAKDX62E2myFJEoxGI9xut2c+URTR2NjY/E017jJqsaYWqG6xjSv5cZIoNatVluVm
      01z/N3CWVmRFuew2lWSpjav5cW6X26tWSZIgSc3b2Z+IorbbqVt0X9Z26k8URdZ0+U6nE4L6
      v/Zr1wCora3Fxo0bERYWhsmTJ8Ng8F68wWCALP+vgVRVhSAIAJoC4zyj0QiLxdLs/Rv+b16t
      tFRTS0STEVruWg1GA4J+UKter29WvznIDS3pdbrLblODXtsL2kxmk1etoijCYDBcdv0dkdFo
      1HT5JqOpWfu1tJ36E0mnh6Lh8oOCgqAP/l/7teunJioqCjNnzgQAz479QhERESgrK4Msy7Db
      7VBVFQaDocV5iYjIN+0aABfuyKurq7F582bU1tZCp9OhsLAQkyZNQo8ePbBixQo4HA5MnTqV
      O38iojai2XFzbGwsfvaznzWbfv3112PEiBEwGo3NuoiIiKj1dLg9rCAICA4O1roMIqJOj9dX
      EhEFKAYAEVGAYgAQEQUoBgARUYBiABARBSgGABFRgGIAEBEFKAYAEVGAYgAQEQUoBgARUYBi
      ABARBSgGABFRgGIAEBEFKAYAEVGAYgAQEQUoBgARUYBiABARBSgGABFRgGIAEBEFKAYAEVGA
      YgAQEQUoBgARUYAyaF0AdVzBJgMGp8VrtvzUblGaLZsoEDAA6KLio0Pxp/tv0LoMImoj7AIi
      IgpQDAAiogDFACAiClA8B0BXze12w263IyoqCpIkobq6Gqqqen4fHx8Pnc77O4YkSSgvL0fX
      rl2h1+sBAFarFcHBwTCbze1aP1Gg4xEAXTFFUfDFF19g+vTpeO+99wAA586dw7vvvovXX38d
      r7/+Om6++WbYbLZmr33//fcxY8YM1NbWwuVyYenSpbjhhhtw9OjR9l4NooCn6RGAoiiw2+3Q
      6XSwWCwQBAGqqqKhoQFGoxFBQUEQBEHLEqkFiqJAEAQ89dRT2LZtGwAgMjISjz/+OADg2LFj
      aGhoQGRkpNfrCgsLkZWVhWuvvRaqqsLpdKJ///645557vI4ciKh9aHYEYLfbsXLlSmzYsAEr
      V65EdnY2VFXFtm3bsG7dOvznP/9BSUmJVuXRjzAYDJg6dSrCwsKa/U5RFLz88suYP3++V3jL
      soy///3vWLx4MQyGpu8dERERmDx5MoxGY7vVTkT/o9kRgKqqmDBhAuLj4yGKIj788EOkpaWh
      uLgYP//5z9HY2IhPP/0Us2fP5lFAByBJEhYsWACj0Ygnn3yy2bf78/Lz8wEAqampXtM/++wz
      pKSkwGKxwOFwwGq1IjY2ttk5AiJqP5oFQGhoKEJDQyHLMtatW4f+/fvDZrMhISEBOp0OoaGh
      MBgMkCQJBoMBsix7XitJEhwOR/M31bgbocWaWqC4xTau5MdJYvP2k2X5R+tXVRV//vOfAQB6
      vR4OhwNOpxOiKHpep6oqli1bhvvuuw9Op9Pr9Xa7HVarFS+88AK+++47LF++HAsXLkRwcDBE
      UYTL5brs9mtxnWTpql/bGtxut1f9oihefDv1E6Ko7XZ64bZ13qW2045OUeRLz9SGnE4ndPhf
      +7VrANhsNuzcuRMhISG4/vrrYbPZsGrVKgwfPhxDhgxBUVGR58qQ81rqG9br9QgKCmo2/ZzG
      Rwot1dQS0WSEq41r+TEGgwHmH9R6sTZtSUNDA15//XWcPXsWR48ehSAImD9/Pqqrq+FyuTBs
      2DDPvI899hh+/etf4xe/+IVn2uLFi/HII4+goqICq1atwt69e3H69GkMHToU999//1Wtk16v
      7QVtJpPJq/30ev0VtWlHZDRo2zV3/jzghfy9TUWdHoqGyzebzdBf0H7t+qkJDQ3FddddB71e
      D1EU8emnn2LKlClITEz0/L62thZA07d8t9sNg8EAQRA8/cYAIAhCh+wWutyaNK9caLnWy60/
      JCQE9913nyecBUGAxWJBYmIiXnzxRa/3eeyxxxASEuI17Y9//CMsFgsiIiLwwAMP4IEHHgDQ
      9IG/2r+r5m0K7/Y7v412xO30snWA0n3ZTqm5H26T7RoAer3e03d88uRJOJ1O5OfnIz8/HxER
      ERgwYABkWcb27dtRUVGBwYMHs4+4A9Lr9YiLi2txuslk8poWERHRbL7Q0FAATd9GunTp0jZF
      EtElaXbcnJiYiGnTpnl+Pn/J5/Tp03Hq1CkkJSWhR48eWpVHRNTpaRYAFoul2ZUiQNO3wgED
      BmhQERFRYGH/ChFRgGIAEBEFqE41GJw+Jg2q+5w2Cxf0l56HiKgD6VQBYPnZB1qXQETkN9gF
      REQUoBgAREQBigFARBSgAiIAVFVFfX09CgsLvQa4stvtKCwsbDZwGdA0uFdhYSEqKio8Qx7I
      sozi4mJUVVVx/Hoi8nud6iTwxbzxxhvIyspCWFgYqqur8fbbb+PLL7/E2rVrERcXh4KCArz+
      +uuIiooCANTX1+P3v/894uLiUFtbi7S0NPz617/G7373O4SFhaGurg5Dhw7FnDlzOC4JEfmt
      gAiAUaNGYe7cudDpdFiwYAHKy8vRq1cvvP766zCZTHjttdeQlZWF8ePHA2ga7Gzp0qUwm80Q
      RRH33nsvpkyZAqPRiD//+c+QJAn33nsvZs+e7TVIHRGRPwmIvdfgwYM9TxsrKytD165d0b17
      d6iqitzcXGzatAkzZ870zK/X61FXV4eNGzdi06ZNmD59OpKTk6HT6fD888+juroakydP5s6f
      iPxap9yDqaqKN998E/n5+Zg9ezZ69erl2XG//fbb0Ov1UFUV77zzDnbv3o3XXnvN0/1zXmNj
      I8rKyjznDxobG2G323HdddchMjISZ8+ehaIoHK2UiPxWpwwAAPj5z38OSZIQEhKCf/3rXwgJ
      CcHvf/97zw57zZo1OHXqlKcb6IeSk5Px4IMPQlEUzJ07F926dUOvXr1w6623QlVVzJkzB42N
      jZ6hjYmI/E2nDABBELx2zGvWrMHNN9+MV155BUBTOHz88cfo378/Xn/9dQDAlClTkJWVhZiY
      GHTr1g2vvfYahg8fjtraWgQFBWHo0KH48MMP8d5776G6uhoxMTEIDg7WZP2IiFpDpwyAH3rj
      jTe8Lv+0WCz429/+Brvd7pkWGxuLzMxMGI1GhIeH45FHHsHp06fRp08fzJ07F8HBwfjXv/6F
      nJwcZGRkYNCgQc0eX0lE5E8CIgD69u3bbFpLzyK4UI8ePZo9kCYqKgqZmZmtWRoRkWZ4BpOI
      KEAxAIiIAhQDgIgoQDEAiIgCFAOAiChAMQCIiAIUA4CIKEAxAIiIAhQDgIgoQDEAiIgCFAOA
      iChAMQCIiAIUA4CIKEBpNhpoQ0MDNm7cCKfTCZ1Oh/HjxyMhIQHHjh3Dvn37YDQaMXXqVISH
      h2tVIhFRp6bZEYDBYEBmZiZmzpyJG264AVu3boXD4cDu3btx11134frrr8eGDRugqqpWJRIR
      dWqaHQEEBwfDYDCgsbEROTk5SE1NRV1dHbp27QqLxQKLxYItW7ZAluVmD15RFAVut1ujyn0n
      S7Kmy1fk5u3n922qKJouX5Ikr/YTRRGyLPt3m8rabqeSLHW67VTVeDsVRRGy/n/t164B4HQ6
      UVRUBKPRiJSUFJw4cQI7duyA0+nE7NmzYbVaERQU5Jlfr9dDURTo9XqvP7qqqn79MHZFJ2i6
      fEEQmrVfS9P8iSBo26Y6QefVfnq9nm3qox+2KeD/2ym0blOdd5u2awDIsgybzeZ5lu6AAQMw
      YMAAWK1WrF69GrfccgsaGhoANO3k3W6354NkNps976PX62Ew+O/DzFSdDuKlZ2szgk5o1n6C
      0HyaP9Fp/cHS67za7/yXFL9uU413tC21n79vp1qHql6vh/6C9mvXlgwJCcGIESMAAGfOnIHD
      4UDXrl1RWVkJk8mE2NhYVFdXo7CwEKWlpejevbvmGyERUWel2d41Pj4edXV12L17N8rKynDb
      bbfBYDDg1ltvRV5eHlwuF8aPH695YhIRdVaaHUuFhIRgzJgxzabHxMRgypQpGlRERBRY2L9C
      RBSgGABERAHqiruAVFWFw+H40Ru0BEGAxWLxqTAiImpbVxwA9fX1eOyxxxAbG3vReaqqqvDa
      a6/5VBgREbWtqzoCGDZsGO6///6LzvPCCy/4VBQREbW9Kz4HEBoaiqlTpwIA3G43XC4XJEnC
      kSNHYLVaAQAzZ85s3SqJiKjVXfERgMFgQHx8PADg448/Rnp6OoqLi7Fz507odDr85S9/QWJi
      YqsXSkRErcunq4DOnj2L7t27Y9euXXjiiScQERGB+vr61qqNiIjakE8B8JOf/ARPPvmkZ2RP
      m83G8fuJiPyET3cCT5w4EUOGDEFERAR0Oh0WLFgAo9HYWrUREVEb8ikANm/ejL5GjJgAACAA
      SURBVN27d3t+Dg8Px/z58xkCRER+wKcAGDx4MJKSkgAAjY2NWLVqFUfvJCLyEz4FQFxcHOLi
      4jw/f/DBB7DZbIiOjva5MCIials+BcAnn3yCDRs2AGh62EtUVBRCQkJapTAiImpbPgXA9OnT
      vYZuNplM7P8nIvITVxUABQUFOHXqFEJDQ5GTk+OZHhoaihkzZvj1I9uIiALFVe2pLRYL4uLi
      EBISgl69enmmm81mPsGLiMhPXFUAdOnSBV26dEF9fT1iY2NhNpuxdetWpKWlQa/Xt3aNRETU
      Bny6ZnPFihUoKirCxx9/jOPHj+Oll16Cy+VqrdqIiKgN+RQADQ0NiI6ORnZ2Nu6//35ER0fD
      bre3Vm1ERNSGfAqAcePG4Y9//CPS0tIAAIqiICIiolUKIyKituXT5TojRoxAeno6goODoaoq
      FixYwHMARER+4qoCYMeOHVi/fn2z6ZGRkXj00Ud5LwARkR+4qgDIyMhAt27dmr+ZwcAjACIi
      P3FV5wAiIyORlpaGlJQUnDx5EuvWrUN4eDhOnz7NweCIiPyEz5eBFhcXo66uDgaDAZs2bYLD
      4Wit2oiIqA35FACnT5/GHXfcgbi4OCiKApfLBbfb3Vq1ERFRG/LpKqBp06bhmWeegdVqRX5+
      Prp27cpHQhIR+YmrCgBVVaEoCoYPH46UlBQUFBQgJCQEvXv35lhARER+4qq6gGpra7F06VIA
      TeMCXXPNNejevTtefPFFyLLcqgUSEVHbuKoAKCsrgyRJXt/2w8PDUVpaivr6+it6L5fLhW+/
      /RaSJAEAbDYbvv76a+zZsweKolxNeUREdBmuKgBiY2Nx8uRJlJeXA2jqEsrNzYUoiggNDb3s
      91FVFV9//TX27dsHSZIgSRJWr16NtLQ0iKKIrVu3Xk15RER0Ga7qHEB8fDzuvPNOLF68GHFx
      cRBFEXa7HY888sgV3QWcn58PQRCQnJwMAKipqUF0dDTS0tKQmpqK5cuXQ5blFm8u8+ejA0VV
      tS3g/87heE9qPs2fqNC2TX/Yfoqi+H+barydttR+bFPfKIoC4YL2u+IAkGUZDQ0NmDx5MkaP
      Ho3S0lLo9XokJSUhODgYQNOOPCYmpsWFu91uCIIAVVWxc+dO3HXXXfjss88AAI2NjZ6riHQ6
      HUwmE2RZhiAIXpeXiqLo15ebKpK250lkWWnWfuf/Nv5KkbXdKUiS5NV+kiT5fZtqfT5PlqVO
      t51qHQCiKELW/6/9rjgAGhoasGrVKtx///2IiIhocfTP5cuXY8GCBc2m22w2bNmyBWFhYZ5v
      SAcPHkRZWRn279+P5ORkzx/3fNLrdDrodDoEBQV53sdoNHr97G9EowFafrT0Bn2z9tPrm0/z
      J1oPQfLDbVIURb9vU60f7WowNP+c+3ubunU6aPlVxWw2Q39B+13VX3j//v0oLS296O8LCwtb
      nB4VFYU77rgDQNOVROefHXD06FEkJSUhNjYWW7ZsgSiKnruLtf5gExF1VlccAOHh4Xj++ed/
      tB/ucsYDio6ORnR0NAAgNTUViYmJMBqNGD58OFasWAFVVTF9+nTeV0BE1EauOAB0Ol2r3+17
      4403ev6fkZGB9PR0T9cPERG1DZ87+VRVhSRJnq4aX3fagiBo3vdIRBQIfNpb19bW4i9/+Qvm
      zZuH8vJyvPnmm5qf5SYiosvjUwC8/fbbmDx5MoYMGQKLxYKzZ8+ioaGhtWojIqI25FMAyLKM
      8PBwCIKA+vp61NTU8KodIiI/4VNn+y9/+Uu8+OKLKCkpwaFDh3DbbbfBYrG0Vm1ERNSGfAqA
      yspK/OY3v0FYWBiMRiMsFgsv2yQi8hM+dQEVFhZizZo1CA8PR0hICHf+RER+xKcjgMTERKxZ
      swZLly5FQkICQkJCMHXqVF7GSUTkB3zaU1ssFtx5552en4ODg3kUQETkJ3wKgMjISM9QzkDT
      gFgMACIi/+BTABw5cgT79+8HADgcDlRXV+Of//wnh3AgIvIDPgXAhAkTMGHCBABN9wQ89thj
      kCTpih4KQ0RE2vApAPLy8nDq1CkATQ/AKC8vh8vl8jwYhoiIOi6fAkAURTgcDgBNg7g98sgj
      iIyMbJXCiIiobfkUAA6HAxMnTkRsbCwAYMOGDXC5XDCbza1SHBERtZ2rOlurqirsdjv27t2L
      kpISzzhA69at8xwREBFRx3bVRwAvvvgi9u3bh6ysLM8QENdee22rPyyGiIjaxlUFgCAI+MMf
      /oBNmzZh4MCBSEhIaO26iIiojfl0DmDkyJH4/PPPUVtbC0EQEBoainvuuYdDQRAR+QGf7tj6
      8MMP4XQ6UVhYiL59+6KwsJA3gRER+Qmf9tZWqxU333wzEhISkJmZCVVVYbPZWqs2IiJqQz71
      1QwaNAglJSXo3r07nnrqKdhsNgQFBbVWbURE1IZ8CoARI0YgODgYQ4cOxbXXXouoqCjeBUxE
      5Cd86gJau3Yt1q5dC71ej9TUVN4FTETkR3w6Ahg/fjxeeOEFxMbGIiEhAUajEX379uWJYCIi
      P+BTAOTn5yMxMREHDx6EIAgIDw9Hr169GABERH7ApwC44YYbkJGRgdLSUvTu3Rs2m41DQRMR
      +Qmfvqrv2bMHf/3rX/Hyyy+joaEBr7zyCiRJaq3aiIioDfkUAOvXr8eSJUswdOhQzwigDQ0N
      rVIYERG1LZ8CoF+/fvjvf/+LqqoqfPPNN6ivr0dYWFhr1UZERG3IpwCYOXMmkpOTYTabUV1d
      jSeffPKKxgE6d+4crFYrrFYrnE4nAEBRFJSWlsJqtUJVVV/KIyKiH+HTSWBVVWEymRAZGYn4
      +HiEhoZe9msVRcGHH36IxMREAEBaWhr69++PL774AoIgoKamBqNGjUK/fv18KZGIiC7CpyOA
      jz76CN9++y369OmD8vJy/O1vf4OiKJf1WofDgaioKEybNg3Tpk1Deno6rFYrHA4Hpk2bhlmz
      ZmH37t2X/X5ERHRlfDoCKC0txa9+9SukpKRg3LhxePzxx2G32y/rPIDL5UJFRQW+/PJLREdH
      Y9iwYWhoaEBcXBwEQYDZbIbJZIIsyxAEwevqIkmS0NjY6EvpmlLdoqbLl8Tm7SfLsl+3qSRr
      e/WZ2+X2aj9Jkvx+OxVFbbdTt+judNuposiaLt/pdEJQ/9d+PgVAWloa3n//faSlpQEAiouL
      8dlnn6F3794YOXJks/lra2vx9ddfIywsDDfddBPuvfdeyLKM48ePY/369Rg6dOhFl3XhzWV6
      vR4Wi8WX0jUlmoxwarh8g9GAoB+0n7+3qUGv7TMoTGaTV/uJogiDweDXbar1PT0mo6lZ+/n7
      dirp9NCyTyMoKAj64P+1n0+fmgEDBngN/jZr1iwAuOiAcFFRUbjrrrsgCAIURUFERAQEQcCI
      ESPwwQcfICwsDFVVVQAAt9sNt9sNvV4PQRCg1+s97yMIgi9lExERfAyAHj16oLGxEbLcdFhj
      MpkwaNCgiw4FceGOvLCwEFu3bkVCQgLOnj2LkSNHIjIyEiEhIVi1ahVqa2uRmZnJYSWIiNqI
      TwHw+uuvo7y8HF26dAEAhIeHY+DAgZe10+7RowdmzZoFm82GzMxMz4Plb7nlFtTU1CAoKIj3
      FBARtSGfAsBgMGD27NlIT0+/4tcKgoCgoKBmD5DR6/WeQCEiorbjUwAMHjwYL7/8MlJSUgA0
      HQHMnTtX85NHRER0aT4FwNatWzF58mSkpqYCaLpq4MKTtURE1HH5FADp6emIj4/HoEGDWqse
      IiJqJz4FgCRJeOWVV/DGG28AAGJiYvDXv/4VJpOpVYojIqK241MA3HXXXZg+fTrsdjssFgsU
      RWH/PxGRn/DpIvuysjIsWbIECxYsgNVqxWuvvcYRPImI/IRPAfD+++/jwQcfxLXXXguLxYL6
      +no+EIaIyE/4FADBwcGecfsrKytRVVXF/n8iIj/h0zmAuXPn4qWXXsKJEyeQk5OD++6776Lj
      ABERUcdyVQFgs9mQnZ2NzMxM/OEPf4AoitDpdLwHgIjIj1xVF5DVasXmzZsBNA3pYDKZYDAY
      OEonEZEfueouoOzsbCxevNhrWmRkJBYtWsRLQYmI/MBVB0DPnj0xZ84cr2kcCoKIyH9cVQDo
      dDp07dqVD2wnIvJjV3UOoHv37li4cGFr10JERO3oqgLgh49oJCIi/8PnLRIRBSgGABFRgGIA
      EBEFKAYAEVGAYgAQEQUoBgARUYBiABARBSgGABFRgGIAEBEFKAYAEVGAYgAQEQUoBgARUYBi
      ABARBSifHgrvK1VVvX4WBKHFaURE1Po0DYATJ05gz5490Ol0GDJkCAYNGoTvv/8ehw4dAgBM
      nz4d0dHRWpZIRNRpaRYAdrsde/fuxd133w2j0QhFUdDY2IisrCzcc889sFqtWL9+PWbNmsWj
      ACKiNqBZAJSVlSEmJgZHjx6FwWBAnz59UFdXh27dusFkMqFLly6QZRmyLEOv13t1DSmKApfL
      pVXpPpMlSePly83az+/bVJE1Xb4oSl7tJ4oiZLl5O/sTrbdTSZI63XaqKIqmy3e73dDp/td+
      7RoAjY2NOHbsGMxmM1wuFyoqKpCSkoKKigqcOHECP/nJT2AymTzz63Q6KIoCvV4P6YKNUVVV
      GAya9l75RqeHlrsrnU7XrP0EQfDrNtUJ2l7PoNfrvdpPVdUW29mf6HTaPvVPr+9826nWvRkG
      gwG6C9qvXVtSp9PBYrHAZDIhODgYycnJyMjIgKqqeP/992E2m2Gz2QA0fYDcbjf0ej0EQfAK
      Br1e79ePpFR02m4Egq75Iz39/TGfWn+wdD9oU0VR/L9Ntd5OBR2301am03m3absGQFBQEPr1
      6weg6VBk8+bNOH36NJxOJywWC+Lj41FbW4sTJ06gpKQEqampfv3HJiLqyDQ7bjaZTJg5cyYK
      CgpQU1OD6dOnQ6/XY8aMGSguLkZoaCgyMzO1Ko+IqNPTtDMtLCwMEyZM8JoWGhrabBoREbU+
      3glMRBSgGABERAGKAUBEFKAYAEREAYoBQEQUoBgAREQBigFARBSgGABERAGKAUBEFKAYAERE
      AYoBQEQUoBgAREQBigFARBSgGABERAGKAUBEFKAYAEREAYoBQEQUoBgAREQBigFARBSgGABE
      RAGKAUBEFKAYAEREAYoBQEQUoBgAREQBigFARBSgGABERAGKAUBEFKAYAEREAYoBQEQUoAxa
      LbioqAi5ubkAAFVVERERgTFjxqCiogLbt29HSEgIJk6cCJPJpFWJRESdmmZHAPHx8Rg1ahRG
      jRqFxMRE1NbWQpIkfPHFF7jxxhuRnJyMDRs2aFUeEVGnp9kRgNlshtlshqqq+OKLLzB9+nRU
      V1eja9euiI6ORlRUFL777jvIsgy9Xu/1WlVVIUmSRpX7TlYUTZevKs3bz9/bVFG1bVNFVrza
      T5IkKIri322q8XbaUvv5+3aqqqqmy5dkCeoF7deuASBJEurq6qDX6xEVFQVBEHD27FmEhoYi
      PDwctbW1CAkJAQAIggCj0QhZliEIAtxut+d9ZFnWfOP0hapouxGoqtqs/Vqa5k80/lxB+UH7
      qarq9206pf903NTnFs2WbzaYO912qvWGqire7deuAdDY2IisrCyEhIRg5MiREAQB27Ztw+TJ
      kyEIAoKCguBwOJoK/b+k1+l00Ol0CAoK8ryP3W7363MDokEPLb/D6PS6Zu2n0zWf5k/0Om2v
      ZzAY9F7tJwgC9Hq9X7epCR2vdn/fTp0ab6dGoxH6C9qvXQMgPDwcN910k+fnsrIyGI1GxMTE
      AACio6NRVlYGm82GqqoqhIeHN+v+ISKi1qHZOQAAqKqqQmZmpudns9mM8ePHY926dTCZTLjl
      llsgCIKGFRIRdV6aBsCgQYOaTUtNTUVqaqoG1RARBRZNA4CI/I+qqvjss8+wbt06CIKAhx9+
      GH379sVzzz2HkpISREVF4amnnoLFYvG85tixY3jxxRchiiJuvvlmzJgxA6Io4oUXXsDp06dh
      sVjw9NNPIzIyUsM1CzwMACK6IqdPn8bmzZvxyiuveLpoP//8c/Ts2RNPPPEEPv74Y6xYsQJz
      584F0HQ553PPPYe///3vCA0Nxfz58zF69Gjs2rULMTExWLhwIVwul9eFHtQ+OBQEEV2RHTt2
      YOTIkdiyZQtyc3NhMBhQWVmJ5ORkGAwG3Hbbbdi3b59nflmWIUkSoqKiEBwcjDFjxuDo0aPY
      tGkThg0bhvXr16O8vBw6ja+QCUQ8AiCiSyorK0N2djZiY2NRWVmJoqIijB8/HitWrEBOTg6m
      Tp2KRYsWYdu2baiqqoLNZvO81mAw4MYbb8QDDzyA5ORk7Ny5E/Pnz0dFRQW2bt2K1NRUPPbY
      Y3jyySdbPC9IbYcBQESXJMsy3G43JElCQkICBg8ejMmTJ2PKlCl4+OGHMWfOHHzwwQeoqKiA
      KIp46623PK8VBAG/+MUvMGXKFLjdblgsFiQnJ6Nr166YO3cuwsPDERsbiz179jAA2hmPuYjo
      krp3745bb70Vo0aNwsSJE/Hee+/h2LFj+OSTTzBw4EDU19cjOzsboiji2WefxT333IOGhgas
      WrUKAHD48GHU1tbi5MmTOHr0KAYOHIjbb78dTz/9NPLz87F27VoMHjxY47UMPDwCIKIr0rVr
      VyxZsgSffvopunXrhnnz5kGSJBw8eBC1tbV44IEHMHDgQK879gVBwMqVKxEREYHnn38eJpMJ
      EydOBAB88MEHmDhxIq655hotV6tdBMXfCiV6jGbLF4xRXj8zAIjoigiCgAEDBmDAgAGeaWaz
      GQ8//LDXfKGhoZg2bRoANJsfaBrWYdKkSZg0aVLbF91BmKKv07oEL+wCIiIKUAwAIqIAxQAg
      IgpQPAdARKQhRVGwYcMGVFVVeaaNGTMGqamp2L59Ow4cOIA+ffrglltugdFo9MxTVlaG//73
      vwgODsasWbNgNBqxcuVKz+8NBgOmTZuG8PDwiy6bRwBERBoSBAFJSUno1asXevXqhfXr16O6
      uhpr167Fd999h4kTJ+K7777DF1984XmNLMtYtGgRRo8ejdjYWCxZsgQGg8HzHklJSXjvvfcu
      OZoyjwCIiDQkCAIyMjIANH2rDw0NxbBhwyDLsuexuceOHUNDQ4PnNVVVVYiPj8eIESMwbNgw
      fPHFF3C5XLjuuqarjNavX49p06YhLCzsR5fNIwAiIg24XC7Y7Xavx90uX74c99xzDwwGA8xm
      MyRJwttvv43t27fj9ttv98wXExODgoICbNu2DXv27EFlZSVqamoAND169+OPP8asWbMuWQMD
      gIhIA19++SWWLFmCHTt2AACsVisOHz7s+RYvSRJ++9vfwul0YtmyZV7f5o1GI5YtW4YjR47g
      9OnTCA4ORlRU001e27dvR//+/REXF3fJGtgFRESkgTvuuAN33HEHgKZnLLz11lv45S9/6TnR
      u3r1aqSlpWH+/PmevvzGxkY4HA7ExMQgNjYWDz30EAoKCrB9+3aEhoZCVVW8//77+Pvf/35Z
      NTAAiIg0pqoqamtrvR6RW11djYMHD+LBBx8EAEybNg3x8fHIysrCgw8+iJdeeglFRUVwu914
      7LHHAAD5+fkYMWIE4uPjL2u5DAAiIo3pdDo8++yzXtPmzZuHefPmNZv3/JhJixYtgsPhQFBQ
      EPR6PQCgZ8+emD9//mUvlwFAROSHdDodQkJCfHuPVqqFiIj8DAOAiChAMQCIiAIUA4CIKEAx
      AIiIAhQDgIgoQDEAiIgCFAOAiChAMQCIiAIUA4CIKEBpFgCqqqKurg7Z2dkoLCyEoigAmsbI
      zs3NRX5+PlRV1ao8IqJOT7OxgOrq6vDJJ59g5MiRnhAYM2YMVq9ejaSkJBw/fhw1NTUYPny4
      ViWSH7k9sz9uGJqq2fJTEiI0WzbR1dIsAKxWK1JTUzF48GD06NEDX331FWpra2E0GjFmzBjI
      sozly5dj6NCh0OnYU0U/rntcOLrHXfzh10TUnGYBkJycjJ07d+K9995DdXU17r33Xpw7dw7R
      0dEAAL1e73kkmtFo9HpsmiiKaGxs1Kp0n6luUdPlS6LUrP1kWfbrNu1oJEmCJDVvZ/INt9PW
      1a4BUFtbi40bNyIsLAz9+/dHREQEJkyYgNLSUuzduxdDhw6FLMue+VVV9TwJx2QyeaYbjUZY
      LJb2LL1VqRm3Qu07QbPlC4ZgCCbv9tPr9X7dph2NKIowGAxs01bG7bR1tWsAREVF4Wc/+xkE
      QcDevXvRvXt3hIaGokePHti2bRvCw8NRXl7uSXlVVWEwGDwh0FkIBjMEg1nrMogowLVrAAiC
      4NmZDxw4EKtWrUJ+fj5sNhtGjhyJ8PBwJCUlYcWKFXA4HJgyZUqn2/lT+/r0009x+PBhAE3d
      MpmZmRg7dizeeecd5OXlYezYsbjrrruanWdSVRUffvghQkNDMWXKFLz66quor68H0HSl2oMP
      PoiUlJR2Xx+i1qTZOYCwsDDMnj0bjY2NXo80y8zMhNPphMFg8DwcmehqTZgwAaNGjQIA/POf
      /4QgCFixYgWCg4Px3HPPYcmSJejevTuuu+46r9fl5uZiy5YtiIuLw/Tp03H33XdDlmUoioJ5
      8+YhPJwnnMn/aXp5jSAICAkJ8ez8z08LDg7mzp9aRVRUFBITExEUFISzZ89i/PjxOHz4MCZN
      moSQkBA89NBD2LBhg9drHA4Hli5d6nnQtiAISEhIQGJiIoqLizFixAhERkZqsTpErYrPBO5A
      RFHEs88+i9LSUhiNRjzyyCPo2bMn1q9fj08//RQWiwVPPPEEunbt6nlNaWkpXn31VZSXl8Ns
      NuOZZ55BTEwMAGDFihXIysrCP/7xD61WSRN1dXWoqqpCeHg4EhISAAD/+c9/cPfdd0MQBNx8
      88144oknMHHiROTl5Xm6ds575513cOeddyIiwvvafkmS8Oabb+L5559n1yR1CrzAvgPZu3cv
      9Ho9Xn75Zdx3331488034XA4sHz5cixbtgyzZs3CK6+84vWakydPYsaMGXj11VcxefJkfPLJ
      JwCA06dPY/v27bDZbFqsiqZOnz6NL7/8Erm5uQCaAmH//v246aabAADjx4/HY489hvj4eFx/
      /fXo1q2b57Xl5eX45JNPcOjQIfzzn//Enj17sGXLFgDAoUOHkJSUhLi4uPZfKaI2wCOADiQl
      JQVFRUU4efIk9u3bh379+uHUqVMYPnw4QkNDce211+KNN97wujw2MzMTAOB0OrFv3z7ccMMN
      kCQJL730En7729/i5Zdf1nKVNDF8+HCvO8g/+eQT3HrrrZ5Lic+dO4fIyEjExsbi6aefxpw5
      c9DQ0ID8/Hykp6dj5cqVAIDq6mrYbDYMHz4csizj3Xff9XQLEXUGDACN2Ww2HDhwAMHBwRgy
      ZAhcLheWL1+O4uJiPProo7DZbIiKigIAr3MlFyopKcGTTz6JCRMmYMKECfj4448xbNgw9OjR
      A6qqegVGIBIEAbfccovn57q6OixduhSyLOPGG29ERkYGSktLsW/fPgwaNMjTxRYSEoLx48cj
      PDwcVqsVo0eP5pU/1KkIqh+OuFZTU+Pp5/Z3tbW12LJlC8LCwnD27FnEx8djypQpqKurw+LF
      i7F48WL8+9//xjPPPAOn04lf//rXWL58uef1FRUVmDt3Lv76179i4MCBAIBp06YhOTkZgiBg
      +/btePDBB/Hwww//aB0nT55E796923JVA4ooijh79ix69OihdSmdCrfT1iMIgsAjAI1FR0fj
      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
    </thumbnail>
    <thumbnail height='384' name='Mars Weather - Does the red planet experience seasonal variations?' width='384'>
      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
      fTweDy6Xi3Pnzmk1whVF0ept5OTksGHDBq2QWtN9x4wZg9PpxOVyaY7DIUOG8MUXX7Bx48Zm
      NUb86eWffPIJf/3rX5k2bRqZmZnU1dUREhKilRYeM2YMa9eu5eOPPyY3N5ekpCTy8vL49NNP
      2bVrF+np6UydOpUtW7YwePBg3G63dkMCCf/Lyclh2rRpPPTQQzzxxBNcunSJmJgYtm7dynvv
      vafVn/HXCKqsrKSoqIgNGzZw8ODBNp8PGle3f/nLX1i9ejUej4cZM2bw1ltvsXbtWm2SajrO
      TccwLS2NN954g/Xr1zebIK517X6zj39hsXr1atasWUN6erq2TUxMDOvWrdNMbk3HctasWRQW
      FqKqarNSCePGjSMjI4OBAwdit9u1woDXkiM5OZmtW7eyb98+Zs6cSXFxMdBYLqKlfex2O1VV
      VVqBsCvHZOzYsaxatYoPP/wQh8Nx1f5Xfj+mT5/O6tWrWb9+Pbm5uVpYoL8cQX19PW63G1mW
      cTgcVFZWaufevn27ZnLp378/BoNBUypVVVVkZmYSFRWlTbhGo5HU1FRWrVrFxo0bgcYs87/9
      7W+sXr26Wfb8lc9tdHQ0TqeTv//97+zdu7fFsbzy2uLj41m7di05OTmEhoayYcMG3nnnHa3K
      cFN8Pp9mOXj44YdJTEzE4XCQnZ3N+vXrtZpbiYmJrF27VlPuGzZs0N4aW/uetfTs+s1I/vnn
      o48+YunSpYSGhnLs2DFcLhebN2/mzTffZNq0aUydOpXS0tJmz9yV1zxlyhTKysquMgH6SUhI
      oLi4mA0bNrBt2zZtDvTPr3v37sXn82EwGLTKAZGRkXz11VdaIcSm+MtHKIqimRmh8fvx9ttv
      N5aJVq+D2+3Wsub8WZM+n0/LvK2urlbLy8ubZb55vV61oKBA9Xg8qiRJamlpqZYN6T9G02P5
      fD71vffeU8+cOaPW1NRo56uvr1dLSkpUr9erSpKkZfQpiqIWFRWptbW1zTI5CwoKVJ/Pp9bU
      1KgFBQVqQ0ODKsuy6nK5tGPKsqyWl5er1dXVzTI76+vr1fz8fNXpdGpyKoqivvXWW2p+fr6W
      cSdJklpYWNgsu1VVG7M9CwoKtMw9j8ej5uXlaVl+iqJoWbNut1u7Fv95JElqlul4rXHyj6//
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Monthly Pressure Variation' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='278' name='Seasonal Pressure Variation' width='384'>
      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
      NBrlz//8z7Pumz17NsuWLePSpUtUV1dfwV9z7dFV/958881Zxt9PSUkJCxcuRGvNiRMnvHTp
      32z8/SwCIAg95I033sCyLO655x4ikUggb9myZTlj+37a29sB22t1qauro7m5mZtvvjngtfpZ
      uXIlAHv27OlP8695uurfnnDq1CmUUoHJYOnfbPz9LAIgCD3g4sWLvP/++5SUlLB69epe39/c
      3Mzbb79NJBJhxowZXro7Kblo0aK8986bN49oNJo1gTmc6G///uEPf+Do0aPccMMNjB492kuX
      /g2S2c8yByAIPeD3v/89qVSKu+++O+cqk644ffo0P/zhD2lpaeGee+5h/PjxXp67XG/MmDF5
      71dKMXr0aC5dutS3xg8B+tq/R44c4d133+WDDz5g4sSJfOMb3wjkS/8GyexnEQBB6Ibm5ma2
      b9/OyJEje71S5P333+d///d/6ezsZPXq1XzhC18I5LsGyu+15mL06NF89tlnaK2z1sYPdXrT
      v++88w719fVcunSJ8+fPc/nyZQoKCqioqODzn/98lqGX/k2Tq59FAAShG9566y2SySTr1q0L
      LE3sing8zv/8z/+wZ88eIpEIGzduZO3atVnlOjo6AALPE+SisLAQ0zRJpVK9HoFc6/Smfz/5
      5BMOHDgQSJs4cSLTp0/P2S/Sv2ly9bMIgCB0QVtbG++++y5FRUU9fliosbGRl156iYsXLzJx
      4kT+6q/+KhD391NSUgJAa2srkyZNyltna2srRUVFw8449bZ/v/GNb9DR0UFzczPNzc3U1NTw
      0UcfsXnzZrZu3cq3v/1tpk6d6pUPe/+65OtnEQBB6IJ33nmHzs5O7rvvvryrSPxUV1fz85//
      nEQiwW233cajjz5KQUFB3vJuyKK5ubnLepubm7uMYw9Vetu/BQUFFBQUeIZ9wYIFfOELX2Db
      tm385je/4Qc/+AFPPfUUY8eOBaR/XfL1s6wCEoQ8dHR08M4771BQUMBdd93VbfmGhgZ+9rOf
      kUgkuPvuu3n88ce7NP6QNlBnz57NWyYejxOPx4edgept/3bF3XffzX333Ud7e3tgG4Qw969L
      V/0sAiAIeXj33XeJx+NUVFR0O4mYSqX48Y9/TDKZ5IEHHuDhhx/u0Xdcd911QNdr0Pfu3YvW
      mvLy8p43fgjQm/7tCTfddBNgr/13CXP/unTVzyIAgpCDRCLBW2+9RTQa5Z577um2/J49e7hw
      4QILFizg85//fI+/Z+rUqdxwww0cO3aMpqamnGXef/99ACoqKnpc77VOb/u3J7jLOP0P5IW1
      f12662cRAEHIwfbt22lpaWHVqlVePLkrdu/eDcBtt93W6+9yl+T9+Mc/pq2tLZD36quvcvjw
      YWbNmhWY3Bzq9KZ/Gxoa+Jd/+Rd2796NZVk5y5w7d45f/epXAMyfPz+QF8b+demun2USWBAy
      SKVS/P73v8cwDO67774e3ePGmKuqqjwxyMfKlStZsmSJd718+XI+/PBD9u3bxzPPPMOKFSsY
      OXIkNTU1VFdXM2rUqMAmZkOd3vZvMpmksbGRn/3sZ/zmN79hzpw5lJWVMW7cOOLxOI2NjXz4
      4YekUinWrFnDggULAveHrX9detLPIgCCkMGePXu4dOkSK1asYMKECT26p6WlBYBPP/2027JT
      pkwJCEAkEuGJJ57gv/7rv/jggw947bXXvLwJEybw13/918PKO+1t/86ePZt/+Id/YPv27ezZ
      s4ddu3ZllSktLeX+++9n1apVWXlh61+XnvSzvBBGEK4h2tvbOXToEPF4nJkzZzJx4sTBbtI1
      RSqV4uLFi1y4cIG2tjZGjRrFxIkTGTNmTI+e4JX+DSICIAiCEFJkElgQBCGkiAAIgiCEFBEA
      QRCEkCICIAiCEFJEAARBEEKKCIAgCEJIEQEQBEEIKSIAgiAIIUUEQBAEIaSIAAiCIIQUEQBB
      EISQIgIgCIIQUv4/BQnKlWmZYzIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Seasons by Mars Months/Solar Longitude (2)' width='384'>
      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
      O3vd130+H6Ojo0xNTX0vS3qbm5u5ePHibZ3r8XgYGBiQlWdCLLGwDAEVFxczMTHB1NSUfmx8
      fJy4uDh8Pl/QFsFOp5OrV6+Sn58PwJYtW9i7d+8tbSBWX1/PyMjIDV+PxrvPhoYG/u7v/o53
      3nnnujtuNjQ08Pd///e89dZbuN3usL3v6OgoXV1dIZ93d3c3XV1dt3w9VVU5duwY//zP/8yn
      n34armoKIa4jLJPAOTk5uFwupqam9Byu7e3tLFu2jNnZWQYGBiguLgZgcHAQh8NBbGwsiqIw
      OTnJ3Nycnpe2t7dXz1bV1NTE1NQUJSUlVFdXo6oqZ8+eZXx8nJaWFlwuFwCrVq0iNTUVVVVp
      b2/n0qVLKIrCqlWrWLVqFQaDAU3TaGtrIykpidTUVJqbm5mYmGDt2rURscTV6/WSmJjI4OAg
      IyMj5Obm6q9pmkZ9fT2ZmZnMzc2FNNYLP9/OzpuNjY309/cHJYO/XZqmMTAwwNmzZyksLAxr
      oBJChApLADCZTBQVFdHZ2cmKFSvw+/309PSwdu1afD4fly5d4pFHHgGgtbWV4uJifdvh1tZW
      +vv79QBw4cIFvvjiC9LT0ykuLsZisfDWW28RExOj56v1eDxMTk4SExODwWDQG5/a2lpOnz7N
      5s2bUVWVP/zhD2zbto0HH3wQgJMnT1JQUMDw8DBtbW1UVFREVE8hIyMDl8tFe3t7UABYSNSy
      fv166uvrg84ZHx+nq6sLp9NJVlYWy5Ytw2S69s/C5XJx9epVkpKS6O/vZ3x8nMTEREpLSzGb
      zfT09DAyMsLU1BQtLS0oikJSUpKeT2Dh+v39/czMzJCTk8OyZctuGGjm5+c5fPgwDz/8MG63
      O2joUAgRfmFbBlpSUsKlS5fQNI2JiQnm5uYoKChgfn6ezz//HKfTicFgYGhoiAcffPA77zbL
      ysrYu3cvNpsNVVVxuVz09fVRWVnJc889x9WrV9m4cSNr167Vz5mYmOD8+fPs2bOHsrIyNE0j
      NzeXd999l8rKSj2Jyeeff05WVhZ/+Zd/SWJiYsQ9El5TU8Pp06d55JFH9J5Pa2srycnJZGVl
      6QFA0zS6uro4dOiQ/qDf6dOnKSwsZN++fRiNRoaHh/n1r39NUlISJpOJ2NhYBgcH2bhxI48/
      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
    </thumbnail>
    <thumbnail height='384' name='Yearly Average Pressure' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXQc1YHv8e+tXtXWbhlLloxtbGzAxniJCQwQQ1gHMy9sAV4gA4wnMedk
      mcxLQt4jIe+FSTgZJgvMMDAZIMkAwUDCEAIBE3aMbbwv2ODd8i5bUmtt9V73/aFYoLDJqKVu
      qX6fc3yO3O4ubhmob/et6lvGWmsRERFPMcYYJ9+DEBGR/FAAREQ8SgEQEfEoBUBExKMUABER
      j/JEAFzXxXXdfA9DRKSgeCIAALraVUSkN88EQEREelMAREQ8SgEQEfEoBUBExKMUABERj1IA
      REQ8SgEQEfEoBUBExKMUABERj1IAREQ8SgEQEfEoBUBExKMUABERj1IAREQ8SgEQEfEoBUBE
      xKP8+R6ADD6bSZPe8w6ZQ/XYdApfxWiCE07GKS7P99BEZBApAB5i00niy/9Ix7P/Sbb5IFgL
      xgE3gwkXU/TpeZRc/Pf4KmvyPVQRGQTGeuBeia7rYq3F5/Pleyh548Y7aXv4NuLLnyU4eTZF
      p/0NgbrJ4PPjth4msf5VupY9ja/iGCq+dAfBCSfne8giMoCMMUYB8ACbSdP6y1tIrH+V0qu/
      Q+TMyzBO778Lay2Zgztp+c9v43Y0U3Xzg/hHj8vTiEVkoBljjE4Ce0Bi3cvEVz5H6eXfIHLW
      Fe87+AMYYwiMmUjlTT8FY2j/7U+w2WweRisig0UBGOZsJk3nc/cTmDC9++BvzEc+3189geIL
      /47ExjdI1781SKMUkXxQAIa5zKHdZBp2EZ51LiYY7tNrwrPOA2NIblrafaJYRIYlBWCYy7Ye
      wqYSBMZM6vNr/JU1OOHi7stEB3BsIpJfCsBwl80ABj5g3v8j+XzYbGZAhiQihUEBGOacslHg
      85Ft2t/n17ixNmxXO76RY/joMwYiMpQVXADi8Tjr1q1j2bJlHD58GGst1lqamppYtmwZa9as
      IR6P9zx/3759LF68mL179+KBK1qPmr96Av6qOhLrX+nzO/rEW4ux2Qyhk/4KPuaksYgMXQUV
      gGw2y6OPPko0GqWoqIjf/va3HDp0iKamJhYuXEhRURGdnZ088sgjpNNp9u7dy9NPP01ZWRl/
      /OMfqa+vz/cuFBwnVETkzMtJvr2M5DvLP/b5bqydzud/RWDsCQQnzRiEEYpIvhTUUhDZbJZE
      IsHcuXPx+Xy0tLTQ0NBAIBBgypQpzJgxg2w2y9atW0kmkyxdupRLLrmEsWPHUlFRwdKlS5kw
      YUK+d6PgRM65hsTal2j91S1ULPgpweNnf+DloNmOKG3/9X2yjXup/MZ/4IQieRitiAyWggrA
      kQP9448/TllZGU1NTZx66qkYY1i9ejV//OMf6ejoYNy4cRQVFRGLxaiqqgKgsrKyZ2rIWksm
      8+50h7WWdDqdl30qFMEvfJ/MAzcT/bevEDr9UgJzLsYZPR6MwcbayLz9BslXHiHbfJCiK79N
      ZswJZGKxfA9bRAZQQQXAdV2i0SjV1dWUl5fT2NhILBbDcRxc16Wmpobi4mIOHz5M9s/fUj3y
      TtYY0+scwF++ww2Hw55dCgKAEVMovvm/aH/qbuJLnyTx8sPgD2L8QWyiE4xDcNJMKq6/jeCk
      mfkerYgMgoIKQHt7O52dnVxxRfc3VkOhEGvXrsXv9zNr1iymT5+OtZaFCxfS2tpKMBiks7OT
      cDhMZ2cnwWAQ6D74+/3v7tqRtYC8zikup+wLt1B83hdJvvMmmQM7sOkkvpE1BKecSnDcSX3+
      spiIDH0FFYBIJEJrays7duygtLSUtWvXMnXqVPx+P6tXr6a6uppYLEZjYyORSIRZs2axaNEi
      LrjgAl5++WWmTZuW710oeMY4+EeP00JvIlJYy0Fbazl06BCrVq0ilUoxceJEpk2bhjGGTZs2
      sW3bNvx+P5/61KeoqanBWsvq1avZtWsX48ePZ/bs2R84zeP11UBFRP6SloMWEfEoLQctIuJh
      CoDIILKuixtr1zpLUhAK6iSwyHBkUwnia18ivuwPpLatwWZS4PMTqJtC0afnETntEpwRZfke
      pniQzgGIDKBstIHWX3+P5Obl+CrHEDrhVJzSkbixdlI715PZtwV/7WTKb/gnAuNO+tgb9ojk
      ik4CiwygTPMBmn/2JWwiRunVN1M0+wKM790P3dZaUltW0rbwdrLRBkb+438SPG56HkcsXqIA
      iAwQm80QvecbpHeso/Ib/0Fg3NQPfXefjTbQfNdNAFTd/F+aDpJBoauARAZIassKkutfoeSy
      rxMcP+0jp3Z8ldWUXfs9Mg31dL3xpL61LoNGARAZAF3Ln8UpH919f+U+CB4/i8C4E4mvfFb3
      YZZBowCI5Jh1XdL1GwmMOQ6nuLxPrzHGIThpFuk9myHr7ZVrZfAoACK5lk5iUwlMpIyjmWV1
      RpSBm8WNdw7g4ETepQCI5FowhAkV4cZasa7b55e5nS3g8+MUlQzg4ETepQCI5JgxDsGJM8js
      34bbEe3Ta6ybJbVlJYHx08Cn72fK4FAARAZA0afn4bZHia987mOv6rHWktq8nPT+bRSdejHo
      y2AySBQAkQEQnDSTolP/mo6n7ia1ddVHRiB7eA+tD91GYOwJRP7qc/o2sAwaBUBkABjHR+nV
      N+MfNZaWe/6Brlcfw4139oTAWtuzRlDznQuwqTjlN9yGU1Sc55GLl+ibwCIDKNveTNvD/0Ri
      3Us4JSMJTjwFp6QSt6ud9J7NZA/VE5w4g7LrbyMwZmK+hyseoqUgRAaBzaRJvvMm8Tef7l4N
      NBUHf5DA2BMo+vQ8wjM+ixOO5HuY4jEKgMggs9bFJuKYUBjj6L9HyR9jjNH1ZiKDyBgHUzQi
      38MQAXQSWETEsxQAERGPUgBERDxKARAR8SgFQETEoxQAERGPUgBERDxKARAR8SgFQETEoxQA
      ERGPUgBERDxKARAR8SgFQETEoxQAERGPUgBERDxKARAR8SgFQETEoxQAERGPUgBERDxKARAR
      8SgFQETEoxQAERGPUgBERDxKARAR8SgFQETEoxQAERGPUgBERDxKARAR8SgFQETEowouANZa
      Ghoa2LVrF+l0utfjTU1NbN26lc7Ozp7Hu7q62L59O7FYLB/DFREZsoy11uZ7EEe4rstvf/tb
      rLWUl5ezdetWrrvuOioqKnj55ZfZt28fdXV1dHV1cfHFFxONRlm4cCFTpkxhy5YtXHXVVVRX
      V3/gdq21+Hy+POyViEjhMcYYf74H8V6ZTIbm5mYWLFiAz+cjFAqxe/durLXs2bOH66+/Hsd5
      90PL0qVLueCCCzjhhBOYMGECy5Yt47LLLsvjHoiIDB0FFQC/309tbS2vvvoqFRUV1NfXc9ll
      l7F3717Ky8tZunQpmUyGadOmMXLkSJqbmxk3bhwAY8aMYdmyZUD3dJHruj3btdb2mk4SEZEC
      CwBAUVERjY2NJJNJAHw+H52dnTQ1NTF58mRSqRS/+c1vmD9/PgDGGAAcxyGbzfZs570/W2sJ
      BAK9Pj2IiHhdQQWgo6ODffv2ccMNN+A4Dhs2bGD58uXU1tYyfvx4pk6dCsCePXtobm7G5/OR
      SCQIh8PE43GCwSDQHYUjP8O75wAUABGRdxXUETEQCNDR0UFrayvxeJy9e/cyYsQIxo4dy9at
      W4lGo3R2dtLY2EhZWRknnXQSb7zxBvF4nJUrVzJx4sR874KIyJBRUFcBWWvZvHkzq1atAmD0
      6NGcc845BAIBdu3axWuvvYYxhpNPPpmZM2eSzWb505/+xOHDh6mqquKCCy7o9c7/CF0FJCLS
      mzHGFFQAjnjvlM2ROX5rbc+vv3zcdd1ej33Y9hQAEZFuBXcZ6BEfNFdvjPnAA7wxRgd2EZFP
      oKDOAYiIyOBRAEREPEoBEBHxKAVARMSjFAAREY9SAEREPEoBEBHxKAVARMSjFAAREY9SAERE
      PEoBEBHxqIJcC0hEJGesxWa67who/AH4kEUjvUgBEJFhx6aTdC17mq7XHsNNdIH98y1ijYMT
      jhA5+2oip/0NJhDK70DzrCCXg841LQct4h3Z9mZaf/U9kpuWEJw0k/Cs8/CPHgcWMod3k1jz
      IqntawlNPYPyG3+Ir3RkvoecFwV7P4BcUwBEvMFNxGi59x9J7XqLsi98l6LZF2ACvW8SZdMp
      4qufp+2R2wkeN52Km36GEx6RpxHnjzHG6CSwiAwL1lpiLz9CcssKyq+/jaJPz3vfwR/ABIIU
      ffoSyq//AcnNy4m9shAPvA/+QAqAiAwLNhEj9qf/InzKOYRnnfuhdwiE7htJhWedR/iUs4k9
      /2tssmsQR1o4FAARGRZS29fidrYQ+avP0ZfJDWMcIqd/DrezhdT2tYMwwsKjAIjIsJA5sB18
      fvy1k/r8Gn/t8eDzk9m/fQBHVrgUABEZFmwqgfH5Mc5RXOzhOBifH5tODtzACpgCICLDgq+y
      BptKkG2P9vk1bkcUm0rgq6wewJEVLgVARIaF4JQ54Dgk33q9z69JbngdHKf7tR6kAIjIsOCr
      rCF8yjnEXn2UbPTgxz4/Gz1I7NXHCM/4LL4KfQIQERmyjONQ8rmvgrW0PHAL2bbGD31utrWR
      lgduASwln/sqxvHmoVDfBBaRYSWx/jVaHvjfOCWVlPz1fELT5+IrqQQg2xEluf5VOhb9Ercj
      SsXf/5jw9Ll5HnF+aCkIERl2rLWk6zfR/vg/k9q5ARMI4URKAXC72rHpJMHjTqH06psJjJv6
      kV8YG84UABEZtmw6SWrbGhIbF5Nt3A+Ab1Qd4WlnEjx+llYCVQBEZNizliMHOQO6H8CfGWOM
      7gcgIsObMeiQ/8G8eepbREQUABERr1IAREQ8SgEQEfEoBUBExKMUABERj1IAREQ8SgEQEfEo
      BUBExKMUABERj1IAREQ8SgEQEfEoBUBExKMUABERj1IAREQ8SgEQEfEoBUBExKMKLgDWWg4e
      PMjOnTtJpVLv+/PGxkbi8XjP72OxGNu2bSMWiw3mMEVEhryCCoDrujz22GO89tprbNu2jXvv
      vZdoNNrz59u2bePuu+9m06ZNQHcM7r//fnbt2sUDDzzAwYMH8zV0EZEhp6DuCZzJZIhGoyxY
      sACfz0cwGGT37t1UVlaSyWR49dVXOeOMM3qev2TJEi666CKmTJnChAkTWLZsGZdffnke90BE
      ZOgoqAD4/X7q6up4+eWXqaysZPfu3cycORNrLS+88AJz5szpmRay1hKNRjn22GMBqKmpYenS
      pT1/5rpuz3attaTT6cHfIRGRAlZQAQAIhUJEo1Gy2SzWWhzHYe/evTQ3N3PBBRewatUqrLVY
      awEwxgDgOA7ZbLZnO+/9GSAQCOA4BTXjJSKSVwUVgI6ODvbv38+NN96IMYa33nqLFStW0Nra
      Sjwe5/HHH+fQoUMYYygtLcXn85FIJAiHw8TjcYLBINAdhSM/Q/e5hSMxERGRbgUVgEAgQEdH
      B9FolKKiInbv3s3IkSP5zGc+0zOls3r1ahzHYeLEiXR0dLB48WLOPfdcVqxYwcSJE/O8ByIi
      Q4exR+ZSCoC1li1btvRM81RXV3P22WcTCAR6nrN9+3Ycx+G4444jk8nwwgsvcOjQIUaNGsX5
      55/f653/EUc+Afh8vsHcHRGRgmWMMQUVgCOOzPEbY3rm+D/qua7r4jjOhz5XARAR6c0YYwpq
      CuiIvhz43/tcHdhFRI6ezoqKiHiUAiAi4lEKgIiIRykAIiIepQCIiHiUAiAi4lEKgIiIRykA
      IiIepQCIiHiUAiAi4lEKgIiIRykAIiIepQCIiHiUAiAi4lEKgIiIRykAIiIepQCIiHiUAiAi
      4lEKgIiIRykAIiIepQCIiHiUAiAi4lEKgIiIRykAIiIepQCIiHiUAiAi4lEKgIiIRykAIiIe
      pQCIiHiUAiAi4lH9DoC1lp07d/LjH/+YW2+9laamJh5++GGstbkYn4iIDJB+B6CtrY2f/OQn
      fOYznyEWizFy5EhWrFhBLBbLxfhERGSA5CQAo0aN4vTTTyccDuO6LtlslkQikYvxiYjIAOl3
      AKqrq0mlUtx7773s37+fn/70p0QiESorK3MxPhERGSDG9nOy3lpLLBbj9ddfZ8+ePdTU1HDu
      uedSXFycqzH2m+u6WGvx+Xz5HoqISEEwxhh/fzfS1tbGbbfdxj//8z8TCARyMS4RERkE/Z4C
      Ki0tZdKkSSxcuJBsNpuLMYmIyCDo9yeArq4uWltbefrpp1mzZg1FRUWUlJTwrW99i2AwmIsx
      iojIAOj3OYBMJsOWLVtIpVI9jwUCAU488cSCmXPXOQARkd5ycg4AIBwO9zq4+v1+jDG52LSI
      iAyQfgcgkUjw0EMP0draCnRPCSUSCe677z5CoVC/BygiIgOj31NAfymRSPCd73yHO+64o2AC
      oCkgEZHecjIFlM1maWxs7LkCKJ1OE41GaW5uZsyYMf0epIiIDIx+ByAWi/Ev//IvRKNRoPuL
      YTNmzOCYY47p9+BERGTg5HwKqBBpCkhEpDdjjOn3F8HS6TR33XUXiUSCp556iiuvvJK77roL
      13VzMUYRERkg/Q5ANBpl//79+P1+nnnmGe6880727t3bMyUkIiKFqd8BCAQCJBIJFi9eTGVl
      JbW1tWSzWRznk23aWktbWxtNTU29lpY48ng0Gu316SKVSnH48GGSyWR/d0VExFP6fRK4oqKC
      s88+m9///vfceOONHDp0iNraWsrLy496W9ZaXnjhBQ4cOMCIESNob2/nmmuuwVrLE088geM4
      pFIpysrKuOyyy+jq6mLhwoVUVFQQjUa5+uqrP9E/V0TEi3JyEjiZTBIIBMhkMuzYsYNjjz2W
      ESNGHPV2UqkU9913HwsWLMDv9/Piiy8ycuRIxo0bR3t7O+PHj8day69//Wsuv/xyli1bxujR
      o5k5cyYbNmxg7969zJs3733b1UlgEZHecvI9gEQiwfe//31++MMfcv/99/PWW29RWlrK7bff
      ftQHXJ/PR3l5OW+//TZVVVXs27ePadOmUVlZSWVlJdZa9u/fTzKZJBwOc+DAAc466ywAxo8f
      z7p16wDedz9iay3pdJpMJtPf3ZVC4WbBOKAlR0Q+sX4HoKWlBb/fTzabZc2aNdx9993cdttt
      NDY2Ul1dfVTbchyHCRMmsHjxYiKRCD6fj4qKCqD7IP7GG2+wadMmrrjiip57DxyJTCAQIJ1O
      92zrvYvTWWtxHOcTn5eQwpBtPUxizYskt67CdkQhGCZQezzhmecSmDAdo3+/Ikel3wEoLi6m
      paWFhx56iHHjxuH3++no6PhEU0CxWIxNmzaxYMECfD4fK1euZPny5Zx55pk8++yzJJNJbrjh
      BsLhcM9BPZ1OEw6HSSaTPctPG2N6LUOhKaChzWbTxF56hM5FD+DGO/GVjsQprsDGWknueZvE
      q48SPvksyr7wPXwV+gKiSF/1OwAlJSUsWLCA5cuXM3/+fKLRKJ/97GcpKSk56m25rksymcRa
      izGGVCpFNpvl4MGDHDx4kPnz5/e8izfG9Ez7nHXWWbzzzjvU1NT0d3ekwNhMmvbf/oTYy48Q
      nnUexRfeSGDsFEwghLUu2WgD8RXP0bnoAZp//vdUfvVu/Mccm+9hiwwJOTkJHI/H2bBhAy0t
      LZxxxhnU19dz8sknH/V2rLUsW7aMt956i2AwSDgc5tJLL2Xnzp0sWrSoJyrGGK655hqCwSCP
      P/44qVSKQCDAlVdeSSQSed929Qlg6Op8/te0P/EzSq/4X4w47zqM7/3vWay1ZA5sp/nnX8ZX
      fgwjv/1rnFBRHkY7/FhrcduaSG5ZQXrnBtxYK05xOcHjZhCc8imc0iot/T5EGWNMvwOQTCb5
      0Y9+RDgcZufOndx99918+9vf5qc//eknviNYJpMhk8kQCoU+9j8uay3xeJyioqIPfa4CMDRl
      Ww/T+P8uIzhlDhULfvaRc/zWWhLrXqblF9+k7OrvEDn7Gh2Y+slmM8RefYzO5+7HbT0Mjh9T
      VIyNd4CbxakYTcm8LxM568oPDLMUtpxcBXTw4EEcx+GWW27hlltuIRwOEwwGaW1t/cQLwvn9
      fvz+vg3NGPOB7/pl6IuvXISbSlB88Zc+9gSvMYbw9LMJTphO1xtPEjnjcggWxnLkQ5FNJ2n9
      1XeJr/oT4VnnMeKcawhOnInxB7CZNKlta4i9spC2R35Eavs6yq//ASagv++hpt8BKCsro7Gx
      ka1bt5LJZFi1ahXNzc2UlZXlYnziUdZaUltW4qsYTWDMpD69xvh8hE46jY5n78eNteALHt1V
      aNLNui4df7iH+JqXKL3qZkacc02vd/jGHyB04qcJTp5N7KXf0P7fd+IbOYaSS79KDpYXk0HU
      739bFRUVfPWrX+UXv/gF+/fv58EHH+Sb3/xmwdwMRoaobIZsRzO+ksqjemfpq6yBdBK3s20A
      Bze8pXdvIvbSwxSfex0jzv3Ch07vGJ+fEed9kRHnXEPsxQdJ79k8yCOV/srJ/QDeeust7rjj
      DtLpNIFAQHPt0n+ODxMI4XZ19FwV1hc2GQcMJhge2PENY11v/Dc4for/ev7HvqM3jkPxRfPp
      WvwE8SVPEhx30iCNUnKh358AfD4fr7zyCuvWrXvfzeFFPinjOATGTMJtPYzb1tjn16V2b8Ip
      PwZnhKYgPxFrSW5aQnDybEwf/w6dkkqCk2aS2LQEhv/tRYaVfgfAcRzmzZvHz3/+c5566ile
      euklFi9e3GslT5FPIjzzXNxYG4l1L79veY8Pkmk+SHLjEkInntbng5f05ibjuJ1t+Kvq6Os1
      VMYYfCNrcTtbcVPxAR2f5Fa/A5DJZNi/fz8zZsxg27ZtrF27lo0bNyoA0m/BKXMITv4UHX+4
      h2zz/o98rrUuHU/eiY13UHzhjboE9BMyPh8Yg80e5bpZ2QzGGIyjy0GHkpysBTRnzhzq6uoY
      NWqU/seTnDGOj/Lrvk/zz79M88+/TPkX/1/31ITTe5ox23KI9t//K/GVz1N29c34a/t21ZC8
      n/EH8VXVktm/rc/nXqzrkj6wHV9VHcYfGIRRSq70KwDr16/ntttuo66ujoMHD3LHHXcwfvz4
      HA1NBPyjx1H5lX8leu83aL7rJkInnkbopNPxVYzGJmKk6jeRWPcyblsTpVd/h8jcq/QmpD+M
      IXzK2XQ+dz/Zxj34R4//2JdkDu0ivXsTJZfcpNVZh5h+fRP4Bz/4ARdddBGnnnoqzz//PDt2
      7OArX/lKLseXE/om8NDnxjuJvfQb4m8+TaZxL2QzgMEprSQ4ZQ4l876Mv3ayDv45kI020Pij
      awgceyIVN/3sI5fVcBNdtNz7DdIHtjPqu4/hKx81iCOV/uj3N4Gj0SjV1dVYa6murmb58uU9
      t2s0xuh/RskZp6iY4nlfZsR515GNNuB2tuCEIjhlVThlmnrMJadiNKWf/xatv/oubQ/+X8qu
      vRVTVNzr79hai4130PrQD0huWUHF392OU1aVx1HLJ9GvTwBf+9rXSKVSFBUV0d7eTkNDA5Mn
      T6akpITvfe97BfNlMH0CEDl6sVcW0v67n2FGlBL5q0sJHT8bU1SMG+8ktXUlXUufwsY7Kf38
      txgx96p8D1eOUr8Xg9u5cyft7e3vezwQCHDCCScUzAFXARA5eta6pOs30fH7fyW1fR02FQfH
      D24GE4oQnDSTksu+TuDYE7UExBCUk9VAhwIFQOSTs9aSbdpHZv923Fgbzogy/HXH4xtZq6m3
      IUwBEBHxKGMG4HOb67qkUqk+fXNTRETyJ+cB2LhxIzfccAOJRCLXmxYRkRzK+RRQPB6nsbGR
      urq6nvv35pumgEREesvJHcHS6TRbtmwhlUq9d8MAjB07VieJREQKVL8DYK3lzjvv7Ln9Y0ND
      A8YYXNfl85//PBdffHG/BykiIrmXk8XgKisruf3224Hu7wY89thjzJ8/nx/+8IcKgIhIger3
      JH0kEuHw4cPs3LmTeDxOfX09nZ2dFBUV9SwLISIihaffnwBKSkr40pe+xK233orP5yMQCPCt
      b32LgwcPctppp+VijCIiMgD6fRVQJpOhtbWVUChENpulqKiIYDDYvVhUgVx5o6uARER6y8lV
      QPF4nB/96Edks1nmzp3LWWedxahRowrmElAREflg/f4EYK0lnU6zZ88eFi9ezIoVKygpKeHW
      W2+lpKQkV+PsF30CEBHpLSdLQRhjCAQCVFVVUVNTQ0lJCQ0NDWQyR3lPURERGVT9/gQQi8W4
      /fbb2b17N3PmzOG8887jhBNOwHGcgvkSWK4/AVjrkmnYTXLTG2T2bcVNxPCVH0Nw8hxCU+bg
      jCjNyT9HRGSg5GQ10FQqRX19PXV1dUQikZ4poUAgMCwD4MY7af/dz4iv+CM2GccEizChMG5X
      O2Qy+GsmUPI/vkp49vkFs/8iIn8pZ8tBW2tpaGhg3bp1vP7660SjUe666y7C4XAuxtlvuQpA
      NnqQ6D3fINOwi8hZVxA58wr8NcdhHAc30UVqywo6F/2S1I61lHzuaxRfNB+j8w4iUoD6dRWQ
      tZZDhw7x2muv8eabbxKNRmltbeXaa6/lvPPOK5jbQeaKzaRp+dX3yBzeQ+XX/p3g5Nm97oLk
      hCOETzmb4Amn0vHkv9Lx9D34KmuInP43eRy1iMiH+8Qnga21fPe736W+vp758+fzwAMPMGfO
      HCZPnkxlZeWwm/6IL/sDqa2rKL/2VkJT5nzoLfCcUITSK79J8PhP0f7fd+J2tg7ySEVE+uYT
      B8AYw/nnn8+OHTv45S9/ye9+9zui0SjZbHbY3QzGplPEFj9BYNxUwrPO+9jnG3+Aknlfxu2I
      El/70iCMUETk6PUrANdccw333HMPN910E8lkks7OTu68807uu+++YXUZqNvRTGbfFkLTzsAE
      gn16TWDCNHxlVaTeWQbDLIgiMjz0+5vAfr+fyZMnM3nyZK699lqamppYv379sPoU4Ha0YFMJ
      /FV1fX6NEyzCKakk23oY62Yxvn7/VYuI5FROj0p+v5/q6mqqq6tzudn88weA7rV9VY8AAAmb
      SURBVBPBR8Nm0xhfMeT+1ssiIv2mI1MfOMUVOCWVpPdu7vNrsu3NuG1N+KvHD7sT4iIyPCgA
      feCUVBCceArJjW+Q7Wz52Odba0luWoIbayN88lxQAESkACkAfWAcH8V//fdkow10PvOLjz2/
      4bYepuP3/0bwuFMITT1jkEYpInJ0FIA+Chx3CsUX3kDslYV0PPXvuInY+55jrSW9fzvRe/4B
      m0lR9j//j74JLCIFKydLQRS6XC0FYdNJOp6+l87nHsBfcxxFp/0NgXEnYoJh3LYmkpuWEl/x
      LCZSSsWX/4XQ8bNytAciIrmVs7WACl0uF4OzbpbkpiV0PPOfZPZtxqaSf57jtzgjygl/6kJK
      LpqPb2RN/wcuIjJAFIB+sK5LpmEX2ca92GQXTmkV/trjcYrLddWPiBQ8BUBExKNyckcwEREZ
      mhQAERGPUgBERDxKARAR8aiCC4C1lkwmQyqV6vWNW2stqVTqfctMu65LKpXCdd3BHqqIyJBW
      UGsUW2tZvXo169evx+fzUVpayrx58wgGgyxZsoTNmzdjreXCCy/k2GOPJZFI8OSTTxKPxwmH
      w1x66aVEIpF874aIyJBQUJ8AMpkMb775JldffTXXXXcdgUCArVu30tTUxDvvvMPf/u3fcuml
      l7Jo0SIymQwrVqxgzJgxXH/99Rx77LG8+eab+d4FEZEho6A+ATiOQzgcpq2tDcdxaG9vp7S0
      lD179jB16lSCwSBVVVWEQiG6urrYsWMHV155JT6fj2nTpvH0009/6Laz2aymiURE3qPgAjB7
      9mweeughQqEQo0ePpra2ll27dlFVVQV034oyGAz2nCMIBLpv1hIKhUilUsCfl2NOJnu2a63F
      cQrqw46ISN4VVACSySQrVqzg61//OuFwmFdeeYW1a9cSiUSIx+NA98E8m83i93cP/ci7+nQ6
      3RMDYwzhcLhnu/omsIjI+xXU2+J4PI4xhlAohOM4lJeX09LSQm1tbc8J4FgsRmdnJ5FIhDFj
      xrB5c/dduurr6xk5cmSe90BEZOgoqLWAXNflmWeeoaGhgREjRtDR0cFVV11FWVkZf/jDH4hG
      o3R1dTF37lymT59Oe3s7Dz30EOXl5USjUa677joqKio+cLv6BCAi8q6CXQwumUySSqUoLi7u
      WVnTWktnZyfBYJBQKNTzXNd1aWtro6ys7EPn+RUAEZHeCjYAuaYAiIj0ptVARUQ8TAEQEfEo
      BUBExKMUABERj1IAREQ8SgEQEfEoBUBExKMUABERj1IAREQ8SgEQEfEoBUBExKMUABERj1IA
      REQ8SgEQEfEoBUBExKMUABERj1IAREQ8SgEQEfEoBUBExKMUABERj1IAREQ8SgEQEfEoBUBE
      xKMUABERj1IAREQ8SgEQEfEoBUBExKMUABERj1IAREQ8SgEQEfEoBUBExKMUABERj1IAREQ8
      SgEQEfEoBUBExKMUABERj1IAREQ8SgEQEfEoBUBExKMUABERj1IAREQ8SgEQEfEoBUBExKMU
      ABERj1IAREQ8SgEQEfEoBUBExKP8+R7AeyUSCd58881ejx133HGMHTuWXbt2sXHjRsLhMHPm
      zKGiogKAjRs3snXrViZPnszUqVMxxuRj6CIiQ05BfQLw+/3U1NT0/Nq6dSstLS0cOHCA559/
      ntmzZ1NXV8ejjz5KMplky5YtrFq1itNPP501a9bw9ttv53sXRESGjIILwJQpU5gyZQq1tbVk
      s1lOOukk2tvbGTduHLW1tUyZMgW/308mk2H16tVcdNFF1NTUcP7557Nhw4Z874KIyJBRUFNA
      R1hrWbJkCXPmzCEQCDBx4kRWrlzJww8/THt7O9OnT6eoqIhEIkF5eTkApaWlJBKJnten0+le
      28tkMnnZFxGRQlWQAYjH4+zYsYOzzz4bgKamJowxnHnmmXR2drJ27VrmzJkDdB/cj3jv/L/P
      5+v52VqL3+/v9ZiIiNcV1BTQEcuXL2fGjBkEg0EANm3axMyZMxk/fjxTp07F5/PR2tpKJBKh
      paUFgNbWVsLhMNAdAp/P1/PLcQpyN0VE8qrgjozxeJy3336bWbNm9byjHz9+PIsXL2bHjh2s
      X7+epqYmSktLmTNnDs888ww7duxg0aJFzJw5M8+jFxEZOox97xxKAejo6KC5uZnx48f3enzf
      vn28/fbbhMNhZs6cSUlJCQA7duxgy5YtHH/88UyaNOkDLwN1XRdrraaARET+zBhjCi4AA0EB
      EBHpzRhjCm4KSEREBocCICLiUQqAiIhHKQAiIh6lAIiIeJQCICLiUQqAiIhHKQAiIh6lAIiI
      eJQCICLiUQqAiIhHKQAiIh6lAIiIeJQCICLiUQqAiIhHKQAiIh6lAIiIeJQCICLiUQqAiIhH
      KQAiIh6lAIiIeJQCICLiUQqAiIhHKQAiIh6lAIiIeJQCICLiUQqAiIhHKQAiIh6lAIiIeJQC
      ICLiUQqAiIhHKQAiIh6lAIiIeJQCICLiUQqAiIhHKQAiIh6lAIiIeJQCICLiUQqAiIhHKQAi
      Ih6lAIiIeJQCICLiUQqAiIhHKQAiIh6lAIiIeJQCICLiUQqAiIhHKQAiIh7lz/cA3isWi/HM
      M8/0/D6dTnPKKadw8skn09TUxJ/+9CdisRgTJkzgs5/9LK7r8tJLL7F3717q6uo499xzCQQC
      edwDEZGho6ACUFRUxIUXXtjz+yeffJJIJEIymeSJJ57gkksuYfTo0bS0tGCMYd26dSSTSb74
      xS/y4osvsmrVKk4//fQ87oGIyNBRUAFwHIfy8nIADh8+jOu6TJgwgV27dlFXV0dFRQWJRIKq
      qioANm7cyKWXXkooFOK0007jueee+9AAWGvJZrODti8iIoWuoAJwhLWW119/nbPOOgvHcWhq
      amLDhg1Eo1GSySTHHHMMF198Ma7rEg6HAYhEIqRSqZ7XJ5PJXtsDMMYM/s6IiBSoggxANBql
      paWFiRMnAhAIBJg7dy6nn3461loefPBBGhsbgXcP7plMBp/P17ONUCjU87O1Fmttrz8XEfG6
      grsKyFrLkiVLOO2003oO2Mcccwz19fVA97v4kpISrLVUVlayb98+oHvKqKSkpOc57/0lIiLv
      V3CfAFpbWzlw4ADz5s3reWzMmDEEg0GeeOIJiouL6ejoYNSoUZxxxhk8+uij1NfXs3nzZj7/
      +c/nceQiIkOLsUfmUApEOp0mmUxSXFzc6/FsNsu+fftIp9OMHTu2Z4qnra2NhoYGqqurKS0t
      /cB3/K7ragpIROQ9jDGm4AIwEBQAEZHejDHm/wNnS9XXKB9+CwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
